[{"turnID": "100.35.7", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Multiple_Relation", "question": "Which works of art have a setting location of Los Angeles and were originally created in English language ? [CTX]", "answer": "Some of them are Pretty Persuasion, 3 Strikes, Psycho Cop 2, Black November, Memento, Last Vegas, Jack's Back, Trackdown, The Terminator, The Italian Job", "s_expression": "(AND (JOIN P840 Q65) (JOIN P31 Q838948) (JOIN P364 Q1860))", "s_expression_cores": ["(AND (JOIN P840 Q65) (JOIN P31 Q838948) (JOIN P364 Q1860))"], "sparql_delex": "SELECT ?x WHERE { ?x wdt:P840 wd:Q65 . ?x wdt:P31 wd:Q838948 .  ?x wdt:P364 wd:Q1860 .  }", "results": ["Q556967", "Q2474162", "Q1468993", "Q5208923", "Q3799507", "Q1423695", "Q301046", "Q1824522", "Q5882545", "Q59653", "Q1146503", "Q6945150", "Q1126383", "Q15643035", "Q1542548", "Q5581638", "Q3307637", "Q1196958", "Q2992526", "Q1452656", "Q498109", "Q1537568", "Q542988", "Q233464", "Q1141286", "Q1337306", "Q4730112", "Q3667388", "Q931165", "Q7745829", "Q725946", "Q665070", "Q2566505", "Q108006", "Q16867401", "Q7884023", "Q1745428", "Q171453", "Q15140437", "Q873186", "Q7786407", "Q13806537", "Q786279", "Q1459325", "Q15046598", "Q16975464", "Q777970", "Q5575670", "Q1198412", "Q5246765", "Q2311410", "Q853646", "Q7769098", "Q223887", "Q151848", "Q12124949", "Q1280763", "Q785157", "Q15647962", "Q506279", "Q594226", "Q3746623", "Q644987", "Q1217573", "Q75546", "Q691672", "Q2715172", "Q1148079", "Q1812060", "Q852162", "Q785719", "Q1098140", "Q330663", "Q854708", "Q785712", "Q150047", "Q12241522", "Q5245247", "Q5391482", "Q4081651", "Q12125792", "Q388311", "Q431708", "Q7717634", "Q5978153", "Q1089719", "Q241085", "Q635924", "Q194142", "Q462406", "Q648312", "Q1413292", "Q7430794", "Q2587881", "Q2162222", "Q4812367", "Q45672", "Q12101676", "Q533321", "Q2984618", "Q3877624", "Q783317", "Q7593166", "Q5296507", "Q16160846", "Q914216", "Q1551573", "Q1138916", "Q926309", "Q4808591", "Q478209", "Q752103", "Q48980", "Q1586077", "Q2109378", "Q588420", "Q1269562", "Q1057015", "Q7326653", "Q47703", "Q431793", "Q2902012", "Q5185251", "Q18415459", "Q1518589", "Q634115", "Q1788982", "Q1691401", "Q678775", "Q1248360", "Q180405", "Q497043", "Q434718", "Q936810", "Q3072040", "Q1146552", "Q12133405", "Q2057185", "Q4509386", "Q1217565", "Q7715352", "Q743190", "Q1753804", "Q107914", "Q1518334", "Q1057433", "Q2016342", "Q2998155", "Q1171692", "Q1382199", "Q16253143", "Q15043347", "Q1212511", "Q224069", "Q978927", "Q1754850", "Q4120951", "Q7160326", "Q1629547", "Q7160320", "Q1533374", "Q18153821", "Q4438260", "Q1455066", "Q1624927", "Q1418251", "Q2714553", "Q732960", "Q1194604", "Q494594", "Q7735982", "Q1925695", "Q332261", "Q190525", "Q2894928", "Q1192922", "Q3133377", "Q7734730", "Q881000", "Q16957388", "Q5564453", "Q1298893", "Q7810384", "Q601013", "Q1140744", "Q1971611", "Q17511138", "Q184591", "Q16249616", "Q1156922", "Q1422110", "Q1059532", "Q4734176", "Q944205", "Q18125637", "Q33191", "Q247091", "Q16781911", "Q15046492", "Q646372", "Q15046490", "Q105387", "Q923508", "Q188000", "Q225958", "Q1167169", "Q15104176", "Q607122", "Q8028245", "Q858840", "Q497262", "Q1100501", "Q289204", "Q21286431", "Q331617", "Q1193526", "Q39970", "Q2625088", "Q1779738", "Q3278999", "Q16238612", "Q1730419", "Q1198100", "Q39409", "Q7600766", "Q5421242", "Q7979448", "Q664214", "Q3977067", "Q4241876", "Q14369911", "Q474087", "Q2300097", "Q5879209", "Q471746", "Q191100", "Q469639", "Q1242772", "Q93868", "Q2780022", "Q3209472", "Q313884", "Q275553", "Q6090671", "Q195303", "Q1211343", "Q1484683", "Q210590", "Q2987914", "Q327312", "Q14878580", "Q15922298", "Q277903", "Q1416896", "Q3273366", "Q5908467", "Q2564595", "Q2533075", "Q1892083", "Q390063", "Q1340087", "Q2731768", "Q17510216", "Q5650999", "Q7314096", "Q3725901", "Q14514258", "Q832190", "Q300559", "Q465739", "Q822660", "Q5045264", "Q502703", "Q753605", "Q613485", "Q2629810", "Q1171141", "Q4426173", "Q255342", "Q2610935", "Q2362823", "Q786364", "Q12125715", "Q17182693", "Q1211837", "Q18155829", "Q13580949", "Q13522795", "Q895137", "Q749102", "Q5888726", "Q1051469", "Q692367", "Q237215", "Q15046558", "Q869862", "Q1116712", "Q301768", "Q154935", "Q4381733", "Q979726", "Q637290", "Q1750312", "Q5526277", "Q15973073", "Q7256301", "Q1111758", "Q7484853", "Q105598", "Q592663", "Q673101", "Q4690774", "Q594498", "Q5965544", "Q830208", "Q300502", "Q18155117", "Q1138614", "Q7738817", "Q2077169", "Q16993541", "Q219810", "Q27751", "Q3019722", "Q16834481", "Q747496", "Q4408969", "Q788822", "Q2550119", "Q644900", "Q202982", "Q7715172", "Q1217953", "Q486954", "Q1189180", "Q3043247", "Q913397", "Q5883045", "Q522235", "Q718936", "Q462447", "Q1356410", "Q576242", "Q5882621", "Q497256", "Q550558", "Q814343", "Q1212256", "Q470891", "Q1137811", "Q1367647", "Q2368683", "Q17560900", "Q203515", "Q5291414", "Q640387", "Q5171643", "Q990976", "Q324557", "Q2917817", "Q209538", "Q2152804", "Q634868", "Q3287737", "Q700350", "Q9293359", "Q274904", "Q1534188", "Q1446886", "Q751767", "Q2293972", "Q126492", "Q3838019", "Q155476", "Q16248424", "Q17104491", "Q605226", "Q1191093", "Q185776", "Q5882928", "Q1610996", "Q38970", "Q4185487", "Q1497862", "Q519490", "Q766745", "Q962544", "Q795042", "Q337078", "Q169089", "Q751769", "Q257515", "Q281296", "Q607363", "Q580716", "Q2597924", "Q193570", "Q4518859", "Q893925", "Q349122", "Q466233", "Q2005056", "Q780533", "Q265807", "Q208572", "Q1093391", "Q1542944", "Q144658", "Q15046565", "Q15046563", "Q7623116", "Q1138011", "Q654736", "Q2532981", "Q7259632", "Q2708940", "Q1280565", "Q2881092", "Q196685", "Q7751215", "Q16253164", "Q18153132", "Q6842784", "Q874932", "Q7897971", "Q629974", "Q7756265", "Q4656467", "Q1141912", "Q585983", "Q1688957", "Q720357", "Q727285", "Q1523217", "Q14650496", "Q379873", "Q832047", "Q12100134", "Q1170554", "Q1568640", "Q7911522", "Q302181", "Q27338", "Q896103", "Q1127709", "Q391784", "Q1392256", "Q4424044", "Q3138900", "Q1850866", "Q7098134", "Q167374", "Q1058512", "Q3038238", "Q16025079", "Q7775471", "Q258847", "Q1316883", "Q12125267", "Q184843", "Q16155186", "Q1428153", "Q7729998", "Q7736769", "Q3758083", "Q7897489", "Q686168", "Q2529557", "Q429397", "Q14320", "Q1083454", "Q403830", "Q3421998", "Q15699720", "Q7758789", "Q1759422", "Q5245590", "Q29697", "Q1137790", "Q478748", "Q1194718", "Q5508639", "Q2383324", "Q6746378", "Q1259427", "Q8027989", "Q770965", "Q1851378", "Q25188", "Q80959", "Q18153864", "Q2054175", "Q1022373", "Q3878657", "Q173955", "Q72962", "Q59610", "Q5071140", "Q282199", "Q2627384", "Q389014", "Q408725", "Q15046523", "Q15046522", "Q2031960", "Q3474574", "Q300330", "Q206336", "Q600299", "Q12124807", "Q2062140", "Q261923", "Q654474", "Q5113757", "Q7810897", "Q375186", "Q1218655", "Q837536", "Q548066", "Q2351514", "Q5882763", "Q3966930", "Q1229424", "Q548148", "Q1137899", "Q217627", "Q651060", "Q26644", "Q1740645", "Q191543", "Q1163440", "Q859494", "Q7767268", "Q164190", "Q1170515", "Q848274", "Q782955", "Q4645168", "Q5183180", "Q15728784", "Q1364349", "Q372842", "Q6533081", "Q980223", "Q12126640", "Q1305622", "Q7729494", "Q218290", "Q2607035", "Q5757372", "Q18636614", "Q313874", "Q339876", "Q2061752", "Q3882412", "Q1304303", "Q192142", "Q3220854", "Q184605", "Q1135365", "Q550520", "Q1435036", "Q1035093", "Q17049587", "Q550529", "Q4305450", "Q5068089", "Q272608", "Q744551", "Q4697146", "Q2072909", "Q287748", "Q6510441", "Q895440", "Q73028", "Q287326", "Q4657294", "Q289598", "Q1049906", "Q12126038", "Q5302942", "Q4144861", "Q661061", "Q3401480", "Q1961880", "Q7857954", "Q125494", "Q2905363", "Q428655", "Q862058", "Q1754956", "Q1783892", "Q3220959", "Q1467897", "Q16250666", "Q308929", "Q2066934", "Q207954", "Q1137931", "Q7979436", "Q3980396", "Q5516100", "Q5435001", "Q1113303", "Q1580686", "Q798133", "Q1790253", "Q937005", "Q206374", "Q848285", "Q2499390", "Q1153605", "Q1505923", "Q1886792", "Q3990842", "Q925980", "Q16253710", "Q961829", "Q3959754", "Q639481", "Q277080", "Q741026", "Q2463968", "Q3281730", "Q18157120", "Q1306380", "Q1139266", "Q3014145", "Q475789", "Q3258801", "Q4851195", "Q132351", "Q567936", "Q186323", "Q1759810", "Q16249638", "Q15917360", "Q5499812", "Q1253360", "Q525860", "Q4884260", "Q1585546", "Q1962809", "Q12124934", "Q369900", "Q6937772", "Q886194", "Q284333", "Q5275304", "Q223043", "Q337747", "Q6845783", "Q3990025", "Q7236272", "Q289127", "Q17515877", "Q5467504", "Q1476272", "Q5644331", "Q19641672", "Q7647234", "Q3791244", "Q1111228", "Q940139", "Q2617122", "Q5469751", "Q13226899", "Q2593159", "Q5190393", "Q4672720", "Q1065711", "Q6989310", "Q162255", "Q547120", "Q959483", "Q241504", "Q244975", "Q1758693", "Q1326650", "Q482377", "Q16831296", "Q2934753", "Q502067", "Q15046449", "Q5017590", "Q928693", "Q2349343", "Q12126638", "Q4186153", "Q170564", "Q7745881", "Q7759498", "Q12117783", "Q7897816", "Q5706852", "Q845252", "Q1427222", "Q2352222", "Q762926", "Q261550", "Q110203", "Q171861", "Q1740704", "Q7742857", "Q1197489", "Q4024772", "Q1676429", "Q426346", "Q269887", "Q5274300", "Q1381289", "Q557488", "Q3001953", "Q2672175", "Q222800", "Q3353168", "Q188845", "Q220376", "Q731776", "Q19730943", "Q647814", "Q868177", "Q248505", "Q774732", "Q219315", "Q2395265", "Q244333", "Q846679", "Q774229", "Q885161", "Q1165994", "Q431252", "Q5308224", "Q679657", "Q953106", "Q1124617", "Q254555", "Q12129673", "Q264722", "Q3212757", "Q192724", "Q221827", "Q785098", "Q168010", "Q2945752", "Q3120992", "Q2346766", "Q18154625", "Q6691396", "Q1616030", "Q673486", "Q6679736", "Q7252165", "Q3613082", "Q2005986", "Q722267", "Q7368870", "Q274748", "Q539545", "Q7769133", "Q1168660", "Q691785", "Q1211829", "Q7739835", "Q7748936", "Q16250686", "Q309153", "Q571197", "Q16326600", "Q1536600", "Q16253304", "Q691838", "Q5020977", "Q42198", "Q6888678", "Q14859564", "Q578809", "Q1160186", "Q3392725", "Q15046541", "Q211206", "Q841476", "Q742193", "Q1755067", "Q1142051", "Q638799", "Q771605", "Q730857", "Q6650012", "Q500280", "Q866048", "Q2665674", "Q380996", "Q210111", "Q629596", "Q1758096", "Q502091", "Q784610", "Q463768", "Q403033", "Q232106", "Q104123", "Q7564779", "Q662779", "Q1305706", "Q3476432", "Q16253801", "Q276415"], "coreference_resolved_question": "Which works of art have a setting location of Los Angeles and were originally created in English language?", "s_expression_fn": "(AND (JOIN narrative_location Los_Angeles) (JOIN instance_of work_of_art) (JOIN original_language_of_film_or_TV_show English))", "predicted_s_expression_fn": "(AND (JOIN narrative_setting Los_Angeles) (JOIN original_language_of_work_or_name English) (JOIN instance_of work_of_art))", "predicted_s_expression": "(AND (JOIN P840 Q65) (JOIN P407 Q1860) (JOIN P31 Q838948))", "sparql_attempt_count": 2, "actions": "SELECT ?x WHERE { ?x wdt:P840 wd:Q65 . ?x wdt:P407 wd:Q1860 . ?x wdt:P31 wd:Q838948 . }"}, {"turnID": "100.83.9", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Single_Relation", "question": "Which concepts do Michael Brun or Ivan Vaughan do for a living ? [CTX]", "answer": "autobiographer, guitarist, medical student", "s_expression": "(OR (AND (JOIN (R P106) Q11778323) (JOIN P31 Q151885)) (AND (JOIN (R P106) Q3156201) (JOIN P31 Q151885)))", "s_expression_cores": ["(AND (JOIN (R P106) Q11778323) (JOIN P31 Q151885))", "(AND (JOIN (R P106) Q3156201) (JOIN P31 Q151885))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q11778323 wdt:P106 ?x . ?x wdt:P31 wd:Q151885 .  } UNION { wd:Q3156201 wdt:P106 ?x . ?x wdt:P31 wd:Q151885 .  } }", "results": ["Q18814623", "Q855091", "Q21263917"], "coreference_resolved_question": "Which concepts do Michael Brun or Ivan Vaughan do for a living?", "s_expression_fn": "(OR (AND (JOIN (R occupation) Michael_Brun) (JOIN instance_of concept)) (AND (JOIN (R occupation) Ivan_Vaughan) (JOIN instance_of concept)))", "predicted_s_expression_fn": "(DISTINCT (AND (JOIN (R occupation) (VALUES Michael_Brun Ivan_Vaughan)) (JOIN instance_of concept))", "predicted_s_expression": "", "sparql_attempt_count": 2, "actions": ""}, {"turnID": "100.107.4", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Multiple_Relation", "question": "Which administrative territories are the native countriesof Willem Caspar de Jonge or are bordered by Altomonte ? [CTX]", "answer": "Roggiano Gravina, Lungro, San Lorenzo del Vallo, Kingdom of the Netherlands, Firmo, Acquaformosa, San Sosti, Saracena, San Donato di Ninea, Castrovillari", "s_expression": "(OR (AND (JOIN (R P27) Q19802079) (JOIN P31 Q15617994)) (AND (JOIN (R P47) Q53826) (JOIN P31 Q15617994)))", "s_expression_cores": ["(AND (JOIN (R P27) Q19802079) (JOIN P31 Q15617994))", "(AND (JOIN (R P47) Q53826) (JOIN P31 Q15617994))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q19802079 wdt:P27 ?x . ?x wdt:P31 wd:Q15617994 .  } UNION { wd:Q53826 wdt:P47 ?x . ?x wdt:P31 wd:Q15617994 .  } }", "results": ["Q53948", "Q53897", "Q53971", "Q29999", "Q53880", "Q53816", "Q53981", "Q53995", "Q53962", "Q53857"], "coreference_resolved_question": "Which administrative territories are the native countries of Willem Caspar de Jonge or are bordered by Altomonte?", "s_expression_fn": "(OR (AND (JOIN (R country_of_citizenship) Willem_Caspar_de_Jonge) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (AND (JOIN (R shares_border_with) Altomonte) (JOIN instance_of designation_for_an_administrative_territorial_entity)))", "predicted_s_expression_fn": "(DISTINCT (OR (AND (JOIN (R country_of_citizenship) Willem_Caspar_de_Jonge) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (AND (JOIN shares_border_with Altomonte) (JOIN instance_of designation_for_an_administrative_territorial_entity))))", "predicted_s_expression": "", "sparql_attempt_count": 1, "actions": ""}, {"turnID": "100.8.4", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Multiple_Relation", "question": "Which people plays Wurlitzer electric piano and are a male ? [CTX]", "answer": "Radoslav Lorkovi\u0107", "s_expression": "(AND (JOIN P1303 Q1759986) (JOIN P31 Q502895) (JOIN P21 Q6581097))", "s_expression_cores": ["(AND (JOIN P1303 Q1759986) (JOIN P31 Q502895) (JOIN P21 Q6581097))"], "sparql_delex": "SELECT ?x WHERE { ?x wdt:P1303 wd:Q1759986 . ?x wdt:P31 wd:Q502895 .  ?x wdt:P21 wd:Q6581097 .  }", "results": ["Q7281591"], "coreference_resolved_question": "Which people play Wurlitzer electric piano and are male?", "s_expression_fn": "(AND (JOIN instrument Wurlitzer_electric_piano) (JOIN instance_of common_name) (JOIN sex_or_gender male))", "predicted_s_expression_fn": "(AND (JOIN instrument Wurlitzer_electric_piano) (JOIN sex_or_gender male) (JOIN instance_of common_name))", "predicted_s_expression": "(AND (JOIN P1303 Q1759986) (JOIN P21 Q6581097) (JOIN P31 Q502895))", "sparql_attempt_count": 2, "actions": "SELECT ?x WHERE { ?x wdt:P1303 wd:Q1759986 . ?x wdt:P21 wd:Q6581097 . ?x wdt:P31 wd:Q502895 . }"}, {"turnID": "100.50.4", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Multiple_Relation", "question": "Which administrative territories are the origins of Leroy & Stitch and are Tsuru Aoki an inhabitant of ? [CTX]", "answer": "United States of America", "s_expression": "(AND (JOIN (R P495) Q1069050) (JOIN P31 Q15617994) (JOIN (R P27) Q4936315))", "s_expression_cores": ["(AND (JOIN (R P495) Q1069050) (JOIN P31 Q15617994) (JOIN (R P27) Q4936315))"], "sparql_delex": "SELECT ?x WHERE { wd:Q1069050 wdt:P495 ?x . ?x wdt:P31 wd:Q15617994 .  wd:Q4936315 wdt:P27 ?x .  }", "results": ["Q30"], "coreference_resolved_question": "Which administrative territories are the origins of Leroy & Stitch and are Tsuru Aoki an inhabitant of?", "s_expression_fn": "(AND (JOIN (R country_of_origin) Leroy_&_Stitch) (JOIN instance_of designation_for_an_administrative_territorial_entity) (JOIN (R country_of_citizenship) Tsuru_Aoki))", "predicted_s_expression_fn": "(AND (JOIN (R country_of_origin) Leroy_&_Stitch) (JOIN (R country_of_citizenship) Tsuru_Aoki) (JOIN instance_of designation_for_an_administrative_territorial_entity))", "predicted_s_expression": "(AND (JOIN (R P495) Q1069050) (JOIN (R P27) Q4936315) (JOIN P31 Q15617994))", "sparql_attempt_count": 2, "actions": "SELECT ?x WHERE { wd:Q1069050 wdt:P495 ?x . wd:Q4936315 wdt:P27 ?x . ?x wdt:P31 wd:Q15617994 . }"}, {"turnID": "100.68.2", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Multiple_Relation", "question": "Which people were born at Santa Cruz and have the gender as male ? [CTX]", "answer": "Some of them are Limberg M\u00e9ndez, Jos\u00e9 Alfredo Castillo, Marcos Andia, Jorge Cu\u00e9llar, Rosauro Rivero, Milton Coimbra, Enrique Flores Yrahory, Miguel Navarro, Ra\u00fal Gutierrez, Rudolf Knijnenburg", "s_expression": "(AND (JOIN P19 Q170688) (JOIN P31 Q502895) (JOIN P21 Q6581097))", "s_expression_cores": ["(AND (JOIN P19 Q170688) (JOIN P31 Q502895) (JOIN P21 Q6581097))"], "sparql_delex": "SELECT ?x WHERE { ?x wdt:P19 wd:Q170688 . ?x wdt:P31 wd:Q502895 .  ?x wdt:P21 wd:Q6581097 .  }", "results": ["Q16300417", "Q16300391", "Q3845924", "Q5873557", "Q625535", "Q3845829", "Q6757810", "Q16652065", "Q2083426", "Q23904841", "Q3940398", "Q5042602", "Q2460918", "Q5274829", "Q18637207", "Q16569137", "Q2634081", "Q6700929", "Q7420629", "Q16556852", "Q17489917", "Q16233646", "Q370507", "Q554944", "Q23771469", "Q2476639", "Q2474111", "Q16302358", "Q21503385", "Q5817685", "Q6861076", "Q365784", "Q3605830", "Q743597", "Q549784", "Q16801433", "Q772048", "Q353295", "Q6110781", "Q5340610", "Q20994083", "Q3857277", "Q2009571", "Q5835734", "Q3832469", "Q2733543", "Q3930835", "Q11692677", "Q20064524", "Q20064549", "Q5889600", "Q6112455", "Q2735425", "Q3638911", "Q3850349", "Q898690", "Q5942196", "Q7299782", "Q6844392", "Q6844649", "Q15622946", "Q5675849", "Q7365312", "Q3943225", "Q3930841", "Q1187027", "Q9093231", "Q3368809", "Q373873", "Q5833291", "Q5873524", "Q16302065", "Q5796302", "Q2665226", "Q6111337", "Q5395213", "Q2721315", "Q5202592", "Q3832473", "Q3810481", "Q15697117", "Q4020271", "Q6015169", "Q2331752", "Q3761532", "Q8078667", "Q16571392", "Q5655266", "Q6174736", "Q2563266", "Q3810806", "Q5444921", "Q6844699", "Q2474534", "Q2656736", "Q8001108", "Q20164449", "Q1997226", "Q3810470", "Q552282", "Q6700326", "Q5694401", "Q1406602", "Q3792250", "Q2633618", "Q21044335", "Q2553339", "Q2325701", "Q3956250", "Q10556593", "Q1482379", "Q16297483", "Q2939282", "Q2476066", "Q3624547", "Q20726462", "Q6015667", "Q2463281", "Q5983645", "Q20640682", "Q9028709", "Q20090136", "Q960139", "Q922420", "Q5935989", "Q3764210", "Q5938656", "Q5726239", "Q5042709", "Q5889785", "Q5955129", "Q3751054", "Q21002481", "Q2393594", "Q16197254", "Q6437300", "Q20090961", "Q2422878", "Q2633970", "Q19577524", "Q5664475", "Q20631269", "Q1459167", "Q2635610", "Q7121758", "Q7365194", "Q2567993", "Q7322845", "Q15708590", "Q734117", "Q20711101", "Q3660086", "Q3938203", "Q5866080", "Q6793853", "Q19703929", "Q5934816", "Q520731", "Q2467088", "Q246243", "Q4716629", "Q5664762", "Q178461", "Q2633629", "Q10269157", "Q5829922", "Q5303778", "Q5982797", "Q2467100", "Q6292816", "Q5868983", "Q2458025", "Q467979", "Q1983631", "Q20994203", "Q946781", "Q6175476", "Q5655345", "Q20746651", "Q10557615", "Q3811165", "Q3941001"], "coreference_resolved_question": "Which people were born at Santa Cruz and have the gender as male?", "s_expression_fn": "(AND (JOIN place_of_birth Santa_Cruz) (JOIN instance_of common_name) (JOIN sex_or_gender male))", "predicted_s_expression_fn": "(AND (JOIN place_of_birth Santa_Cruz) (JOIN sex_or_gender male) (JOIN instance_of common_name))", "predicted_s_expression": "(AND (JOIN P19 Q170688) (JOIN P21 Q6581097) (JOIN P31 Q502895))", "sparql_attempt_count": 2, "actions": "SELECT ?x WHERE { ?x wdt:P19 wd:Q170688 . ?x wdt:P21 wd:Q6581097 . ?x wdt:P31 wd:Q502895 . }"}, {"turnID": "100.68.5", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Single_Relation", "question": "Which people were the first persons to come up with ondes Martenot or 912 Maritima ? [CTX]", "answer": "Friedrich Karl Arnold Schwassmann, Maurice Martenot", "s_expression": "(OR (AND (JOIN (R P61) Q862501) (JOIN P31 Q502895)) (AND (JOIN (R P61) Q157855) (JOIN P31 Q502895)))", "s_expression_cores": ["(AND (JOIN (R P61) Q862501) (JOIN P31 Q502895))", "(AND (JOIN (R P61) Q157855) (JOIN P31 Q502895))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q862501 wdt:P61 ?x . ?x wdt:P31 wd:Q502895 .  } UNION { wd:Q157855 wdt:P61 ?x . ?x wdt:P31 wd:Q502895 .  } }", "results": ["Q57492", "Q1333326"], "coreference_resolved_question": "Which people were the first persons to come up with ondes Martenot or 912 Maritima?", "s_expression_fn": "(OR (AND (JOIN (R discoverer_or_inventor) ondes_Martenot) (JOIN instance_of common_name)) (AND (JOIN (R discoverer_or_inventor) 912_Maritima) (JOIN instance_of common_name)))", "predicted_s_expression_fn": "(DISTINCT (AND (JOIN (R inventor) (OR ondes_Martenot 912_Maritima)) (JOIN instance_of common_name)))", "predicted_s_expression": "", "sparql_attempt_count": 2, "actions": ""}, {"turnID": "100.41.10", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Single_Relation", "question": "Which works of art have comedy and drama film as genre ? [CTX]", "answer": "Some of them are A Hologram for the King, San Papye, Captain Fantastic, My Blind Brother, La La Land, The Beast, Wife vs. Secretary, Get Low, Max Rose, Queen Mimi", "s_expression": "(AND (JOIN P136 Q40831) (JOIN P31 Q838948) (JOIN P136 Q130232))", "s_expression_cores": ["(AND (JOIN P136 Q40831) (JOIN P31 Q838948) (JOIN P136 Q130232))"], "sparql_delex": "SELECT ?x WHERE { ?x wdt:P136 wd:Q40831 . ?x wdt:P31 wd:Q838948 .  ?x wdt:P136 wd:Q130232 .  }", "results": ["Q3793109", "Q17515877", "Q20002379", "Q20762698", "Q1392744", "Q18703094", "Q21935502", "Q2824971", "Q451272", "Q13360029", "Q1781187", "Q21810615", "Q24630598", "Q26912634", "Q21925075", "Q16251439", "Q3521099", "Q23767784", "Q23579040", "Q20856802", "Q18155835", "Q7243050", "Q17165619", "Q19872548"], "coreference_resolved_question": "Which works of art have comedy and drama film as genre?", "s_expression_fn": "(AND (JOIN genre comedy) (JOIN instance_of work_of_art) (JOIN genre drama_film))", "predicted_s_expression_fn": "(AND (JOIN (R genre) comedy) (JOIN (R genre) drama_film) (JOIN instance_of work_of_art))", "predicted_s_expression": "(AND (JOIN P136 Q40831) (JOIN P136 Q130232) (JOIN P31 Q838948))", "sparql_attempt_count": 5, "actions": "SELECT ?x WHERE { ?x wdt:P136 wd:Q40831 . ?x wdt:P136 wd:Q130232 . ?x wdt:P31 wd:Q838948 . }"}, {"turnID": "100.41.11", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Single_Relation", "question": "Which languages were used originally for the creation of San Papye or Minotaur ? [CTX]", "answer": "English", "s_expression": "(OR (AND (JOIN (R P364) Q21810615) (JOIN P31 Q34770)) (AND (JOIN (R P364) Q2037176) (JOIN P31 Q34770)))", "s_expression_cores": ["(AND (JOIN (R P364) Q21810615) (JOIN P31 Q34770))", "(AND (JOIN (R P364) Q2037176) (JOIN P31 Q34770))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q21810615 wdt:P364 ?x . ?x wdt:P31 wd:Q34770 .  } UNION { wd:Q2037176 wdt:P364 ?x . ?x wdt:P31 wd:Q34770 .  } }", "results": ["Q1860"], "coreference_resolved_question": "Which languages were used originally for the creation of San Papye or Minotaur?", "s_expression_fn": "(OR (AND (JOIN (R original_language_of_film_or_TV_show) San_Papye) (JOIN instance_of language)) (AND (JOIN (R original_language_of_film_or_TV_show) Minotaur) (JOIN instance_of language)))", "predicted_s_expression_fn": "(DISTINCT (AND (JOIN (R original_language) (VALUES San_Papye Minotaur)) (JOIN instance_of language)))", "predicted_s_expression": "(DISTINCT (AND (JOIN (R P364) (VALUES Q21810615 Q2037176)) (JOIN P31 Q34770)))", "sparql_attempt_count": 2, "actions": "SELECT DISTINCT ?x WHERE { VALUES ?x0 { wd:Q21810615 wd:Q2037176 } . ?x0 wdt:P364 ?x . ?x wdt:P31 wd:Q34770 . }"}, {"turnID": "100.47.4", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Multiple_Relation", "question": "Which occupations were a position held by Antoni Rosal i Sala or are the job of Du\u0161an Srezojevi\u0107 ? [CTX]", "answer": "Member of the Congress of Deputies of Spain, poet", "s_expression": "(OR (AND (JOIN (R P39) Q20876608) (JOIN P31 Q12737077)) (AND (JOIN (R P106) Q12751364) (JOIN P31 Q12737077)))", "s_expression_cores": ["(AND (JOIN (R P39) Q20876608) (JOIN P31 Q12737077))", "(AND (JOIN (R P106) Q12751364) (JOIN P31 Q12737077))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q20876608 wdt:P39 ?x . ?x wdt:P31 wd:Q12737077 .  } UNION { wd:Q12751364 wdt:P106 ?x . ?x wdt:P31 wd:Q12737077 .  } }", "results": ["Q18171345", "Q49757"], "coreference_resolved_question": "Which occupations were a position held by Antoni Rosal i Sala or are the job of Du\u0161an Srezojevi\u0107?", "s_expression_fn": "(OR (AND (JOIN (R position_held) Antoni_Rosal_i_Sala) (JOIN instance_of occupation)) (AND (JOIN (R occupation) Du\u0161an_Srezojevi\u0107) (JOIN instance_of occupation)))", "predicted_s_expression_fn": "(OR (AND (JOIN position_held Antoni_Rosal_i_Sala) (JOIN instance_of occupation) (AND (JOIN occupation Du\u0161an_Srezojevi\u0107) (JOIN instance_of occupation)))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "100.29.6", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Multiple_Relation", "question": "Which administrative territories have diplomatic relations with Germany and are Amuri a part of ? [CTX]", "answer": "Indonesia", "s_expression": "(AND (JOIN (R P530) Q183) (JOIN P31 Q15617994) (JOIN (R P17) Q26719650))", "s_expression_cores": ["(AND (JOIN (R P530) Q183) (JOIN P31 Q15617994) (JOIN (R P17) Q26719650))"], "sparql_delex": "SELECT ?x WHERE { wd:Q183 wdt:P530 ?x . ?x wdt:P31 wd:Q15617994 .  wd:Q26719650 wdt:P17 ?x .  }", "results": ["Q252"], "coreference_resolved_question": "Which administrative territories have diplomatic relations with Germany and are Amuri a part of?", "s_expression_fn": "(AND (JOIN (R diplomatic_relation) Germany) (JOIN instance_of designation_for_an_administrative_territorial_entity) (JOIN (R country) Amuri))", "predicted_s_expression_fn": "(AND (JOIN diplomatic_relation Germany) (JOIN (R part_of) Amuri) (JOIN instance_of designation_for_an_administrative_territorial_entity))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "100.82.6", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Multiple_Relation", "question": "Which classification schemes are Anglo-Frisian languages a component of or are the vessel classes of German submarine U-251 ? [CTX]", "answer": "German Type VIIC submarine, West Germanic languages, Ingvaeonic languages", "s_expression": "(OR (AND (JOIN (R P361) Q5329170) (JOIN P31 Q5962346)) (AND (JOIN (R P289) Q321148) (JOIN P31 Q5962346)))", "s_expression_cores": ["(AND (JOIN (R P361) Q5329170) (JOIN P31 Q5962346))", "(AND (JOIN (R P289) Q321148) (JOIN P31 Q5962346))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q5329170 wdt:P361 ?x . ?x wdt:P31 wd:Q5962346 .  } UNION { wd:Q321148 wdt:P289 ?x . ?x wdt:P31 wd:Q5962346 .  } }", "results": ["Q10374571", "Q26721", "Q30134"], "coreference_resolved_question": "Which classification schemes are Anglo-Frisian languages a component of or are the vessel classes of German submarine U-251?", "s_expression_fn": "(OR (AND (JOIN (R part_of) Anglo-Frisian_languages) (JOIN instance_of classification_scheme)) (AND (JOIN (R vessel_class) German_submarine_U-251) (JOIN instance_of classification_scheme)))", "predicted_s_expression_fn": "(OR (AND (JOIN (R component_of) Anglo-Frisian_languages) (JOIN instance_of classification_scheme)) (AND (JOIN (R vessel_class) German_submarine_U-251) (JOIN instance_of classification_scheme)))", "predicted_s_expression": "", "sparql_attempt_count": 1, "actions": ""}, {"turnID": "100.77.5", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Multiple_Relation", "question": "Which people wrote the script for A Friend Will Come Tonight or were performed by Fernande ? [CTX]", "answer": "Jacques Compan\u00e9ez, Yvan No\u00e9, Pierre Nicolas, Georges Brassens, Jo\u00ebl Favreau", "s_expression": "(OR (AND (JOIN (R P58) Q19892878) (JOIN P31 Q502895)) (AND (JOIN (R P175) Q3069406) (JOIN P31 Q502895)))", "s_expression_cores": ["(AND (JOIN (R P58) Q19892878) (JOIN P31 Q502895))", "(AND (JOIN (R P175) Q3069406) (JOIN P31 Q502895))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q19892878 wdt:P58 ?x . ?x wdt:P31 wd:Q502895 .  } UNION { wd:Q3069406 wdt:P175 ?x . ?x wdt:P31 wd:Q502895 .  } }", "results": ["Q176962", "Q3573379", "Q3386430", "Q449", "Q3187401"], "coreference_resolved_question": "Which people wrote the script for A Friend Will Come Tonight or were performed by Fernande?", "s_expression_fn": "(OR (AND (JOIN (R screenwriter) A_Friend_Will_Come_Tonight) (JOIN instance_of common_name)) (AND (JOIN (R performer) Fernande) (JOIN instance_of common_name)))", "predicted_s_expression_fn": "(DISTINCT (OR (AND (JOIN (R screenwriter) A_Friend_Will_Come_Tonight) (JOIN instance_of common_name)) (AND (JOIN (R performer) Fernande) (JOIN instance_of common_name))))", "predicted_s_expression": "", "sparql_attempt_count": 1, "actions": ""}, {"turnID": "100.110.3", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Single_Relation", "question": "Which nucleic acid sequences genes encode Methylcrotonoyl-CoA carboxylase subunit alpha, mitochondrial or hypothetical protein    SMc02842 ? [CTX]", "answer": "hypothetical protein    SMc02842, Mccc1", "s_expression": "(OR (AND (JOIN (R P702) Q21985756) (JOIN P31 Q863908)) (AND (JOIN (R P702) Q24110258) (JOIN P31 Q863908)))", "s_expression_cores": ["(AND (JOIN (R P702) Q21985756) (JOIN P31 Q863908))", "(AND (JOIN (R P702) Q24110258) (JOIN P31 Q863908))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q21985756 wdt:P702 ?x . ?x wdt:P31 wd:Q863908 .  } UNION { wd:Q24110258 wdt:P702 ?x . ?x wdt:P31 wd:Q863908 .  } }", "results": ["Q23168416", "Q18265241"], "coreference_resolved_question": "Which nucleic acid sequences genes encode Methylcrotonoyl-CoA carboxylase subunit alpha, mitochondrial or hypothetical protein SMc02842?", "s_expression_fn": "(OR (AND (JOIN (R encoded_by) Methylcrotonoyl-CoA_carboxylase_subunit_alpha,_mitochondrial) (JOIN instance_of nucleic_acid_sequence)) (AND (JOIN (R encoded_by) hypothetical_protein____SMc02842) (JOIN instance_of nucleic_acid_sequence)))", "predicted_s_expression_fn": "(OR (AND (JOIN encoded_by Methylcrotonoyl-CoA_carboxylase_subunit_alpha,_mitochondrial) (JOIN instance_of nucleic_acid_sequence)) (AND (JOIN encoded_by hypothetical_protein____SMc02842) (JOIN instance_of nucleic_acid_sequence)))", "predicted_s_expression": "", "sparql_attempt_count": 1, "actions": ""}, {"turnID": "100.86.5", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Multiple_Relation", "question": "Which works of art have Louise Currie as actor and were originally created in English language ? [CTX]", "answer": "The Ape Man, The Masked Marvel, Adventures of Captain Marvel", "s_expression": "(AND (JOIN P161 Q6688701) (JOIN P31 Q838948) (JOIN P364 Q1860))", "s_expression_cores": ["(AND (JOIN P161 Q6688701) (JOIN P31 Q838948) (JOIN P364 Q1860))"], "sparql_delex": "SELECT ?x WHERE { ?x wdt:P161 wd:Q6688701 . ?x wdt:P31 wd:Q838948 .  ?x wdt:P364 wd:Q1860 .  }", "results": ["Q3519798", "Q7750532", "Q1607114"], "coreference_resolved_question": "Which works of art have Louise Currie as actor and were originally created in English language?", "s_expression_fn": "(AND (JOIN cast_member Louise_Currie) (JOIN instance_of work_of_art) (JOIN original_language_of_film_or_TV_show English))", "predicted_s_expression_fn": "(AND (JOIN cast_member Louise_Currie) (JOIN original_language_of_film_or_TV_show English) (JOIN instance_of work_of_art))", "predicted_s_expression": "(AND (JOIN P161 Q6688701) (JOIN P364 Q1860) (JOIN P31 Q838948))", "sparql_attempt_count": 2, "actions": "SELECT ?x WHERE { ?x wdt:P161 wd:Q6688701 . ?x wdt:P364 wd:Q1860 . ?x wdt:P31 wd:Q838948 . }"}, {"turnID": "100.86.6", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Single_Relation", "question": "Which administrative territories are the countries of citizenship of Louise Currie or Itay Tiran ? [CTX]", "answer": "United States of America, Israel", "s_expression": "(OR (AND (JOIN (R P27) Q6688701) (JOIN P31 Q15617994)) (AND (JOIN (R P27) Q1675238) (JOIN P31 Q15617994)))", "s_expression_cores": ["(AND (JOIN (R P27) Q6688701) (JOIN P31 Q15617994))", "(AND (JOIN (R P27) Q1675238) (JOIN P31 Q15617994))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q6688701 wdt:P27 ?x . ?x wdt:P31 wd:Q15617994 .  } UNION { wd:Q1675238 wdt:P27 ?x . ?x wdt:P31 wd:Q15617994 .  } }", "results": ["Q30", "Q801"], "coreference_resolved_question": "Which administrative territories are the countries of citizenship of Louise Currie or Itay Tiran?", "s_expression_fn": "(OR (AND (JOIN (R country_of_citizenship) Louise_Currie) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (AND (JOIN (R country_of_citizenship) Itay_Tiran) (JOIN instance_of designation_for_an_administrative_territorial_entity)))", "predicted_s_expression_fn": "(DISTINCT (AND (JOIN (R country_of_citizenship) (VALUES Louise_Currie Itay_Tiran)) (JOIN instance_of designation_for_an_administrative_territorial_entity)))", "predicted_s_expression": "(DISTINCT (AND (JOIN (R P27) (VALUES Q6688701 Q1675238)) (JOIN P31 Q15617994)))", "sparql_attempt_count": 2, "actions": "SELECT DISTINCT ?x WHERE { VALUES ?x0 { wd:Q6688701 wd:Q1675238 } . ?x0 wdt:P27 ?x . ?x wdt:P31 wd:Q15617994 . }"}, {"turnID": "100.120.4", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Multiple_Relation", "question": "Which political territories are Kelvion Holding a part of or are the native countriesof Max Schneckenburger ? [CTX]", "answer": "Germany", "s_expression": "(OR (AND (JOIN (R P17) Q25894686) (JOIN P31 Q1048835)) (AND (JOIN (R P27) Q71399) (JOIN P31 Q1048835)))", "s_expression_cores": ["(AND (JOIN (R P17) Q25894686) (JOIN P31 Q1048835))", "(AND (JOIN (R P27) Q71399) (JOIN P31 Q1048835))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q25894686 wdt:P17 ?x . ?x wdt:P31 wd:Q1048835 .  } UNION { wd:Q71399 wdt:P27 ?x . ?x wdt:P31 wd:Q1048835 .  } }", "results": ["Q183"], "coreference_resolved_question": "Which political territories are Kelvion Holding a part of or are the native countries of Max Schneckenburger?", "s_expression_fn": "(OR (AND (JOIN (R country) Kelvion_Holding) (JOIN instance_of political_territorial_entity)) (AND (JOIN (R country_of_citizenship) Max_Schneckenburger) (JOIN instance_of political_territorial_entity)))", "predicted_s_expression_fn": "(DISTINCT (OR (AND (JOIN (R country) Kelvion_Holding) (JOIN (R country_of_citizenship) Max_Schneckenburger)))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "100.101.7", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Single_Relation", "question": "Which cities were Craig Doyle or Kevin Heffernan born ? [CTX]", "answer": "Dublin", "s_expression": "(OR (AND (JOIN (R P19) Q5180910) (JOIN P31 Q515)) (AND (JOIN (R P19) Q3195714) (JOIN P31 Q515)))", "s_expression_cores": ["(AND (JOIN (R P19) Q5180910) (JOIN P31 Q515))", "(AND (JOIN (R P19) Q3195714) (JOIN P31 Q515))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q5180910 wdt:P19 ?x . ?x wdt:P31 wd:Q515 .  } UNION { wd:Q3195714 wdt:P19 ?x . ?x wdt:P31 wd:Q515 .  } }", "results": ["Q1761"], "coreference_resolved_question": "Which cities were Craig Doyle or Kevin Heffernan born?", "s_expression_fn": "(OR (AND (JOIN (R place_of_birth) Craig_Doyle) (JOIN instance_of city)) (AND (JOIN (R place_of_birth) Kevin_Heffernan) (JOIN instance_of city)))", "predicted_s_expression_fn": "(DISTINCT (AND (JOIN (R place_of_birth) (VALUES Craig_Doyle Kevin_Heffernan)) (JOIN instance_of city)))", "predicted_s_expression": "(DISTINCT (AND (JOIN (R P19) (VALUES Q5180910 Q438583)) (JOIN P31 Q515)))", "sparql_attempt_count": 2, "actions": "SELECT DISTINCT ?x WHERE { VALUES ?x0 { wd:Q5180910 wd:Q438583 } . ?x0 wdt:P19 ?x . ?x wdt:P31 wd:Q515 . }"}, {"turnID": "100.85.10", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Single_Relation", "question": "Which administrative territories are P\u00e8re Lachaise Cemetery or Tha Ngon present in ? [CTX]", "answer": "France, Laos", "s_expression": "(OR (AND (JOIN (R P17) Q311) (JOIN P31 Q15617994)) (AND (JOIN (R P17) Q7708755) (JOIN P31 Q15617994)))", "s_expression_cores": ["(AND (JOIN (R P17) Q311) (JOIN P31 Q15617994))", "(AND (JOIN (R P17) Q7708755) (JOIN P31 Q15617994))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q311 wdt:P17 ?x . ?x wdt:P31 wd:Q15617994 .  } UNION { wd:Q7708755 wdt:P17 ?x . ?x wdt:P31 wd:Q15617994 .  } }", "results": ["Q142", "Q819"], "coreference_resolved_question": "Which administrative territories are P\u00e8re Lachaise Cemetery or Tha Ngon present in?", "s_expression_fn": "(OR (AND (JOIN (R country) P\u00e8re_Lachaise_Cemetery) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (AND (JOIN (R country) Tha_Ngon) (JOIN instance_of designation_for_an_administrative_territorial_entity)))", "predicted_s_expression_fn": "(DISTINCT (AND (JOIN (R country) (VALUES P\u00e8re_Lachaise_Cemetery Tha_Ngon)) (JOIN instance_of designation_for_an_administrative_territorial_entity))", "predicted_s_expression": "", "sparql_attempt_count": 2, "actions": ""}, {"turnID": "100.57.3", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Single_Relation", "question": "Which political territories are Ralf Kohl or Jono Grant a civilian of ? [CTX]", "answer": "Canada, Germany", "s_expression": "(OR (AND (JOIN (R P27) Q2129297) (JOIN P31 Q1048835)) (AND (JOIN (R P27) Q17238903) (JOIN P31 Q1048835)))", "s_expression_cores": ["(AND (JOIN (R P27) Q2129297) (JOIN P31 Q1048835))", "(AND (JOIN (R P27) Q17238903) (JOIN P31 Q1048835))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q2129297 wdt:P27 ?x . ?x wdt:P31 wd:Q1048835 .  } UNION { wd:Q17238903 wdt:P27 ?x . ?x wdt:P31 wd:Q1048835 .  } }", "results": ["Q16", "Q183"], "coreference_resolved_question": "Which political territories are Ralf Kohl or Jono Grant a civilian of?", "s_expression_fn": "(OR (AND (JOIN (R country_of_citizenship) Ralf_Kohl) (JOIN instance_of political_territorial_entity)) (AND (JOIN (R country_of_citizenship) Jono_Grant) (JOIN instance_of political_territorial_entity)))", "predicted_s_expression_fn": "(DISTINCT (AND (JOIN (R country_of_citizenship) (VALUES Ralf_Kohl Jono_Grant)) (JOIN instance_of political_territorial_entity))", "predicted_s_expression": "", "sparql_attempt_count": 2, "actions": ""}, {"turnID": "100.96.7", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Multiple_Relation", "question": "Which administrative territories did Colombia or Ecuador, Church Roofs originate or are the native countriesof Fabiola ? [CTX]", "answer": "United States of America, Kingdom of the Netherlands", "s_expression": "(OR (AND (JOIN (R P495) Q20199491) (JOIN P31 Q15617994)) (AND (JOIN (R P27) Q2781260) (JOIN P31 Q15617994)))", "s_expression_cores": ["(AND (JOIN (R P495) Q20199491) (JOIN P31 Q15617994))", "(AND (JOIN (R P27) Q2781260) (JOIN P31 Q15617994))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q20199491 wdt:P495 ?x . ?x wdt:P31 wd:Q15617994 .  } UNION { wd:Q2781260 wdt:P27 ?x . ?x wdt:P31 wd:Q15617994 .  } }", "results": ["Q30", "Q29999"], "coreference_resolved_question": "Which administrative territories did Colombia or Ecuador, Church Roofs originate or are the native countries of Fabiola?", "s_expression_fn": "(OR (AND (JOIN (R country_of_origin) Colombia_or_Ecuador,_Church_Roofs) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (AND (JOIN (R country_of_citizenship) Fabiola) (JOIN instance_of designation_for_an_administrative_territorial_entity)))", "predicted_s_expression_fn": "(DISTINCT (OR (AND (JOIN (R country_of_origin) Colombia_or_Ecuador,_Church_Roofs) (JOIN (R country_of_citizenship) Fabiola)))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "100.111.7", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Multiple_Relation", "question": "Which administrative territories have diplomatic relationships with United States of America or are Lebanese government of July 2005 situated in ? [CTX]", "answer": "Some of them are Liechtenstein, Lithuania, Argentina, Yemen, Albania, Lebanon, Iraq, Afghanistan, Brazil, Cape Verde", "s_expression": "(OR (AND (JOIN (R P530) Q30) (JOIN P31 Q15617994)) (AND (JOIN (R P17) Q1822811) (JOIN P31 Q15617994)))", "s_expression_cores": ["(AND (JOIN (R P530) Q30) (JOIN P31 Q15617994))", "(AND (JOIN (R P17) Q1822811) (JOIN P31 Q15617994))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q30 wdt:P530 ?x . ?x wdt:P31 wd:Q15617994 .  } UNION { wd:Q1822811 wdt:P17 ?x . ?x wdt:P31 wd:Q15617994 .  } }", "results": ["Q805", "Q38", "Q159", "Q222", "Q801", "Q155", "Q148", "Q1011", "Q889", "Q822", "Q17", "Q37", "Q953", "Q668", "Q403", "Q347", "Q414", "Q796"], "coreference_resolved_question": "Which administrative territories have diplomatic relationships with United States of America or are Lebanese government of July 2005 situated in?", "s_expression_fn": "(OR (AND (JOIN (R diplomatic_relation) United_States_of_America) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (AND (JOIN (R country) Lebanese_government_of_July_2005) (JOIN instance_of designation_for_an_administrative_territorial_entity)))", "predicted_s_expression_fn": "(OR (AND (JOIN diplomatic_relation United_States_of_America) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (AND (JOIN (R located_in) Lebanese_government_of_July_2005) (JOIN instance_of designation_for_an_administrative_territorial_entity)))", "predicted_s_expression": "", "sparql_attempt_count": 1, "actions": ""}, {"turnID": "100.94.6", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Single_Relation", "question": "Which french administrative divisions were Jacques Genest or Jean de La Chapelle born ? [CTX]", "answer": "Bourges, Tain-l'Hermitage", "s_expression": "(OR (AND (JOIN (R P19) Q18202615) (JOIN P31 Q20667921)) (AND (JOIN (R P19) Q3175477) (JOIN P31 Q20667921)))", "s_expression_cores": ["(AND (JOIN (R P19) Q18202615) (JOIN P31 Q20667921))", "(AND (JOIN (R P19) Q3175477) (JOIN P31 Q20667921))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q18202615 wdt:P19 ?x . ?x wdt:P31 wd:Q20667921 .  } UNION { wd:Q3175477 wdt:P19 ?x . ?x wdt:P31 wd:Q20667921 .  } }", "results": ["Q132404", "Q280296"], "coreference_resolved_question": "Which french administrative divisions were Jacques Genest or Jean de La Chapelle born?", "s_expression_fn": "(OR (AND (JOIN (R place_of_birth) Jacques_Genest) (JOIN instance_of type_of_french_administrative_division)) (AND (JOIN (R place_of_birth) Jean_de_La_Chapelle) (JOIN instance_of type_of_french_administrative_division)))", "predicted_s_expression_fn": "(DISTINCT (AND (JOIN (R place_of_birth) (VALUES Jacques_Genest Jean_de_La_Chapelle) (JOIN instance_of french_administrative_division)))", "predicted_s_expression": "", "sparql_attempt_count": 2, "actions": ""}, {"turnID": "100.94.12", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Multiple_Relation", "question": "Which people do N\u00eemes serve as the head of government for or are in Kubinke the Barber ? [CTX]", "answer": "Some of them are Edgar Tailhades, K\u00e4the Haack, Ferdinand Martini, Alain Clary, Jean Bousquet, \u00c9lie Castan, Julius Falkenstein, L\u00e9on Vergnole, \u00c9mile Jourdan, Fritz Kampers", "s_expression": "(OR (AND (JOIN (R P6) Q42807) (JOIN P31 Q502895)) (AND (JOIN (R P161) Q21869503) (JOIN P31 Q502895)))", "s_expression_cores": ["(AND (JOIN (R P6) Q42807) (JOIN P31 Q502895))", "(AND (JOIN (R P161) Q21869503) (JOIN P31 Q502895))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q42807 wdt:P6 ?x . ?x wdt:P31 wd:Q502895 .  } UNION { wd:Q21869503 wdt:P161 ?x . ?x wdt:P31 wd:Q502895 .  } }", "results": ["Q106061", "Q70289", "Q98629", "Q3170946", "Q98363", "Q1685137", "Q96784", "Q2466002", "Q107483", "Q446936", "Q2829670", "Q1405609", "Q665118", "Q95784", "Q1646281", "Q2653679", "Q3587724"], "coreference_resolved_question": "Which people do N\u00eemes serve as the head of government for or are in Kubinke the Barber?", "s_expression_fn": "(OR (AND (JOIN (R head_of_government) N\u00eemes) (JOIN instance_of common_name)) (AND (JOIN (R cast_member) Kubinke_the_Barber) (JOIN instance_of common_name)))", "predicted_s_expression_fn": "(OR (AND (JOIN head_of_government N\u00eemes) (JOIN instance_of common_name)) (AND (JOIN (R occupation) Kubinke_the_Barber) (JOIN instance_of common_name))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "100.22.2", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Single_Relation|Incomplete", "question": "Which language does Roberto Soffritti speak in ? [SEP] Italian [SEP] Which sex does that person possess ? [SEP] male [SEP] And also Charles Planelli de Lavalette [CTX]", "answer": "male", "s_expression": "(AND (JOIN (R P21) Q1109987) (JOIN P31 Q290) (JOIN (R P21) Q2960025))", "s_expression_cores": ["(AND (JOIN (R P21) Q1109987) (JOIN P31 Q290) (JOIN (R P21) Q2960025))"], "sparql_delex": "SELECT ?x WHERE { wd:Q1109987 wdt:P21 ?x . ?x wdt:P31 wd:Q290 .  wd:Q2960025 wdt:P21 ?x .  }", "results": ["Q6581097"], "coreference_resolved_question": "Which sex does Charles Planelli de Lavalette possess?", "s_expression_fn": "(AND (JOIN (R sex_or_gender) Roberto_Soffritti) (JOIN instance_of sex) (JOIN (R sex_or_gender) Charles_Planelli_de_Lavalette))", "predicted_s_expression_fn": "(AND (JOIN (R sex_or_gender) Roberto_Soffritti) (JOIN instance_of sex) (JOIN (R sex_or_gender) Charles_Planelli_de_Lavalette))", "predicted_s_expression": "(AND (JOIN (R P21) Q1109987) (JOIN P31 Q290) (JOIN (R P21) Q2960025))", "sparql_attempt_count": 2, "actions": "SELECT ?x WHERE { wd:Q1109987 wdt:P21 ?x . ?x wdt:P31 wd:Q290 . wd:Q2960025 wdt:P21 ?x . }"}, {"turnID": "100.18.11", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Single_Relation", "question": "Which people were born at Miyako or Sweden ? [CTX]", "answer": "Some of them are Erik Axelsson Oxenstierna, Sejde Abrahamsson, Johanna Nyman, Benjamin Jonsson, Lennart Svensson, Johan Makel\u00e9er, Yukinori Matsui, Arbnora Robelli, Alexander Angelin, Elisabeth Hesselblad", "s_expression": "(OR (AND (JOIN P19 Q502981) (JOIN P31 Q502895)) (AND (JOIN P19 Q34) (JOIN P31 Q502895)))", "s_expression_cores": ["(AND (JOIN P19 Q502981) (JOIN P31 Q502895))", "(AND (JOIN P19 Q34) (JOIN P31 Q502895))"], "sparql_delex": "SELECT ?x WHERE { { ?x wdt:P19 wd:Q502981 . ?x wdt:P31 wd:Q502895 .  } UNION { ?x wdt:P19 wd:Q34 . ?x wdt:P31 wd:Q502895 .  } }", "results": ["Q3052757", "Q3496340", "Q10554900", "Q2761546", "Q15055213", "Q4982324", "Q12802652", "Q18352289", "Q15727678", "Q1370178", "Q4504892", "Q3840926", "Q15727671", "Q3678961", "Q10673002", "Q16236301", "Q6791789", "Q7037367", "Q4993297", "Q7184084", "Q9140631", "Q13156703", "Q3429476", "Q20735363", "Q552368", "Q5902263", "Q25758851", "Q5711269", "Q6043514", "Q5429245", "Q4768964", "Q6188884", "Q470295", "Q4949179", "Q16633004", "Q5217332", "Q5162070", "Q1622842", "Q2403800", "Q4679026", "Q16733732", "Q5985355", "Q5125009", "Q18389678", "Q7652080", "Q6204764", "Q4966985", "Q4794544", "Q15063562", "Q4268806", "Q6236686", "Q24450654", "Q24450652", "Q4753950", "Q5795417", "Q963077", "Q6437243", "Q4895715", "Q2024280", "Q18817305", "Q5585043", "Q4956189", "Q5807627", "Q5796092", "Q4960076", "Q5444282", "Q24091027", "Q4944381", "Q5627727", "Q4979721", "Q5504893", "Q3555193", "Q1080524", "Q6775964", "Q21066108", "Q12800586", "Q5627428", "Q6391587", "Q976430", "Q4759847", "Q384159", "Q1375573", "Q12844", "Q433731", "Q20641254", "Q20641255", "Q18145133", "Q18196418", "Q12803676", "Q18705119", "Q6217131", "Q4975372", "Q15936137", "Q11409058", "Q5938939", "Q5237060", "Q24450591", "Q5371299", "Q475095", "Q24450590", "Q24450579", "Q280957", "Q984349", "Q19609617", "Q6252640", "Q3051749", "Q19003275", "Q446280", "Q14155798", "Q5217689", "Q436814", "Q5967939", "Q1777645", "Q5220328", "Q3843381", "Q5650441", "Q17180738", "Q5820155", "Q4982042", "Q5883947", "Q5553300", "Q3365380", "Q21450111", "Q5993843", "Q5762659", "Q6215148", "Q2476114", "Q3752814", "Q4721061", "Q5365519", "Q6155146", "Q965131", "Q1556219", "Q5776856", "Q6757996", "Q16162501", "Q5499514", "Q15429325", "Q18128983", "Q6189404", "Q17402466", "Q1528357", "Q15725960", "Q15616701", "Q18639199", "Q5110407", "Q6008432", "Q24091061", "Q12365214", "Q5887363", "Q4919783", "Q1702936", "Q3357437", "Q977369", "Q2591076", "Q10431380", "Q10557517", "Q4353311", "Q17129617", "Q24258776", "Q24258775", "Q24258774", "Q24450454", "Q24450455", "Q6193383", "Q24450458", "Q21066107", "Q24450593", "Q24450592", "Q24450595", "Q24450594", "Q4983194", "Q4895694", "Q5946315", "Q1838001", "Q26268045", "Q4976887", "Q24689224", "Q5949137", "Q22007164", "Q1797458", "Q11455331", "Q725390", "Q4931190", "Q5543358", "Q2335944", "Q16212479", "Q4719645", "Q3615347", "Q3218126", "Q1807090", "Q20631075", "Q4946020", "Q1806251", "Q4753821", "Q18227906", "Q5585792", "Q274554", "Q4967393", "Q1436902", "Q4755649", "Q4994186", "Q4755680", "Q20788530", "Q22980339", "Q3700842", "Q3476877", "Q4948585", "Q4979711", "Q901670", "Q20890517", "Q4775721", "Q19933938", "Q6491520", "Q17180964", "Q4892974", "Q512526", "Q5621049", "Q11619867", "Q2163258", "Q4956349", "Q27782690", "Q24450486", "Q205420", "Q24450489", "Q6219808", "Q5716442", "Q12784511", "Q5371514", "Q5257566", "Q94169", "Q1789359", "Q5515898", "Q5887068", "Q1351341", "Q7983460", "Q19724768", "Q5019292", "Q3814662", "Q5742676", "Q6185803", "Q441785", "Q5388874", "Q4919740", "Q5219139", "Q7652083", "Q11619818", "Q11363995", "Q4355927", "Q18176372", "Q6209631", "Q6072898", "Q1370162", "Q16227989", "Q5605449", "Q2017855", "Q3752824", "Q5610461", "Q5006407", "Q525145", "Q5217174", "Q6091974", "Q6185896", "Q1719952", "Q4952216", "Q470163", "Q16221963", "Q6743925", "Q4796553", "Q17180858", "Q1544941", "Q3964169", "Q1991150", "Q5962301", "Q19518625", "Q12796180", "Q4357033", "Q5887432", "Q6011925", "Q24450669", "Q1039038", "Q9135889", "Q18352185", "Q350301", "Q20641644", "Q24450469", "Q1989069", "Q16210938", "Q24450461", "Q23664047", "Q5162076", "Q16801983", "Q570359", "Q950082", "Q2042240", "Q4718227", "Q1607307", "Q4794638", "Q6254814", "Q161832", "Q5040599", "Q769615", "Q4788047", "Q5049076", "Q24150846", "Q7174121", "Q5388892", "Q1150879", "Q6091113", "Q21066063", "Q4976021", "Q4768953", "Q1161898", "Q1445152", "Q5980076", "Q20090811", "Q4948686", "Q1445880", "Q1357372", "Q24450567", "Q24450560", "Q19668252", "Q24450562", "Q5571657", "Q18243853", "Q930254", "Q16595163", "Q3376654", "Q3702652", "Q1416327", "Q18359207", "Q1346194", "Q7352407", "Q5629264", "Q3351855", "Q1794132", "Q5699685", "Q5021859", "Q4342837", "Q467306", "Q3812985", "Q954668", "Q20735438", "Q20735439", "Q1681731", "Q5913688", "Q5816394", "Q2368337", "Q11429910", "Q764450", "Q3112191", "Q1080261", "Q16233452", "Q4911043", "Q5371483", "Q977304", "Q23014090", "Q5956455", "Q24258795", "Q11529104", "Q24258796", "Q16236798", "Q3532632", "Q24258798", "Q2658325", "Q202345", "Q16229523", "Q16158098", "Q3307852", "Q15971652", "Q27068516", "Q16232451", "Q1318978", "Q1566038", "Q4354460", "Q24663896", "Q24450748", "Q258995", "Q24450744", "Q24450746", "Q16213188", "Q2627533", "Q19976328", "Q24450588", "Q329408", "Q4969283", "Q5555906", "Q6174156", "Q18196439", "Q19968600", "Q247551", "Q6149257", "Q4877018", "Q18977758", "Q1736370", "Q1909056", "Q4719652", "Q4970931", "Q8010353", "Q4956937", "Q321723", "Q24450633", "Q6081195", "Q24450731", "Q4569873", "Q1806148", "Q6249269", "Q19976478", "Q5621204", "Q2443750", "Q2332287", "Q5552298", "Q490775", "Q6758343", "Q1504920", "Q5218785", "Q5960803", "Q5111848", "Q19754150", "Q18242745", "Q4682879", "Q17265711", "Q5369151", "Q11577920", "Q4994510", "Q4947003", "Q4934495", "Q722869", "Q596509", "Q6000364", "Q1698655", "Q16633487", "Q6522755", "Q2839387", "Q2076321", "Q5162084", "Q3292086", "Q4942840", "Q11866868", "Q24450554", "Q18011169", "Q24450550", "Q2183184", "Q24450552", "Q4532456", "Q1371177", "Q7677983", "Q16234709", "Q18217269", "Q19958295", "Q24548854", "Q19819227", "Q6204191", "Q7106907", "Q4949074", "Q24450726", "Q527059", "Q4895700", "Q5074897", "Q3372167", "Q5582596", "Q5824415", "Q6215231", "Q5722670", "Q313015", "Q692627", "Q5616855", "Q4935209", "Q1706271", "Q5777998", "Q16029847", "Q23023077", "Q2006412", "Q6197536", "Q2277905", "Q24589", "Q18698699", "Q6198811", "Q4830390", "Q5711934", "Q5778337", "Q5542667", "Q5896807", "Q1883688", "Q3703644", "Q4684097", "Q2299442", "Q23074331", "Q2223371", "Q6259774", "Q4679001", "Q6247301", "Q4933695", "Q4721790", "Q5716434", "Q5578938", "Q1781960", "Q1354090", "Q24450679", "Q1601272", "Q18176392", "Q1380274", "Q6222863", "Q5996337", "Q24450670", "Q10529735", "Q953118", "Q24258754", "Q11407199", "Q3486372", "Q4951950", "Q4895678", "Q5111110", "Q6253411", "Q5626616", "Q1778217", "Q4964521", "Q5743578", "Q4946041", "Q1370501", "Q719062", "Q6214012", "Q6251613", "Q3809897", "Q1484829", "Q7648794", "Q12790524", "Q6419409", "Q6491471", "Q24450600", "Q18348174", "Q950348", "Q24572358", "Q18169803", "Q15543156", "Q1894143", "Q5819712", "Q24150893", "Q24450722", "Q18274774", "Q2707810", "Q24450723", "Q16228303", "Q19958091", "Q167056", "Q1766504", "Q5885921", "Q6076905", "Q11715779", "Q4704551", "Q16229664", "Q5885543", "Q2014235", "Q4357752", "Q5973574", "Q1393629", "Q5888008", "Q6558160", "Q13533412", "Q16239695", "Q6701612", "Q11728166", "Q5914020", "Q5998413", "Q5111669", "Q692663", "Q289150", "Q1371342", "Q16163171", "Q115113", "Q8077132", "Q8077134", "Q1077006", "Q1884522", "Q4697458", "Q4350587", "Q5039800", "Q7088490", "Q18450459", "Q3675808", "Q2345238", "Q5724392", "Q17461659", "Q19976439", "Q4830274", "Q5810951", "Q4830298", "Q18193244", "Q5959206", "Q13224673", "Q6010876", "Q6025928", "Q360698", "Q1903586", "Q4976261", "Q348142", "Q1703030", "Q1444423", "Q1880015", "Q7031482", "Q4978610", "Q3104016", "Q7352569", "Q18242191", "Q6131983", "Q5546809", "Q5388602", "Q5979029", "Q18377919", "Q16917029", "Q10540326", "Q7360713", "Q3675661", "Q5901576", "Q188171", "Q587865", "Q1543655", "Q6210106", "Q4794579", "Q3307799", "Q6204696", "Q5217907", "Q18447774", "Q24450729", "Q4945282", "Q2870961", "Q24088891", "Q3017440", "Q24450727", "Q24450725", "Q16581881", "Q3339539", "Q3617600", "Q4755438", "Q5648729", "Q24690836", "Q5973797", "Q16229502", "Q6202405", "Q16211509", "Q5789439", "Q5371280", "Q5388975", "Q5928239", "Q3851978", "Q2069989", "Q1184836", "Q23877440", "Q5621004", "Q4665762", "Q4948545", "Q965710", "Q4755387", "Q4943327", "Q6255905", "Q18379402", "Q3486387", "Q5960909", "Q24450546", "Q24450542", "Q24450540", "Q24450541", "Q5541572", "Q5785196", "Q972673", "Q3924350", "Q1690698", "Q13560216", "Q4968177", "Q927023", "Q10541819", "Q445724", "Q5386938", "Q6000793", "Q19937977", "Q6340153", "Q4358223", "Q524781", "Q1675677", "Q1345333", "Q372570", "Q523104", "Q18817302", "Q5040955", "Q742863", "Q6011836", "Q4919722", "Q2349346", "Q4758419", "Q4948577", "Q1376228", "Q552352", "Q5718252", "Q3038346", "Q5040926", "Q338381", "Q4939276", "Q16212552", "Q10407268", "Q16945533", "Q5499520", "Q6237941", "Q363545", "Q11369120", "Q11385132", "Q15310837", "Q16095220", "Q5388747", "Q7499530", "Q354112", "Q745927", "Q20735447", "Q6001193", "Q5386544", "Q24450680", "Q24450683", "Q18176380", "Q15989975", "Q18145085", "Q21064626", "Q18218062", "Q435384", "Q10542112", "Q1392280", "Q204996", "Q4720667", "Q4988828", "Q5448496", "Q5581511", "Q722843", "Q16467606", "Q5570306", "Q17722287", "Q23001501", "Q5236473", "Q4895068", "Q4775747", "Q6198679", "Q6341873", "Q3544489", "Q5799705", "Q5728714", "Q5219192", "Q26207472", "Q836241", "Q4962214", "Q4975813", "Q19892879", "Q16222432", "Q2946154", "Q7795650", "Q946758", "Q18379442", "Q4990991", "Q4753745", "Q1377788", "Q4753746", "Q1065612", "Q5723052", "Q4760011", "Q4953438", "Q6732129", "Q4889376", "Q4693156", "Q16159362", "Q21180926", "Q24150950", "Q19661947", "Q4573025", "Q16157938", "Q15810427", "Q24450635", "Q23918095", "Q5883939", "Q552177", "Q4580159", "Q5217496", "Q24150779", "Q20806762", "Q2630371", "Q5111657", "Q765808", "Q20641101", "Q24450732", "Q20090654", "Q23646413", "Q24450539", "Q92756", "Q5879519", "Q6847287", "Q21733386"], "coreference_resolved_question": "Which people were born at Miyako or Sweden?", "s_expression_fn": "(OR (AND (JOIN place_of_birth Miyako) (JOIN instance_of common_name)) (AND (JOIN place_of_birth Sweden) (JOIN instance_of common_name)))", "predicted_s_expression_fn": "(AND (JOIN (R place_of_birth) (VALUES Miyako Sweden) (JOIN instance_of common_name))", "predicted_s_expression": "", "sparql_attempt_count": 2, "actions": ""}, {"turnID": "100.13.2", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Single_Relation", "question": "Which people were casted in Lulu or Kid Glove Killer ? [CTX]", "answer": "Some of them are Van Heflin, Pina Piovani, Mario Ferrari, Laura Gore, Luigi Cimara, Jacques Sernas, Samuel S. Hinds, Paola Borboni, Valentina Cortese, Marsha Hunt", "s_expression": "(OR (AND (JOIN (R P161) Q3840590) (JOIN P31 Q502895)) (AND (JOIN (R P161) Q6404489) (JOIN P31 Q502895)))", "s_expression_cores": ["(AND (JOIN (R P161) Q3840590) (JOIN P31 Q502895))", "(AND (JOIN (R P161) Q6404489) (JOIN P31 Q502895))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q3840590 wdt:P161 ?x . ?x wdt:P31 wd:Q502895 .  } UNION { wd:Q6404489 wdt:P161 ?x . ?x wdt:P31 wd:Q502895 .  } }", "results": ["Q55469", "Q267814", "Q435962", "Q556325", "Q3388583", "Q2750248", "Q350678", "Q3218689", "Q259986", "Q3293430", "Q636733", "Q958973", "Q3839500"], "coreference_resolved_question": "Which people were casted in Lulu or Kid Glove Killer?", "s_expression_fn": "(OR (AND (JOIN (R cast_member) Lulu) (JOIN instance_of common_name)) (AND (JOIN (R cast_member) Kid_Glove_Killer) (JOIN instance_of common_name)))", "predicted_s_expression_fn": "(DISTINCT (AND (JOIN (R cast_member) (VALUES Lulu Kid_Glove_Killer)) (JOIN instance_of common_name)))", "predicted_s_expression": "(DISTINCT (AND (JOIN (R P161) (VALUES Q15918219 Q6404489)) (JOIN P31 Q502895)))", "sparql_attempt_count": 2, "actions": "SELECT DISTINCT ?x WHERE { VALUES ?x0 { wd:Q15918219 wd:Q6404489 } . ?x0 wdt:P161 ?x . ?x wdt:P31 wd:Q502895 . }"}, {"turnID": "100.13.7", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Multiple_Relation", "question": "Which administrative territories are the countries of origin of davul or are Bizenga Primary School present in ? [CTX]", "answer": "Uganda, Turkey", "s_expression": "(OR (AND (JOIN (R P495) Q1178361) (JOIN P31 Q15617994)) (AND (JOIN (R P17) Q22936739) (JOIN P31 Q15617994)))", "s_expression_cores": ["(AND (JOIN (R P495) Q1178361) (JOIN P31 Q15617994))", "(AND (JOIN (R P17) Q22936739) (JOIN P31 Q15617994))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q1178361 wdt:P495 ?x . ?x wdt:P31 wd:Q15617994 .  } UNION { wd:Q22936739 wdt:P17 ?x . ?x wdt:P31 wd:Q15617994 .  } }", "results": ["Q1036", "Q43"], "coreference_resolved_question": "Which administrative territories are the countries of origin of davul or are Bizenga Primary School present in?", "s_expression_fn": "(OR (AND (JOIN (R country_of_origin) davul) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (AND (JOIN (R country) Bizenga_Primary_School) (JOIN instance_of designation_for_an_administrative_territorial_entity)))", "predicted_s_expression_fn": "(OR (AND (JOIN country_of_origin davul) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (AND (JOIN (R location) Bizenga_Primary_School) (JOIN instance_of designation_for_an_administrative_territorial_entity)))", "predicted_s_expression": "", "sparql_attempt_count": 2, "actions": ""}, {"turnID": "100.13.12", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Single_Relation", "question": "Which administrative territories are the countries of citizenship of Jacques Sernas or Czes\u0142aw Karol Czajkowski ? [CTX]", "answer": "France, Lithuania, Poland", "s_expression": "(OR (AND (JOIN (R P27) Q636733) (JOIN P31 Q15617994)) (AND (JOIN (R P27) Q14623275) (JOIN P31 Q15617994)))", "s_expression_cores": ["(AND (JOIN (R P27) Q636733) (JOIN P31 Q15617994))", "(AND (JOIN (R P27) Q14623275) (JOIN P31 Q15617994))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q636733 wdt:P27 ?x . ?x wdt:P31 wd:Q15617994 .  } UNION { wd:Q14623275 wdt:P27 ?x . ?x wdt:P31 wd:Q15617994 .  } }", "results": ["Q142", "Q37", "Q36"], "coreference_resolved_question": "Which administrative territories are the countries of citizenship of Jacques Sernas or Czes\u0142aw Karol Czajkowski?", "s_expression_fn": "(OR (AND (JOIN (R country_of_citizenship) Jacques_Sernas) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (AND (JOIN (R country_of_citizenship) Czes\u0142aw_Karol_Czajkowski) (JOIN instance_of designation_for_an_administrative_territorial_entity)))", "predicted_s_expression_fn": "(DISTINCT (AND (JOIN (R country_of_citizenship) (VALUES Jacques_Sernas Czes\u0142aw_Karol_Czajkowski)) (JOIN instance_of designation_for_an_administrative_territorial_entity))", "predicted_s_expression": "", "sparql_attempt_count": 2, "actions": ""}, {"turnID": "100.114.8", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Single_Relation", "question": "Which administrative territories did the expiration of Alessandro Gregorio Capponi or Ludovico di Caporiacco occur ? [CTX]", "answer": "Parma, Rome", "s_expression": "(OR (AND (JOIN (R P20) Q18221191) (JOIN P31 Q56061)) (AND (JOIN (R P20) Q1170234) (JOIN P31 Q56061)))", "s_expression_cores": ["(AND (JOIN (R P20) Q18221191) (JOIN P31 Q56061))", "(AND (JOIN (R P20) Q1170234) (JOIN P31 Q56061))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q18221191 wdt:P20 ?x . ?x wdt:P31 wd:Q56061 .  } UNION { wd:Q1170234 wdt:P20 ?x . ?x wdt:P31 wd:Q56061 .  } }", "results": ["Q2683", "Q220"], "coreference_resolved_question": "Which administrative territories did the expiration of Alessandro Gregorio Capponi or Ludovico di Caporiacco occur?", "s_expression_fn": "(OR (AND (JOIN (R place_of_death) Alessandro_Gregorio_Capponi) (JOIN instance_of administrative_territorial_entity)) (AND (JOIN (R place_of_death) Ludovico_di_Caporiacco) (JOIN instance_of administrative_territorial_entity)))", "predicted_s_expression_fn": "(DISTINCT (AND (JOIN (R place_of_death) (VALUES Alessandro_Gregorio_Capponi Ludovico_di_Caporiacco)) (JOIN instance_of designation_for_an_administrative_territorial_entity)))", "predicted_s_expression": "(DISTINCT (AND (JOIN (R P20) (VALUES Q18221191 Q1170234)) (JOIN P31 Q56061)))", "sparql_attempt_count": 2, "actions": "SELECT DISTINCT ?x WHERE { VALUES ?x0 { wd:Q18221191 wd:Q1170234 } . ?x0 wdt:P20 ?x . ?x wdt:P31 wd:Q56061 . }"}, {"turnID": "100.7.2", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Multiple_Relation", "question": "Which people are the names of person who are the patron saints of baseball or have Hazloul bin Abdulaziz Al Saud as their sibling ? [CTX]", "answer": "Some of them are Ahmed bin Abdulaziz Al Saud, Musa'id bin Abdulaziz Al Saud, Fawwaz bin Abdulaziz Al Saud, Khalid of Saudi Arabia, Salman bin Abdulaziz Al Saud, Sultan bin Abdulaziz, Badr bin Abdulaziz Al Saud, Nayef bin Abdul-Aziz Al Saud, Turki I bin Abdul-Aziz Al Saud, Fahd of Saudi Arabia", "s_expression": "(OR (AND (JOIN (R P417) Q5369) (JOIN P31 Q502895)) (AND (JOIN (R P7) Q4119087) (JOIN P31 Q502895)))", "s_expression_cores": ["(AND (JOIN (R P417) Q5369) (JOIN P31 Q502895))", "(AND (JOIN (R P7) Q4119087) (JOIN P31 Q502895))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q5369 wdt:P417 ?x . ?x wdt:P31 wd:Q502895 .  } UNION { wd:Q4119087 wdt:P7 ?x . ?x wdt:P31 wd:Q502895 .  } }", "results": ["Q12203730", "Q4120307", "Q367825", "Q2460829", "Q6751859", "Q6745575", "Q4549135", "Q307463", "Q401645", "Q57298", "Q208301", "Q315587", "Q4120312", "Q712690", "Q981846", "Q3133541", "Q183187", "Q6982977", "Q317832", "Q4115542", "Q124710", "Q12242559", "Q244206", "Q1998925", "Q1975943", "Q217167", "Q6967643", "Q2602302", "Q7395569", "Q4665420", "Q153024", "Q4854440"], "coreference_resolved_question": "Which people are the names of person who are the patron saints of baseball or have Hazloul bin Abdulaziz Al Saud as their sibling?", "s_expression_fn": "(OR (AND (JOIN (R patron_saint) baseball) (JOIN instance_of common_name)) (AND (JOIN (R brother) Hazloul_bin_Abdulaziz_Al_Saud) (JOIN instance_of common_name)))", "predicted_s_expression_fn": "(OR (AND (JOIN patron_saint_of baseball) (JOIN instance_of common_name)) (AND (JOIN sibling Hazloul_bin_Abdulaziz_Al_Saud) (JOIN instance_of common_name)))", "predicted_s_expression": "", "sparql_attempt_count": 1, "actions": ""}, {"turnID": "100.123.9", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Single_Relation", "question": "Which administrative territories were Thomas James Simpson or Niurka Montalvo born ? [CTX]", "answer": "Havana, Dollar", "s_expression": "(OR (AND (JOIN (R P19) Q21166276) (JOIN P31 Q56061)) (AND (JOIN (R P19) Q434370) (JOIN P31 Q56061)))", "s_expression_cores": ["(AND (JOIN (R P19) Q21166276) (JOIN P31 Q56061))", "(AND (JOIN (R P19) Q434370) (JOIN P31 Q56061))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q21166276 wdt:P19 ?x . ?x wdt:P31 wd:Q56061 .  } UNION { wd:Q434370 wdt:P19 ?x . ?x wdt:P31 wd:Q56061 .  } }", "results": ["Q1563", "Q1235672"], "coreference_resolved_question": "Which administrative territories were Thomas James Simpson or Niurka Montalvo born?", "s_expression_fn": "(OR (AND (JOIN (R place_of_birth) Thomas_James_Simpson) (JOIN instance_of administrative_territorial_entity)) (AND (JOIN (R place_of_birth) Niurka_Montalvo) (JOIN instance_of administrative_territorial_entity)))", "predicted_s_expression_fn": "(DISTINCT (AND (JOIN (R place_of_birth) (VALUES Thomas_James_Simpson Niurka_Montalvo)) (JOIN instance_of designation_for_an_administrative_territorial_entity)))", "predicted_s_expression": "(DISTINCT (AND (JOIN (R P19) (VALUES Q21166276 Q434370)) (JOIN P31 Q56061)))", "sparql_attempt_count": 2, "actions": "SELECT DISTINCT ?x WHERE { VALUES ?x0 { wd:Q21166276 wd:Q434370 } . ?x0 wdt:P19 ?x . ?x wdt:P31 wd:Q56061 . }"}, {"turnID": "100.105.4", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Single_Relation", "question": "Which works of art were notable works done by Klaus H\u00e4r\u00f6 or Robert Zemeckis ? [CTX]", "answer": "Mother of Mine, Elina: As If I Wasn't There, The Fencer, Letters to Father Jacob, Forrest Gump, Who Framed Roger Rabbit, Cast Away, Romancing the Stone, The Polar Express", "s_expression": "(OR (AND (JOIN (R P800) Q1745266) (JOIN P31 Q838948)) (AND (JOIN (R P800) Q187364) (JOIN P31 Q838948)))", "s_expression_cores": ["(AND (JOIN (R P800) Q1745266) (JOIN P31 Q838948))", "(AND (JOIN (R P800) Q187364) (JOIN P31 Q838948))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q1745266 wdt:P800 ?x . ?x wdt:P31 wd:Q838948 .  } UNION { wd:Q187364 wdt:P800 ?x . ?x wdt:P31 wd:Q838948 .  } }", "results": ["Q1217931", "Q1329527", "Q16933688", "Q1059450", "Q134773", "Q379873", "Q213411", "Q502629", "Q862197"], "coreference_resolved_question": "Which works of art were notable works done by Klaus H\u00e4r\u00f6 or Robert Zemeckis?", "s_expression_fn": "(OR (AND (JOIN (R notable_work) Klaus_H\u00e4r\u00f6) (JOIN instance_of work_of_art)) (AND (JOIN (R notable_work) Robert_Zemeckis) (JOIN instance_of work_of_art)))", "predicted_s_expression_fn": "(DISTINCT (AND (JOIN (R notable_work) (VALUES Klaus_H\u00e4r\u00f6 Robert_Zemeckis)) (JOIN instance_of work_of_art)))", "predicted_s_expression": "(DISTINCT (AND (JOIN (R P800) (VALUES Q1745266 Q187364)) (JOIN P31 Q838948)))", "sparql_attempt_count": 2, "actions": "SELECT DISTINCT ?x WHERE { VALUES ?x0 { wd:Q1745266 wd:Q187364 } . ?x0 wdt:P800 ?x . ?x wdt:P31 wd:Q838948 . }"}, {"turnID": "100.118.8", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Multiple_Relation", "question": "Which languages are the original languages of creation of Citizens and minstermen : a who's who of York City FC, 1922-1997 or are Joan Monserrat Mascar\u00f3 capable of writing ? [CTX]", "answer": "English, Spanish", "s_expression": "(OR (AND (JOIN (R P364) Q19845002) (JOIN P31 Q34770)) (AND (JOIN (R P1412) Q11927857) (JOIN P31 Q34770)))", "s_expression_cores": ["(AND (JOIN (R P364) Q19845002) (JOIN P31 Q34770))", "(AND (JOIN (R P1412) Q11927857) (JOIN P31 Q34770))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q19845002 wdt:P364 ?x . ?x wdt:P31 wd:Q34770 .  } UNION { wd:Q11927857 wdt:P1412 ?x . ?x wdt:P31 wd:Q34770 .  } }", "results": ["Q1860", "Q1321"], "coreference_resolved_question": "Which languages are the original languages of creation of Citizens and minstermen : a who's who of York City FC, 1922-1997 or are Joan Monserrat Mascar\u00f3 capable of writing?", "s_expression_fn": "(OR (AND (JOIN (R original_language_of_film_or_TV_show) Citizens_and_minstermen_:_a_who's_who_of_York_City_FC,_1922-1997) (JOIN instance_of language)) (AND (JOIN (R languages_spoken,_written_or_signed) Joan_Monserrat_Mascar\u00f3) (JOIN instance_of language)))", "predicted_s_expression_fn": "(OR (AND (JOIN original_language_of_film_or_TV_show Citizens_and_minstermen___a_who's_who_of_York_City_FC__1922-1997) (JOIN instance_of language)) (AND (JOIN (R language_of_work) Joan_Monserrat_Mascar\u00f3) (JOIN instance_of language))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "100.12.7", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Single_Relation|Incomplete", "question": "Which activity has actor as the associated field of occupation ? [SEP] acting [SEP] What was produced by that occupation ? [SEP] Day of Love [SEP] Or Lucky Chicken Games? [CTX]", "answer": "Day of Love, Underworld: The Eternal War, Tonka: Rescue Patrol, Aquaman: Battle for Atlantis, Robotech: The Macross Saga, NBC Sports Real Golf, Tyco RC: Assault With a Battery, Casper: Spirit Dimensions", "s_expression": "(OR (AND (JOIN P178 Q33999) (JOIN P31 Q166142)) (AND (JOIN P178 Q6697870) (JOIN P31 Q166142)))", "s_expression_cores": ["(AND (JOIN P178 Q33999) (JOIN P31 Q166142))", "(AND (JOIN P178 Q6697870) (JOIN P31 Q166142))"], "sparql_delex": "SELECT ?x WHERE { { ?x wdt:P178 wd:Q33999 . ?x wdt:P31 wd:Q166142 .  } UNION { ?x wdt:P178 wd:Q6697870 . ?x wdt:P31 wd:Q166142 .  } }", "results": ["Q5242936", "Q7883931", "Q7821524", "Q2859161", "Q7353400", "Q16266965", "Q7859749", "Q5049067"], "coreference_resolved_question": "What was produced by acting?", "s_expression_fn": "(OR (AND (JOIN developer actor) (JOIN instance_of application)) (AND (JOIN developer Lucky_Chicken_Games) (JOIN instance_of application)))", "predicted_s_expression_fn": "(OR (AND (JOIN (R produced_by) acting) (JOIN instance_of Day_of_Love)) (AND (JOIN (R produced_by) acting) (JOIN instance_of Lucky_Chicken_Games))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "100.52.3", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Single_Relation", "question": "Which administrative territories do Cuthbert Malajila or Marc MacSharry belong to ? [CTX]", "answer": "Zimbabwe, Ireland", "s_expression": "(OR (AND (JOIN (R P27) Q3007936) (JOIN P31 Q15617994)) (AND (JOIN (R P27) Q1345787) (JOIN P31 Q15617994)))", "s_expression_cores": ["(AND (JOIN (R P27) Q3007936) (JOIN P31 Q15617994))", "(AND (JOIN (R P27) Q1345787) (JOIN P31 Q15617994))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q3007936 wdt:P27 ?x . ?x wdt:P31 wd:Q15617994 .  } UNION { wd:Q1345787 wdt:P27 ?x . ?x wdt:P31 wd:Q15617994 .  } }", "results": ["Q954", "Q27"], "coreference_resolved_question": "Which administrative territories do Cuthbert Malajila or Marc MacSharry belong to?", "s_expression_fn": "(OR (AND (JOIN (R country_of_citizenship) Cuthbert_Malajila) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (AND (JOIN (R country_of_citizenship) Marc_MacSharry) (JOIN instance_of designation_for_an_administrative_territorial_entity)))", "predicted_s_expression_fn": "(DISTINCT (AND (JOIN (R country_of_citizenship) (VALUES Cuthbert_Malajila Marc_MacSharry)) (JOIN instance_of designation_for_an_administrative_territorial_entity)))", "predicted_s_expression": "(DISTINCT (AND (JOIN (R P27) (VALUES Q3007936 Q1345787)) (JOIN P31 Q15617994)))", "sparql_attempt_count": 2, "actions": "SELECT DISTINCT ?x WHERE { VALUES ?x0 { wd:Q3007936 wd:Q1345787 } . ?x0 wdt:P27 ?x . ?x wdt:P31 wd:Q15617994 . }"}, {"turnID": "100.52.11", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Multiple_Relation", "question": "Which political territories have a diplomatic relationship with Gabon or are Municipality of Russell \u2013 Binscarth located in ? [CTX]", "answer": "Canada, Germany", "s_expression": "(OR (AND (JOIN (R P530) Q1000) (JOIN P31 Q1048835)) (AND (JOIN (R P17) Q18378258) (JOIN P31 Q1048835)))", "s_expression_cores": ["(AND (JOIN (R P530) Q1000) (JOIN P31 Q1048835))", "(AND (JOIN (R P17) Q18378258) (JOIN P31 Q1048835))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q1000 wdt:P530 ?x . ?x wdt:P31 wd:Q1048835 .  } UNION { wd:Q18378258 wdt:P17 ?x . ?x wdt:P31 wd:Q1048835 .  } }", "results": ["Q16", "Q183"], "coreference_resolved_question": "Which political territories have a diplomatic relationship with Gabon or are Municipality of Russell \u2013 Binscarth located in?", "s_expression_fn": "(OR (AND (JOIN (R diplomatic_relation) Gabon) (JOIN instance_of political_territorial_entity)) (AND (JOIN (R country) Municipality_of_Russell_\u2013_Binscarth) (JOIN instance_of political_territorial_entity)))", "predicted_s_expression_fn": "(OR (AND (JOIN diplomatic_relation Gabon) (JOIN (R country) Municipality_of_Russell___Binscarth)) (JOIN instance_of political_territorial_entity))", "predicted_s_expression": "(OR (AND (JOIN P530 Q1000) (JOIN (R P17) Q18378258)) (JOIN P31 Q1048835))", "sparql_attempt_count": 2, "actions": "SELECT ?x WHERE { { ?x wdt:P530 wd:Q1000 . wd:Q18378258 wdt:P17 ?x . } UNION { ?x wdt:P31 wd:Q1048835 . } }"}, {"turnID": "100.74.5", "question_type": "Logical Reasoning (All)", "description": "Logical|Difference|Single_Relation", "question": "Which administrative territories have diplomatic relations with Sweden but not Georgia ? [CTX]", "answer": "Philippines", "s_expression": "(DIFF (AND (JOIN (R P530) Q34) (JOIN P31 Q15617994)) (JOIN (R P530) Q230))", "s_expression_cores": ["(AND (JOIN (R P530) Q34) (JOIN P31 Q15617994))", "(JOIN (R P530) Q230)"], "sparql_delex": "SELECT ?x WHERE { wd:Q34 wdt:P530 ?x . ?x wdt:P31 wd:Q15617994 .  FILTER NOT EXISTS { wd:Q230 wdt:P530 ?x .  } }", "results": ["Q928"], "coreference_resolved_question": "Which administrative territories have diplomatic relations with Sweden but not Georgia?", "s_expression_fn": "(DIFF (AND (JOIN (R diplomatic_relation) Sweden) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (JOIN (R diplomatic_relation) Georgia))", "predicted_s_expression_fn": "(DIFF (AND (JOIN diplomatic_relation Sweden) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (AND (JOIN diplomatic_relation Georgia) (JOIN instance_of designation_for_an_administrative_territorial_entity)))", "predicted_s_expression": "", "sparql_attempt_count": 1, "actions": ""}, {"turnID": "100.59.6", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Single_Relation", "question": "Which administrative territories are the native countriesof Maria Teresa Llorens i Crusat or Carlos P\u00e9rez ? [CTX]", "answer": "Cuba, Spain, Hungary", "s_expression": "(OR (AND (JOIN (R P27) Q19301099) (JOIN P31 Q15617994)) (AND (JOIN (R P27) Q583597) (JOIN P31 Q15617994)))", "s_expression_cores": ["(AND (JOIN (R P27) Q19301099) (JOIN P31 Q15617994))", "(AND (JOIN (R P27) Q583597) (JOIN P31 Q15617994))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q19301099 wdt:P27 ?x . ?x wdt:P31 wd:Q15617994 .  } UNION { wd:Q583597 wdt:P27 ?x . ?x wdt:P31 wd:Q15617994 .  } }", "results": ["Q241", "Q29", "Q28"], "coreference_resolved_question": "Which administrative territories are the native countries of Maria Teresa Llorens i Crusat or Carlos P\u00e9rez?", "s_expression_fn": "(OR (AND (JOIN (R country_of_citizenship) Maria_Teresa_Llorens_i_Crusat) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (AND (JOIN (R country_of_citizenship) Carlos_P\u00e9rez) (JOIN instance_of designation_for_an_administrative_territorial_entity)))", "predicted_s_expression_fn": "(DISTINCT (AND (JOIN (R country_of_citizenship) (VALUES Maria_Teresa_Llorens_i_Crusat Carlos_P\u00e9rez)) (JOIN instance_of designation_for_an_administrative_territorial_entity)))", "predicted_s_expression": "(DISTINCT (AND (JOIN (R P27) (VALUES Q19301099 Q19861747)) (JOIN P31 Q15617994)))", "sparql_attempt_count": 2, "actions": "SELECT DISTINCT ?x WHERE { VALUES ?x0 { wd:Q19301099 wd:Q19861747 } . ?x0 wdt:P27 ?x . ?x wdt:P31 wd:Q15617994 . }"}, {"turnID": "100.3.7", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Multiple_Relation", "question": "Which administrative territories are Bonete situated in and are Jaime Bores an inhabitant of ? [CTX]", "answer": "Spain", "s_expression": "(AND (JOIN (R P17) Q943394) (JOIN P31 Q15617994) (JOIN (R P27) Q5577498))", "s_expression_cores": ["(AND (JOIN (R P17) Q943394) (JOIN P31 Q15617994) (JOIN (R P27) Q5577498))"], "sparql_delex": "SELECT ?x WHERE { wd:Q943394 wdt:P17 ?x . ?x wdt:P31 wd:Q15617994 .  wd:Q5577498 wdt:P27 ?x .  }", "results": ["Q29"], "coreference_resolved_question": "Which administrative territories are Bonete situated in and are Jaime Bores an inhabitant of?", "s_expression_fn": "(AND (JOIN (R country) Bonete) (JOIN instance_of designation_for_an_administrative_territorial_entity) (JOIN (R country_of_citizenship) Jaime_Bores))", "predicted_s_expression_fn": "(AND (JOIN (R country) Bonete) (JOIN (R country) Jaime_Bores) (JOIN instance_of designation_for_an_administrative_territorial_entity))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "100.3.9", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Single_Relation", "question": "Which international organizations were Spain and Tonga a member of ? [CTX]", "answer": "United Nations, Asian Development Bank", "s_expression": "(AND (JOIN (R P463) Q29) (JOIN P31 Q484652) (JOIN (R P463) Q678))", "s_expression_cores": ["(AND (JOIN (R P463) Q29) (JOIN P31 Q484652) (JOIN (R P463) Q678))"], "sparql_delex": "SELECT ?x WHERE { wd:Q29 wdt:P463 ?x . ?x wdt:P31 wd:Q484652 .  wd:Q678 wdt:P463 ?x .  }", "results": ["Q1065", "Q188822"], "coreference_resolved_question": "Which international organizations were Spain and Tonga a member of?", "s_expression_fn": "(AND (JOIN (R member_of) Spain) (JOIN instance_of international_organization) (JOIN (R member_of) Tonga))", "predicted_s_expression_fn": "(DISTINCT (AND (JOIN (R member_of) (VALUES Spain Tonga)) (JOIN instance_of international_organization)))", "predicted_s_expression": "(DISTINCT (AND (JOIN (R P463) (VALUES Q29 Q678)) (JOIN P31 Q484652)))", "sparql_attempt_count": 2, "actions": "SELECT DISTINCT ?x WHERE { VALUES ?x0 { wd:Q29 wd:Q678 } . ?x0 wdt:P463 ?x . ?x wdt:P31 wd:Q484652 . }"}, {"turnID": "100.54.4", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Single_Relation", "question": "Which people are involved in playing association football and badminton ? [CTX]", "answer": "Ave Pajo, Anette B\u00f6rjesson, Felo Feoto, Hans \u00e1 Lag, Akelei Lima'alofa", "s_expression": "(AND (JOIN P641 Q2736) (JOIN P31 Q502895) (JOIN P641 Q7291))", "s_expression_cores": ["(AND (JOIN P641 Q2736) (JOIN P31 Q502895) (JOIN P641 Q7291))"], "sparql_delex": "SELECT ?x WHERE { ?x wdt:P641 wd:Q2736 . ?x wdt:P31 wd:Q502895 .  ?x wdt:P641 wd:Q7291 .  }", "results": ["Q790316", "Q529508", "Q2088318", "Q984237", "Q3185272"], "coreference_resolved_question": "Which people are involved in playing association football and badminton?", "s_expression_fn": "(AND (JOIN sport association_football) (JOIN instance_of common_name) (JOIN sport badminton))", "predicted_s_expression_fn": "(AND (JOIN sports_discipline_competed_in association_football) (JOIN sports_discipline_competed_in badminton) (JOIN instance_of common_name))", "predicted_s_expression": "(AND (JOIN P2416 Q2736) (JOIN P2416 Q7291) (JOIN P31 Q618123))", "sparql_attempt_count": 2, "actions": "SELECT ?x WHERE { ?x wdt:P2416 wd:Q2736 . ?x wdt:P2416 wd:Q7291 . ?x wdt:P31 wd:Q618123 . }"}, {"turnID": "100.54.5", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Multiple_Relation", "question": "Which administrative territories were the places of residence of Akelei Lima'alofa or are Auguste Seysses an inhabitant of ? [CTX]", "answer": "France, Tuvalu", "s_expression": "(OR (AND (JOIN (R P551) Q3185272) (JOIN P31 Q15617994)) (AND (JOIN (R P27) Q2871400) (JOIN P31 Q15617994)))", "s_expression_cores": ["(AND (JOIN (R P551) Q3185272) (JOIN P31 Q15617994))", "(AND (JOIN (R P27) Q2871400) (JOIN P31 Q15617994))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q3185272 wdt:P551 ?x . ?x wdt:P31 wd:Q15617994 .  } UNION { wd:Q2871400 wdt:P27 ?x . ?x wdt:P31 wd:Q15617994 .  } }", "results": ["Q142", "Q672"], "coreference_resolved_question": "Which administrative territories were the places of residence of Akelei Lima'alofa or are Auguste Seysses an inhabitant of?", "s_expression_fn": "(OR (AND (JOIN (R residence) Akelei_Lima'alofa) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (AND (JOIN (R country_of_citizenship) Auguste_Seysses) (JOIN instance_of designation_for_an_administrative_territorial_entity)))", "predicted_s_expression_fn": "(DISTINCT (OR (AND (JOIN (R place_of_residence) Akelei_Lima'alofa) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (AND (JOIN (R place_of_residence) Auguste_Seysses) (JOIN instance_of designation_for_an_administrative_territorial_entity))))", "predicted_s_expression": "", "sparql_attempt_count": 1, "actions": ""}, {"turnID": "100.54.6", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Multiple_Relation", "question": "Which political territories are Chris Lucas an inhabitant of or share the border with Sagunto ? [CTX]", "answer": "Some of them are Quartell, Pu\u00e7ol, Torres Torres, Alfondeguilla, Australia, Soneja, Almenara, Petr\u00e9s, Gilet, Albalat dels Tarongers", "s_expression": "(OR (AND (JOIN (R P27) Q5107283) (JOIN P31 Q1048835)) (AND (JOIN (R P47) Q47483) (JOIN P31 Q1048835)))", "s_expression_cores": ["(AND (JOIN (R P27) Q5107283) (JOIN P31 Q1048835))", "(AND (JOIN (R P47) Q47483) (JOIN P31 Q1048835))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q5107283 wdt:P27 ?x . ?x wdt:P31 wd:Q1048835 .  } UNION { wd:Q47483 wdt:P47 ?x . ?x wdt:P31 wd:Q1048835 .  } }", "results": ["Q23028", "Q1917827", "Q1637512", "Q1904015", "Q367868", "Q2041882", "Q1769975", "Q2040100", "Q1810161", "Q1992994", "Q762373", "Q1919278", "Q1769907", "Q1645719", "Q55839", "Q1917433", "Q428020", "Q408", "Q1812748", "Q1918014", "Q1989401", "Q1993450"], "coreference_resolved_question": "Which political territories are Chris Lucas an inhabitant of or share the border with Sagunto?", "s_expression_fn": "(OR (AND (JOIN (R country_of_citizenship) Chris_Lucas) (JOIN instance_of political_territorial_entity)) (AND (JOIN (R shares_border_with) Sagunto) (JOIN instance_of political_territorial_entity)))", "predicted_s_expression_fn": "(DISTINCT (OR (AND (JOIN (R country_of_citizenship) Chris_Lucas) (JOIN shares_border_with Sagunto)))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "100.58.5", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Multiple_Relation", "question": "Which people hold the noble title count and have male as the sex ? [CTX]", "answer": "Some of them are Charles-Marie de Faucigny-Lucinge, Prince Louis, Count of Trani, Siegfried I of Gu\u00eenes, Jules-Hippolyte de Saint Simon, John Louis, Count of Nassau-Ottweiler, Dipold, Count of Acerra, Walram II, Count of Nassau, Archibald Campbell, 2nd Earl of Argyll, Wincenty \u0141o\u015b, Ramon Berenguer IV, Count of Barcelona", "s_expression": "(AND (JOIN P97 Q3519259) (JOIN P31 Q502895) (JOIN P21 Q6581097))", "s_expression_cores": ["(AND (JOIN P97 Q3519259) (JOIN P31 Q502895) (JOIN P21 Q6581097))"], "sparql_delex": "SELECT ?x WHERE { ?x wdt:P97 wd:Q3519259 . ?x wdt:P31 wd:Q502895 .  ?x wdt:P21 wd:Q6581097 .  }", "results": ["Q1310403", "Q3260823", "Q95992", "Q84635", "Q4475939", "Q3262678", "Q480455", "Q16170607", "Q2200271", "Q834239", "Q1388389", "Q90763", "Q2856703", "Q6002961", "Q3000448", "Q2167524", "Q2780901", "Q4794469", "Q4389778", "Q4389775", "Q11906727", "Q18535281", "Q8777033", "Q539617", "Q15974147", "Q349102", "Q17302539", "Q19929954", "Q2960688", "Q382119", "Q83678", "Q2039290", "Q1902069", "Q559062", "Q832933", "Q3190790", "Q1601811", "Q1946999", "Q1385641", "Q969823", "Q782806", "Q75728", "Q9061652", "Q9061653", "Q1635924", "Q2262027", "Q2069285", "Q1951885", "Q18435421", "Q2440553", "Q19254", "Q2661687", "Q44481", "Q5483414", "Q1899350", "Q2028705", "Q2137581", "Q15768227", "Q4085900", "Q1718349", "Q4532540", "Q1916775", "Q953213", "Q18655176", "Q443034", "Q19007", "Q11926159", "Q2299700", "Q531337", "Q2315788", "Q2695760", "Q1443308", "Q697703", "Q3069395", "Q290171", "Q23657160", "Q1930385", "Q469260", "Q977300", "Q2499376", "Q196030", "Q3048209", "Q1972860", "Q17351396", "Q2673938", "Q2141596", "Q76080", "Q19661637", "Q1241350", "Q683971", "Q3430974", "Q20973338", "Q14916217", "Q8246857", "Q90409", "Q18066232", "Q2131262", "Q3130553", "Q26721352", "Q21699186", "Q18568296", "Q322676", "Q3158290", "Q20860615", "Q4345753", "Q2681112", "Q930261", "Q1184942", "Q2499141", "Q1142042", "Q18085889", "Q3085304", "Q1984559", "Q17641736", "Q21334337", "Q3391177", "Q1635260", "Q104097", "Q3315758", "Q451436", "Q17737736", "Q2893175", "Q923809", "Q1477174", "Q3787479", "Q3459702", "Q2701764", "Q11906012", "Q11915105", "Q2400853", "Q1611593", "Q2868474", "Q2441130", "Q20725556", "Q4797357", "Q247209", "Q1694720", "Q1459919", "Q1392236", "Q334829", "Q1370600", "Q1984177", "Q825339", "Q2157072", "Q1010317", "Q19902526", "Q3084983", "Q2413185", "Q86052", "Q159101", "Q725126", "Q100891", "Q2016882", "Q9001331", "Q17743984", "Q4894932", "Q1163606", "Q436624", "Q3084366", "Q3523649", "Q105850", "Q2254516", "Q13409673", "Q2860082", "Q4213142", "Q1685961", "Q2362056", "Q63475", "Q15147181", "Q2292878", "Q940156", "Q1452693", "Q1855602", "Q1826184", "Q528014", "Q796443", "Q21072476", "Q1870631", "Q377480", "Q1389516", "Q18195648", "Q1146008", "Q1997313", "Q2040593", "Q25642", "Q1510315", "Q2238261", "Q872591", "Q2728663", "Q17304933", "Q1463468", "Q15930787", "Q2392256", "Q3119514", "Q939520", "Q16170625", "Q326179", "Q2065832", "Q2232887", "Q717289", "Q11944654", "Q120023", "Q2223728", "Q918950", "Q21012600", "Q1248130", "Q5805886", "Q1550536", "Q2833774", "Q11909166", "Q18085956", "Q21704664", "Q2958246", "Q261978", "Q3263405", "Q458327", "Q729501", "Q3263403", "Q380400", "Q2072038", "Q1186070", "Q3302602", "Q707621", "Q1066541", "Q2240498", "Q2848441", "Q22973937", "Q289943", "Q19912451", "Q126656", "Q939705", "Q9023677", "Q2127891", "Q202239", "Q354672", "Q436498", "Q16831530", "Q442947", "Q571442", "Q503809", "Q2320071", "Q2468166", "Q562433", "Q2062088", "Q3340335", "Q5527814", "Q569532", "Q2283178", "Q434297", "Q1895917", "Q14338162", "Q3768000", "Q2176089", "Q10834718", "Q24026693", "Q16887300", "Q348293", "Q11307766", "Q458104", "Q15967081", "Q290720", "Q1611581", "Q24029754", "Q783986", "Q2834389", "Q1774697", "Q1855018", "Q1986689", "Q2359280", "Q333294", "Q526100", "Q966628", "Q62168", "Q221328", "Q615618", "Q18085913", "Q3787493", "Q2594211", "Q13736441", "Q18068045", "Q668184", "Q17297597", "Q313363", "Q972498", "Q1353431", "Q1703567", "Q464594", "Q1459860", "Q2408210", "Q15444423", "Q4892864", "Q2839800", "Q2353560", "Q1080078", "Q2052154", "Q2084728", "Q4203738", "Q18225252", "Q18862668", "Q15875305", "Q2228781", "Q20859016", "Q523480", "Q2966529", "Q16177128", "Q2779487", "Q958979", "Q125989", "Q4389784", "Q7326078", "Q6236303", "Q21099873", "Q768306", "Q2017253", "Q2006593", "Q15260850", "Q2844731", "Q2483714", "Q2053345", "Q437952", "Q2546676", "Q1944564", "Q721665", "Q633333", "Q7611333", "Q2441274", "Q4895452", "Q776743", "Q544055", "Q597601", "Q1104630", "Q3281569", "Q647934", "Q18225175", "Q14907784", "Q18225173", "Q3767999", "Q670332", "Q2210950", "Q19301564", "Q275651", "Q347460", "Q822663", "Q196408", "Q1341798", "Q15967469", "Q5953209", "Q4711559", "Q726943", "Q2067377", "Q3762038", "Q16631485", "Q1611600", "Q68601", "Q1611605", "Q3092651", "Q607694", "Q4794470", "Q1244579", "Q3339533", "Q3339532", "Q520529", "Q948032", "Q3216954", "Q2102248", "Q1967490", "Q21029103", "Q1394056", "Q450776", "Q385719", "Q1253076", "Q2341204", "Q3351442", "Q816735", "Q450041", "Q1635246", "Q2011824", "Q3387435", "Q2665690", "Q110277", "Q86368", "Q1379693", "Q16887280", "Q2662592", "Q22712448", "Q17341078", "Q1363300", "Q2044232", "Q10285464", "Q2675530", "Q319439", "Q11926160", "Q2043886", "Q132511", "Q1694707", "Q381837", "Q446875", "Q2601495", "Q63175", "Q4403457", "Q3262631", "Q2490867", "Q3262635", "Q3271449", "Q2343809", "Q1974401", "Q11946148", "Q13737648", "Q1874128", "Q111490", "Q3184206", "Q3081017", "Q2853482", "Q14916276", "Q5992356", "Q313857", "Q648471", "Q5880543", "Q3242513", "Q22939064", "Q998069", "Q19543945", "Q686746", "Q381851", "Q61276", "Q3262788", "Q571460", "Q1247272", "Q5697802", "Q13648950", "Q1177456", "Q2358732", "Q2423442", "Q3175211", "Q596078", "Q64333", "Q1452234", "Q2193251", "Q1394015", "Q218747", "Q830103", "Q2251384"], "coreference_resolved_question": "Which people hold the noble title count and have male as the sex?", "s_expression_fn": "(AND (JOIN noble_title count) (JOIN instance_of common_name) (JOIN sex_or_gender male))", "predicted_s_expression_fn": "(AND (JOIN noble_title count) (JOIN sex_or_gender male) (JOIN instance_of common_name))", "predicted_s_expression": "(AND (JOIN P97 Q3519259) (JOIN P21 Q6581097) (JOIN P31 Q502895))", "sparql_attempt_count": 2, "actions": "SELECT ?x WHERE { ?x wdt:P97 wd:Q3519259 . ?x wdt:P21 wd:Q6581097 . ?x wdt:P31 wd:Q502895 . }"}, {"turnID": "100.58.6", "question_type": "Logical Reasoning (All)", "description": "Logical|Difference|Multiple_Relation", "question": "Which people holds the title count and do not have gender of male ? [CTX]", "answer": "Some of them are Lucia of La Marche, Isabella, Countess of Brienne, Margaretha van Ligny, Beatrice, Countess of Arundel, Maria Dorothea of Salm, Adelaide Filleul, Marquise de Souza-Botelho, Alys, Countess of the Vexin, Doroth\u00e9e Lubomirska, Kristina Antander, Sibil\u00b7la I de Pallars Sobir\u00e0", "s_expression": "(DIFF (AND (JOIN P97 Q3519259) (JOIN P31 Q502895)) (JOIN P21 Q6581097))", "s_expression_cores": ["(AND (JOIN P97 Q3519259) (JOIN P31 Q502895))", "(JOIN P21 Q6581097)"], "sparql_delex": "SELECT ?x WHERE { ?x wdt:P97 wd:Q3519259 . ?x wdt:P31 wd:Q502895 .  FILTER NOT EXISTS { ?x wdt:P21 wd:Q6581097 .  } }", "results": ["Q62443", "Q11682276", "Q268622", "Q2349312", "Q104785", "Q2506063", "Q1633831", "Q14916369", "Q15301378", "Q266926", "Q635315", "Q253453", "Q2233345", "Q2485338", "Q2851163", "Q1818511", "Q19931332", "Q1878465", "Q20202188", "Q11917614", "Q18537817", "Q14782688", "Q17641798", "Q15297149", "Q16831611", "Q18745548", "Q2555172", "Q19997645", "Q258027", "Q17300691", "Q2741498", "Q6050", "Q3010050", "Q1766277", "Q469959", "Q589562", "Q2409565", "Q2250556", "Q22092200", "Q18417579", "Q20730609", "Q235462", "Q17504930", "Q2961526", "Q2083681", "Q2072149", "Q11928049", "Q3946428", "Q19301959", "Q1924925", "Q14916831", "Q2851363", "Q21069484", "Q14365930", "Q4104725", "Q7229", "Q263997", "Q20726278", "Q2559464", "Q17487709", "Q4459324", "Q170846", "Q1916706", "Q3120831", "Q17300716", "Q20789533", "Q2082875", "Q20968069", "Q2609493", "Q17521685", "Q113865", "Q3718748", "Q276035", "Q16635176"], "coreference_resolved_question": "Which people holds the title count and do not have gender of male?", "s_expression_fn": "(DIFF (AND (JOIN noble_title count) (JOIN instance_of common_name)) (JOIN sex_or_gender male))", "predicted_s_expression_fn": "(DIFF (AND (JOIN noble_title count) (JOIN instance_of common_name)) (AND (JOIN sex_or_gender male) (JOIN instance_of common_name)))", "predicted_s_expression": "", "sparql_attempt_count": 1, "actions": ""}, {"turnID": "100.58.7", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Multiple_Relation", "question": "Which people are the offspring of Henry V, Count of Luxembourg and have male as the sex ? [CTX]", "answer": "Henry VI, Count of Luxembourg, Waleran I of Luxembourg, Lord of Ligny", "s_expression": "(AND (JOIN P22 Q72364) (JOIN P31 Q502895) (JOIN P21 Q6581097))", "s_expression_cores": ["(AND (JOIN P22 Q72364) (JOIN P31 Q502895) (JOIN P21 Q6581097))"], "sparql_delex": "SELECT ?x WHERE { ?x wdt:P22 wd:Q72364 . ?x wdt:P31 wd:Q502895 .  ?x wdt:P21 wd:Q6581097 .  }", "results": ["Q83678", "Q478034"], "coreference_resolved_question": "Which people are the offspring of Henry V, Count of Luxembourg and have male as the sex?", "s_expression_fn": "(AND (JOIN father Henry_V,_Count_of_Luxembourg) (JOIN instance_of common_name) (JOIN sex_or_gender male))", "predicted_s_expression_fn": "(AND (JOIN father Henry_V,_Count_of_Luxembourg) (JOIN sex_or_gender male) (JOIN instance_of common_name))", "predicted_s_expression": "(AND (JOIN P22 Q72364) (JOIN P21 Q6581097) (JOIN P31 Q502895))", "sparql_attempt_count": 2, "actions": "SELECT ?x WHERE { ?x wdt:P22 wd:Q72364 . ?x wdt:P21 wd:Q6581097 . ?x wdt:P31 wd:Q502895 . }"}, {"turnID": "100.30.2", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Single_Relation", "question": "Which administrative territories do Nick Rogers or Lidija Nikolajewna Smirnowa belong to ? [CTX]", "answer": "United States of America, Russia", "s_expression": "(OR (AND (JOIN (R P27) Q27642893) (JOIN P31 Q15617994)) (AND (JOIN (R P27) Q521753) (JOIN P31 Q15617994)))", "s_expression_cores": ["(AND (JOIN (R P27) Q27642893) (JOIN P31 Q15617994))", "(AND (JOIN (R P27) Q521753) (JOIN P31 Q15617994))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q27642893 wdt:P27 ?x . ?x wdt:P31 wd:Q15617994 .  } UNION { wd:Q521753 wdt:P27 ?x . ?x wdt:P31 wd:Q15617994 .  } }", "results": ["Q30", "Q159"], "coreference_resolved_question": "Which administrative territories do Nick Rogers or Lidija Nikolajewna Smirnowa belong to?", "s_expression_fn": "(OR (AND (JOIN (R country_of_citizenship) Nick_Rogers) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (AND (JOIN (R country_of_citizenship) Lidija_Nikolajewna_Smirnowa) (JOIN instance_of designation_for_an_administrative_territorial_entity)))", "predicted_s_expression_fn": "(DISTINCT (AND (JOIN (R country_of_citizenship) (VALUES Nick_Rogers Lidija_Nikolajewna_Smirnowa)) (JOIN instance_of designation_for_an_administrative_territorial_entity)))", "predicted_s_expression": "(DISTINCT (AND (JOIN (R P27) (VALUES Q27642893 Q521753)) (JOIN P31 Q15617994)))", "sparql_attempt_count": 2, "actions": "SELECT DISTINCT ?x WHERE { VALUES ?x0 { wd:Q27642893 wd:Q521753 } . ?x0 wdt:P27 ?x . ?x wdt:P31 wd:Q15617994 . }"}, {"turnID": "868.61.7", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Multiple_Relation", "question": "Which administrative territories are Ryan Broyles an inhabitant of or are Bakewell tart present in ? [CTX]", "answer": "United States of America, United Kingdom", "s_expression": "(OR (AND (JOIN (R P27) Q3453750) (JOIN P31 Q15617994)) (AND (JOIN (R P17) Q804411) (JOIN P31 Q15617994)))", "s_expression_cores": ["(AND (JOIN (R P27) Q3453750) (JOIN P31 Q15617994))", "(AND (JOIN (R P17) Q804411) (JOIN P31 Q15617994))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q3453750 wdt:P27 ?x . ?x wdt:P31 wd:Q15617994 .  } UNION { wd:Q804411 wdt:P17 ?x . ?x wdt:P31 wd:Q15617994 .  } }", "results": ["Q30", "Q145"], "coreference_resolved_question": "Which administrative territories are Ryan Broyles an inhabitant of or are Bakewell tart present in?", "s_expression_fn": "(OR (AND (JOIN (R country_of_citizenship) Ryan_Broyles) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (AND (JOIN (R country) Bakewell_tart) (JOIN instance_of designation_for_an_administrative_territorial_entity)))", "predicted_s_expression_fn": "(DISTINCT (OR (AND (JOIN (R country_of_citizenship) Ryan_Broyles) (JOIN (R country) Bakewell_tart)))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "868.35.6", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Multiple_Relation", "question": "Which administrative territories are the location of discovery of Idolino or do Diyan Dimov belong to ? [CTX]", "answer": "Pesaro, Bulgaria", "s_expression": "(OR (AND (JOIN (R P189) Q1095794) (JOIN P31 Q15617994)) (AND (JOIN (R P27) Q5285021) (JOIN P31 Q15617994)))", "s_expression_cores": ["(AND (JOIN (R P189) Q1095794) (JOIN P31 Q15617994))", "(AND (JOIN (R P27) Q5285021) (JOIN P31 Q15617994))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q1095794 wdt:P189 ?x . ?x wdt:P31 wd:Q15617994 .  } UNION { wd:Q5285021 wdt:P27 ?x . ?x wdt:P31 wd:Q15617994 .  } }", "results": ["Q13134", "Q219"], "coreference_resolved_question": "Which administrative territories are the location of discovery of Idolino or do Diyan Dimov belong to?", "s_expression_fn": "(OR (AND (JOIN (R location_of_discovery) Idolino) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (AND (JOIN (R country_of_citizenship) Diyan_Dimov) (JOIN instance_of designation_for_an_administrative_territorial_entity)))", "predicted_s_expression_fn": "(DISTINCT (OR (AND (JOIN (R place_of_discovery) Idolino) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (AND (JOIN (R country_of_citizenship) Diyan_Dimov) (JOIN instance_of designation_for_an_administrative_territorial_entity)))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "868.35.7", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Multiple_Relation", "question": "Which landforms were Croatian Apoxyomenos discovered or are Jach'a Khuchi a component of ? [CTX]", "answer": "Lo\u0161inj, Andes", "s_expression": "(OR (AND (JOIN (R P189) Q1525417) (JOIN P31 Q271669)) (AND (JOIN (R P361) Q25104165) (JOIN P31 Q271669)))", "s_expression_cores": ["(AND (JOIN (R P189) Q1525417) (JOIN P31 Q271669))", "(AND (JOIN (R P361) Q25104165) (JOIN P31 Q271669))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q1525417 wdt:P189 ?x . ?x wdt:P31 wd:Q271669 .  } UNION { wd:Q25104165 wdt:P361 ?x . ?x wdt:P31 wd:Q271669 .  } }", "results": ["Q461426", "Q5456"], "coreference_resolved_question": "Which landforms were Croatian Apoxyomenos discovered or are Jach'a Khuchi a component of?", "s_expression_fn": "(OR (AND (JOIN (R location_of_discovery) Croatian_Apoxyomenos) (JOIN instance_of landform)) (AND (JOIN (R part_of) Jach'a_Khuchi) (JOIN instance_of landform)))", "predicted_s_expression_fn": "(OR (AND (JOIN (R location_of_discovery) Croatian_Apoxyomenos) (JOIN instance_of landform)) (AND (JOIN (R component_of) Jach'a_Khuchi) (JOIN instance_of landform)))", "predicted_s_expression": "", "sparql_attempt_count": 1, "actions": ""}, {"turnID": "868.128.8", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Single_Relation", "question": "Which works of art are Hans J. Salter or Ilaiyaraaja a composer of ? [CTX]", "answer": "Some of them are Gopura Vasalile, Divorce: Not Between Husband and Wife, Ninaive Oru Sangeetham, Gloria, Sri Rama Rajyam, Aan Paavam, Abbayitho Ammayi, Naan Potta Savaal, Son of Dracula, Irandil Ondru", "s_expression": "(OR (AND (JOIN P86 Q85707) (JOIN P31 Q838948)) (AND (JOIN P86 Q2720141) (JOIN P31 Q838948)))", "s_expression_cores": ["(AND (JOIN P86 Q85707) (JOIN P31 Q838948))", "(AND (JOIN P86 Q2720141) (JOIN P31 Q838948))"], "sparql_delex": "SELECT ?x WHERE { { ?x wdt:P86 wd:Q85707 . ?x wdt:P31 wd:Q838948 .  } UNION { ?x wdt:P86 wd:Q2720141 . ?x wdt:P31 wd:Q838948 .  } }", "results": ["Q12976201", "Q3424335", "Q7148301", "Q3411584", "Q3536816", "Q4004393", "Q8050230", "Q16251628", "Q4771463", "Q16254697", "Q6907912", "Q16255184", "Q7917562", "Q949666", "Q5269339", "Q7258341", "Q11237886", "Q3534607", "Q16249216", "Q4822034", "Q3226877", "Q7904117", "Q7426511", "Q18128396", "Q931835", "Q17060132", "Q7262251", "Q6960965", "Q5380118", "Q6343361", "Q4673955", "Q6937467", "Q5375175", "Q7376917", "Q7918057", "Q5375178", "Q6807631", "Q7795993", "Q17018575", "Q7795994", "Q7285462", "Q7259178", "Q7260451", "Q2721229", "Q7094377", "Q16248713", "Q4900709", "Q1088632", "Q16966849", "Q15377445", "Q20649501", "Q4164442", "Q3517867", "Q6963166", "Q7332000", "Q5036774", "Q7288514", "Q7121511", "Q6935280", "Q7038200", "Q5620434", "Q6308185", "Q264943", "Q6982696", "Q7647348", "Q5269248", "Q7426170", "Q8056571", "Q16254909", "Q6934298", "Q15631429", "Q7305142", "Q7499226", "Q4813683", "Q7499225", "Q7398949", "Q16308208", "Q1523236", "Q7797093", "Q12124793", "Q5374981", "Q5252602", "Q7917094", "Q7105125", "Q3536854", "Q7130680", "Q18128744", "Q7317115", "Q12126846", "Q7426162", "Q7126615", "Q16255140", "Q3208765", "Q6159190", "Q6343229", "Q18209594", "Q3140572", "Q7902717", "Q7882022", "Q16057865", "Q4667407", "Q3424202", "Q7785399", "Q4827453", "Q7781362", "Q6353946", "Q1199739", "Q4754316", "Q3208990", "Q3536750", "Q5523376", "Q16242734", "Q4777787", "Q3231076", "Q7398009", "Q5090335", "Q7227926", "Q7227927", "Q16249089", "Q7876983", "Q17052094", "Q5072661", "Q3536760", "Q7123747", "Q19630315", "Q17028998", "Q7768055", "Q15692512", "Q18128391", "Q5101172", "Q18126972", "Q7532264", "Q6095755", "Q3424294", "Q2420727", "Q7908702", "Q4767791", "Q10998844", "Q4901193", "Q15302068", "Q19580944", "Q5101131", "Q5101136", "Q4837390", "Q24905589", "Q24905588", "Q16314291", "Q7397863", "Q7879153", "Q13651133", "Q17029004", "Q18127004", "Q6345423", "Q5515230", "Q7882308", "Q7523343", "Q3465274", "Q1138096", "Q21646598", "Q2910748", "Q6928427", "Q4928017", "Q6407438", "Q3687380", "Q1026615", "Q16248697", "Q4667432", "Q7913939", "Q4661335", "Q3220689", "Q6754166", "Q12973525", "Q17005592", "Q16057838", "Q6728831", "Q15990821", "Q3801196", "Q16248132", "Q4661525", "Q6428973", "Q1953971", "Q232177", "Q1374462", "Q7121489", "Q4751997", "Q16254940", "Q6364060", "Q6807659", "Q6378298", "Q5101137", "Q4699550", "Q7246451", "Q3536866", "Q3822480", "Q4848601", "Q12979428", "Q18124588", "Q5504131", "Q16248670", "Q6919087", "Q10294442", "Q6991627", "Q4752521", "Q6347418", "Q6963222", "Q15214094", "Q7042215", "Q24807089", "Q4832493", "Q7377512", "Q3537831", "Q1953523", "Q6956582", "Q6956583", "Q8062138", "Q16249438", "Q12978903", "Q5100119", "Q12973412", "Q21869500", "Q1444712", "Q1444710", "Q6344990", "Q7130903", "Q4661363", "Q6729637", "Q16959563", "Q6373748", "Q6733313", "Q19892457", "Q24807876", "Q20814605", "Q19881982", "Q4767802", "Q7190701", "Q4682496", "Q3473364", "Q13111537", "Q13008263", "Q16254707", "Q17495972", "Q17017175", "Q7966340", "Q7879068", "Q17495701", "Q268668", "Q4752522", "Q2651105", "Q16245741", "Q2002475", "Q7923769", "Q7932757", "Q7799551", "Q16253083", "Q19600243", "Q5403699", "Q8060337", "Q25206197", "Q7899798", "Q7522240", "Q24883885", "Q16466384", "Q5379026", "Q7228912", "Q6381072", "Q7928497", "Q3644994", "Q1257010", "Q17495797", "Q6796777", "Q628492", "Q4705616", "Q16252677", "Q16251280", "Q2720955", "Q16252670", "Q19570936", "Q7929545", "Q7858391", "Q6739783", "Q6943807", "Q7744329", "Q24806754", "Q11038738", "Q4683055", "Q3424339", "Q2817329", "Q2806164", "Q24905502", "Q1216554", "Q7131389", "Q6374497", "Q18210118", "Q3424368", "Q5101150", "Q5101151", "Q16828863", "Q7627280", "Q7562757", "Q20538739", "Q5374991", "Q12973192", "Q4747136", "Q7262239", "Q4934669", "Q16251415", "Q25136715", "Q5068476", "Q12985351", "Q19572860", "Q2756294", "Q4661020", "Q13637930", "Q4832499", "Q13007653", "Q7147882", "Q12985176", "Q5501204", "Q3644996", "Q6419201", "Q2921323", "Q18111794", "Q6729674", "Q15301854", "Q7240135", "Q7049851", "Q16248228", "Q6353287", "Q3230626", "Q7105150", "Q17017323", "Q12985675", "Q7258338", "Q2137301", "Q7258336", "Q7196354", "Q3878049", "Q7918784", "Q12980167", "Q5269225", "Q21780595", "Q17032951", "Q17495753", "Q17495699", "Q16250522", "Q16251167", "Q7586263", "Q6035291", "Q16251241", "Q16252066", "Q6961968", "Q13564490", "Q7091657", "Q8875351", "Q12987772", "Q4902293", "Q21998179", "Q7292998", "Q7558317", "Q7558315", "Q760266", "Q3429513", "Q7738522", "Q260038", "Q3422446", "Q6744131", "Q19573171", "Q1197712", "Q6727400", "Q16249549", "Q1133230", "Q21646011", "Q1774998", "Q7710276", "Q2053049", "Q12982005", "Q6796707", "Q7915096", "Q7228735", "Q7124146", "Q3536522", "Q7124148", "Q3361988", "Q7040073", "Q7042205", "Q4691637", "Q6345025", "Q5266605", "Q3644978", "Q5101187", "Q7562725", "Q7395598", "Q12981021", "Q1198533", "Q3181879", "Q6122136", "Q18602909", "Q7764168", "Q6363812", "Q16254710", "Q7409686", "Q16254753", "Q7836829", "Q3523217", "Q4802327", "Q3793494", "Q17052414", "Q12975519", "Q6367899", "Q5364621", "Q5364622", "Q3109100", "Q7285500", "Q6945251", "Q7709826", "Q6754763", "Q13653666", "Q6349506", "Q19818519", "Q1056710", "Q7751328", "Q6354930", "Q7194115", "Q6448623", "Q7532265", "Q7418678", "Q6343241", "Q16242799", "Q7294725", "Q6986903", "Q3142604", "Q6350182", "Q7549271", "Q4672549", "Q7278424", "Q13564467", "Q7285602", "Q6733087", "Q6343306", "Q1444746", "Q5269737", "Q12973609", "Q6943808", "Q5987762", "Q5618463", "Q976139", "Q11250601", "Q15301989", "Q7168949", "Q4781907", "Q15301982", "Q16251962", "Q7410273", "Q6752218", "Q3536588", "Q4783631", "Q5101149", "Q646187", "Q1411184", "Q6355945", "Q7262242", "Q6963387", "Q1609570", "Q12973322", "Q3532119", "Q16251985", "Q17001686", "Q7166807", "Q6379069", "Q3412915", "Q6932077", "Q7367155", "Q12985581", "Q1926164", "Q3644983", "Q2362638", "Q5620323", "Q3644986", "Q17017928", "Q6956602", "Q19570768", "Q4956197", "Q7080482", "Q6956579", "Q4661729", "Q3073772", "Q25136229", "Q6732497", "Q3536743", "Q15651389", "Q7121964", "Q6371077", "Q4900548", "Q24211347", "Q17017152", "Q5269255", "Q3681903", "Q16251258", "Q3645007", "Q1257106", "Q7129899", "Q7133088", "Q6907173", "Q3644934", "Q24896466", "Q18210097", "Q7911653", "Q6027147", "Q12975523", "Q16972804", "Q6266181", "Q7547593", "Q17067643", "Q2662951", "Q17495818", "Q4777977", "Q13159849", "Q1001777", "Q6379229", "Q3214254", "Q7416301", "Q4552081", "Q12974602", "Q7879141", "Q16255011", "Q7785433", "Q5375020", "Q18809391", "Q12988403", "Q16250585", "Q12975634", "Q7758253", "Q6733439", "Q7915474", "Q24802702", "Q12986632", "Q6750693", "Q18809072", "Q5167486", "Q5071397", "Q4781644", "Q7285673", "Q6960933", "Q6343350", "Q1857341", "Q7752893", "Q6832432", "Q16468649", "Q4751361", "Q7918121", "Q7089364", "Q20949958", "Q7653907", "Q5620328", "Q13114252", "Q7227911", "Q17067447", "Q16954931", "Q5915772", "Q1163010", "Q26963051", "Q7907845", "Q7718277", "Q23013770", "Q15256893", "Q12988380", "Q23305698", "Q6691785", "Q7918228", "Q17013125", "Q7395625", "Q3530921", "Q21010867", "Q4784125", "Q12982774", "Q7897136", "Q16254726", "Q16057864", "Q4901188", "Q17495723", "Q12989339", "Q262018", "Q12985051", "Q1466541", "Q8057440", "Q5996996", "Q12987862", "Q128930", "Q3429658", "Q6419183", "Q5269459", "Q585892", "Q17030821", "Q7285510", "Q6957922", "Q16250186", "Q6748022", "Q3951530", "Q6721300", "Q17052490", "Q6777980", "Q3536924", "Q17495851", "Q7928103", "Q16251716", "Q3418155", "Q5529987", "Q12977484", "Q7912402", "Q6371124", "Q7710397", "Q5096588", "Q6385446", "Q12980108", "Q16245737", "Q8025627", "Q16252618", "Q5102519", "Q15301991", "Q7240185", "Q7409390", "Q7804866", "Q5584330", "Q1170437", "Q5284662", "Q5249059"], "coreference_resolved_question": "Which works of art are Hans J. Salter or Ilaiyaraaja a composer of?", "s_expression_fn": "(OR (AND (JOIN composer Hans_J._Salter) (JOIN instance_of work_of_art)) (AND (JOIN composer Ilaiyaraaja) (JOIN instance_of work_of_art)))", "predicted_s_expression_fn": "(DISTINCT (AND (JOIN (R composer) (VALUES Hans_J._Salter Ilaiyaraaja) (JOIN instance_of work_of_art)))", "predicted_s_expression": "", "sparql_attempt_count": 2, "actions": ""}, {"turnID": "868.55.2", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Multiple_Relation", "question": "Which administrative territories are Domingo C\u00e1ceres an inhabitant of or are Kot situated in ? [CTX]", "answer": "Uruguay, Slovenia", "s_expression": "(OR (AND (JOIN (R P27) Q16550438) (JOIN P31 Q15617994)) (AND (JOIN (R P17) Q6433720) (JOIN P31 Q15617994)))", "s_expression_cores": ["(AND (JOIN (R P27) Q16550438) (JOIN P31 Q15617994))", "(AND (JOIN (R P17) Q6433720) (JOIN P31 Q15617994))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q16550438 wdt:P27 ?x . ?x wdt:P31 wd:Q15617994 .  } UNION { wd:Q6433720 wdt:P17 ?x . ?x wdt:P31 wd:Q15617994 .  } }", "results": ["Q77", "Q215"], "coreference_resolved_question": "Which administrative territories are Domingo C\u00e1ceres an inhabitant of or are Kot situated in?", "s_expression_fn": "(OR (AND (JOIN (R country_of_citizenship) Domingo_C\u00e1ceres) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (AND (JOIN (R country) Kot) (JOIN instance_of designation_for_an_administrative_territorial_entity)))", "predicted_s_expression_fn": "(DISTINCT (OR (AND (JOIN (R country_of_citizenship) Domingo_C\u00e1ceres) (JOIN (R country) Kot)))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "868.152.3", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Single_Relation", "question": "Which administrative territories are Frank J. Lynch or Alain Guais an inhabitant of ? [CTX]", "answer": "France, United States of America", "s_expression": "(OR (AND (JOIN (R P27) Q5487469) (JOIN P31 Q15617994)) (AND (JOIN (R P27) Q2829885) (JOIN P31 Q15617994)))", "s_expression_cores": ["(AND (JOIN (R P27) Q5487469) (JOIN P31 Q15617994))", "(AND (JOIN (R P27) Q2829885) (JOIN P31 Q15617994))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q5487469 wdt:P27 ?x . ?x wdt:P31 wd:Q15617994 .  } UNION { wd:Q2829885 wdt:P27 ?x . ?x wdt:P31 wd:Q15617994 .  } }", "results": ["Q142", "Q30"], "coreference_resolved_question": "Which administrative territories are Frank J. Lynch or Alain Guais an inhabitant of?", "s_expression_fn": "(OR (AND (JOIN (R country_of_citizenship) Frank_J._Lynch) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (AND (JOIN (R country_of_citizenship) Alain_Guais) (JOIN instance_of designation_for_an_administrative_territorial_entity)))", "predicted_s_expression_fn": "(DISTINCT (AND (JOIN (R country_of_citizenship) (VALUES Frank_J._Lynch Alain_Guais)) (JOIN instance_of designation_for_an_administrative_territorial_entity)))", "predicted_s_expression": "(DISTINCT (AND (JOIN (R P27) (VALUES Q5487469 Q2829885)) (JOIN P31 Q15617994)))", "sparql_attempt_count": 2, "actions": "SELECT DISTINCT ?x WHERE { VALUES ?x0 { wd:Q5487469 wd:Q2829885 } . ?x0 wdt:P27 ?x . ?x wdt:P31 wd:Q15617994 . }"}, {"turnID": "868.155.9", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Single_Relation|Incomplete", "question": "Which sports venue is the home field of athletics at the 2016 Summer Olympics ? [SEP] Est\u00e1dio Ol\u00edmpico Jo\u00e3o Havelange [SEP] Which type of sport was that sport discipline a part of ? [SEP] athletics [SEP] Or Chantal Daucourt? [CTX]", "answer": "athletics, ski mountaineering, mountain biking", "s_expression": "(OR (AND (JOIN (R P641) Q18193712) (JOIN P31 Q31629)) (AND (JOIN (R P641) Q2346745) (JOIN P31 Q31629)))", "s_expression_cores": ["(AND (JOIN (R P641) Q18193712) (JOIN P31 Q31629))", "(AND (JOIN (R P641) Q2346745) (JOIN P31 Q31629))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q18193712 wdt:P641 ?x . ?x wdt:P31 wd:Q31629 .  } UNION { wd:Q2346745 wdt:P641 ?x . ?x wdt:P31 wd:Q31629 .  } }", "results": ["Q542", "Q1075998", "Q520611"], "coreference_resolved_question": "Which type of sport was athletics a part of?", "s_expression_fn": "(OR (AND (JOIN (R sport) athletics_at_the_2016_Summer_Olympics) (JOIN instance_of type_of_sport)) (AND (JOIN (R sport) Chantal_Daucourt) (JOIN instance_of type_of_sport)))", "predicted_s_expression_fn": "(OR (AND (JOIN (R sport) Est\u00e1dio_Ol\u00edmpico_Jo\u00e3o_Havelange) (JOIN instance_of sport_discipline)) (AND (JOIN (R sport) Chantal_Daucourt) (JOIN instance_of sport_discipline)))", "predicted_s_expression": "", "sparql_attempt_count": 1, "actions": ""}, {"turnID": "868.179.8", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Single_Relation", "question": "Which administrative territories are St. Joseph or Shahrak-e Meysam present in ? [CTX]", "answer": "United States of America, Iran", "s_expression": "(OR (AND (JOIN (R P17) Q745120) (JOIN P31 Q15617994)) (AND (JOIN (R P17) Q5812527) (JOIN P31 Q15617994)))", "s_expression_cores": ["(AND (JOIN (R P17) Q745120) (JOIN P31 Q15617994))", "(AND (JOIN (R P17) Q5812527) (JOIN P31 Q15617994))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q745120 wdt:P17 ?x . ?x wdt:P31 wd:Q15617994 .  } UNION { wd:Q5812527 wdt:P17 ?x . ?x wdt:P31 wd:Q15617994 .  } }", "results": ["Q30", "Q794"], "coreference_resolved_question": "Which administrative territories are St. Joseph or Shahrak-e Meysam present in?", "s_expression_fn": "(OR (AND (JOIN (R country) St._Joseph) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (AND (JOIN (R country) Shahrak-e_Meysam) (JOIN instance_of designation_for_an_administrative_territorial_entity)))", "predicted_s_expression_fn": "(DISTINCT (AND (JOIN (R location) (VALUES St._Joseph Shahrak-e_Meysam)) (JOIN instance_of designation_for_an_administrative_territorial_entity)))", "predicted_s_expression": "", "sparql_attempt_count": 2, "actions": ""}, {"turnID": "868.179.10", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Single_Relation", "question": "Which administrative territories are the native countriesof Shere Hite or Jean-Jacques B\u00e9chio ? [CTX]", "answer": "United States of America, C\u00f4te d'Ivoire", "s_expression": "(OR (AND (JOIN (R P27) Q64397) (JOIN P31 Q15617994)) (AND (JOIN (R P27) Q3166204) (JOIN P31 Q15617994)))", "s_expression_cores": ["(AND (JOIN (R P27) Q64397) (JOIN P31 Q15617994))", "(AND (JOIN (R P27) Q3166204) (JOIN P31 Q15617994))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q64397 wdt:P27 ?x . ?x wdt:P31 wd:Q15617994 .  } UNION { wd:Q3166204 wdt:P27 ?x . ?x wdt:P31 wd:Q15617994 .  } }", "results": ["Q30", "Q1008"], "coreference_resolved_question": "Which administrative territories are the native countries of Shere Hite or Jean-Jacques B\u00e9chio?", "s_expression_fn": "(OR (AND (JOIN (R country_of_citizenship) Shere_Hite) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (AND (JOIN (R country_of_citizenship) Jean-Jacques_B\u00e9chio) (JOIN instance_of designation_for_an_administrative_territorial_entity)))", "predicted_s_expression_fn": "(DISTINCT (AND (JOIN (R country_of_citizenship) (VALUES Shere_Hite Jean-Jacques_B\u00e9chio)) (JOIN instance_of designation_for_an_administrative_territorial_entity)))", "predicted_s_expression": "(DISTINCT (AND (JOIN (R P27) (VALUES Q64397 Q3166204)) (JOIN P31 Q15617994)))", "sparql_attempt_count": 2, "actions": "SELECT DISTINCT ?x WHERE { VALUES ?x0 { wd:Q64397 wd:Q3166204 } . ?x0 wdt:P27 ?x . ?x wdt:P31 wd:Q15617994 . }"}, {"turnID": "868.68.2", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Multiple_Relation", "question": "What are Williams in and are considered to be the original language of creation of Gain-of-function variant in GLUD2 glutamate dehydrogenase modifies Parkinson's disease onset ? [CTX]", "answer": "English", "s_expression": "(AND (JOIN (R P407) Q1688722) (JOIN P31 Q34770) (JOIN (R P364) Q24598992))", "s_expression_cores": ["(AND (JOIN (R P407) Q1688722) (JOIN P31 Q34770) (JOIN (R P364) Q24598992))"], "sparql_delex": "SELECT ?x WHERE { wd:Q1688722 wdt:P407 ?x . ?x wdt:P31 wd:Q34770 .  wd:Q24598992 wdt:P364 ?x .  }", "results": ["Q1860"], "coreference_resolved_question": "What are Williams in and are considered to be the original language of creation of Gain-of-function variant in GLUD2 glutamate dehydrogenase modifies Parkinson's disease onset?", "s_expression_fn": "(AND (JOIN (R language_of_work_or_name) Williams) (JOIN instance_of language) (JOIN (R original_language_of_film_or_TV_show) Gain-of-function_variant_in_GLUD2_glutamate_dehydrogenase_modifies_Parkinson's_disease_onset))", "predicted_s_expression_fn": "(AND (JOIN (R original_language_of_film_or_TV_show) Williams_in) (JOIN instance_of language))", "predicted_s_expression": "", "sparql_attempt_count": 2, "actions": ""}, {"turnID": "868.68.4", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Single_Relation", "question": "Which political territories do Dudley Williams or Maria Alexandrovna belong to ? [CTX]", "answer": "Australia, Landgraviate of Hesse-Darmstadt", "s_expression": "(OR (AND (JOIN (R P27) Q5312019) (JOIN P31 Q1048835)) (AND (JOIN (R P27) Q155585) (JOIN P31 Q1048835)))", "s_expression_cores": ["(AND (JOIN (R P27) Q5312019) (JOIN P31 Q1048835))", "(AND (JOIN (R P27) Q155585) (JOIN P31 Q1048835))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q5312019 wdt:P27 ?x . ?x wdt:P31 wd:Q1048835 .  } UNION { wd:Q155585 wdt:P27 ?x . ?x wdt:P31 wd:Q1048835 .  } }", "results": ["Q408", "Q693551"], "coreference_resolved_question": "Which political territories do Dudley Williams or Maria Alexandrovna belong to?", "s_expression_fn": "(OR (AND (JOIN (R country_of_citizenship) Dudley_Williams) (JOIN instance_of political_territorial_entity)) (AND (JOIN (R country_of_citizenship) Maria_Alexandrovna) (JOIN instance_of political_territorial_entity)))", "predicted_s_expression_fn": "(DISTINCT (AND (JOIN (R country_of_citizenship) (VALUES Dudley_Williams Maria_Alexandrovna)) (JOIN instance_of political_territorial_entity)))", "predicted_s_expression": "(DISTINCT (AND (JOIN (R P27) (VALUES Q5312019 Q155585)) (JOIN P31 Q1048835)))", "sparql_attempt_count": 2, "actions": "SELECT DISTINCT ?x WHERE { VALUES ?x0 { wd:Q5312019 wd:Q155585 } . ?x0 wdt:P27 ?x . ?x wdt:P31 wd:Q1048835 . }"}, {"turnID": "868.88.2", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Single_Relation", "question": "Which Olympic sporting events were Park Sung-woo or Helene Kirkegaard a participant of ? [CTX]", "answer": "Badminton at the 1996 Summer Olympics \u2013 Women's Doubles, Badminton at the 1996 Summer Olympics \u2013 Mixed Doubles, Badminton at the 2000 Summer Olympics \u2013 Women's Doubles, Badminton at the 1996 Summer Olympics \u2013 Men's Singles", "s_expression": "(OR (AND (JOIN P710 Q13415732) (JOIN P31 Q18536594)) (AND (JOIN P710 Q1601982) (JOIN P31 Q18536594)))", "s_expression_cores": ["(AND (JOIN P710 Q13415732) (JOIN P31 Q18536594))", "(AND (JOIN P710 Q1601982) (JOIN P31 Q18536594))"], "sparql_delex": "SELECT ?x WHERE { { ?x wdt:P710 wd:Q13415732 . ?x wdt:P31 wd:Q18536594 .  } UNION { ?x wdt:P710 wd:Q1601982 . ?x wdt:P31 wd:Q18536594 .  } }", "results": ["Q1441871", "Q2022117", "Q2022215", "Q2022115"], "coreference_resolved_question": "Which Olympic sporting events were Park Sung-woo or Helene Kirkegaard a participant of?", "s_expression_fn": "(OR (AND (JOIN participant Park_Sung-woo) (JOIN instance_of Olympic_sporting_event)) (AND (JOIN participant Helene_Kirkegaard) (JOIN instance_of Olympic_sporting_event)))", "predicted_s_expression_fn": "(DISTINCT (AND (JOIN (R participant) (VALUES Park_Sung-woo Helene_Kirkegaard)) (JOIN instance_of Olympic_sporting_event))", "predicted_s_expression": "", "sparql_attempt_count": 2, "actions": ""}, {"turnID": "868.144.5", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Multiple_Relation", "question": "Which administrative territories did the expiration of Jaroslav Siman occur or are the work locations of Bruno Bernabei ? [CTX]", "answer": "Bratislava, Rome", "s_expression": "(OR (AND (JOIN (R P20) Q13419862) (JOIN P31 Q56061)) (AND (JOIN (R P937) Q3645645) (JOIN P31 Q56061)))", "s_expression_cores": ["(AND (JOIN (R P20) Q13419862) (JOIN P31 Q56061))", "(AND (JOIN (R P937) Q3645645) (JOIN P31 Q56061))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q13419862 wdt:P20 ?x . ?x wdt:P31 wd:Q56061 .  } UNION { wd:Q3645645 wdt:P937 ?x . ?x wdt:P31 wd:Q56061 .  } }", "results": ["Q1780", "Q220"], "coreference_resolved_question": "Which administrative territories are the work locations of Bruno Bernabei?", "s_expression_fn": "(OR (AND (JOIN (R place_of_death) Jaroslav_Siman) (JOIN instance_of administrative_territorial_entity)) (AND (JOIN (R work_location) Bruno_Bernabei) (JOIN instance_of administrative_territorial_entity)))", "predicted_s_expression_fn": "(DISTINCT (OR (AND (JOIN (R place_of_death) Jaroslav_Siman) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (AND (JOIN (R place_of_work) Bruno_Bernabei) (JOIN instance_of designation_for_an_administrative_territorial_entity)))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "868.29.2", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Multiple_Relation", "question": "Which people have the highest formal authority in Russia or starred in Gundello Godari ? [CTX]", "answer": "Dmitry Medvedev, Taapsee Pannu, Lakshmi Manchu, Boris Yeltsin, Aadhi, Sundeep Kishan, Vladimir Putin", "s_expression": "(OR (AND (JOIN (R P35) Q159) (JOIN P31 Q502895)) (AND (JOIN (R P161) Q5618612) (JOIN P31 Q502895)))", "s_expression_cores": ["(AND (JOIN (R P35) Q159) (JOIN P31 Q502895))", "(AND (JOIN (R P161) Q5618612) (JOIN P31 Q502895))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q159 wdt:P35 ?x . ?x wdt:P31 wd:Q502895 .  } UNION { wd:Q5618612 wdt:P161 ?x . ?x wdt:P31 wd:Q502895 .  } }", "results": ["Q23530", "Q7672815", "Q6479877", "Q34453", "Q4661125", "Q7639650", "Q7747"], "coreference_resolved_question": "Which people have the highest formal authority in Russia or starred in Gundello Godari?", "s_expression_fn": "(OR (AND (JOIN (R head_of_state) Russia) (JOIN instance_of common_name)) (AND (JOIN (R cast_member) Gundello_Godari) (JOIN instance_of common_name)))", "predicted_s_expression_fn": "(DISTINCT (OR (AND (JOIN (R formal_authority) Russia) (JOIN instance_of common_name)) (AND (JOIN (R cast_member) Gundello_Godari) (JOIN instance_of common_name)))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "868.29.3", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Single_Relation", "question": "Which administrative territories do Sundeep Kishan or Taposh Ghosh belong to ? [CTX]", "answer": "Bangladesh, India", "s_expression": "(OR (AND (JOIN (R P27) Q7639650) (JOIN P31 Q15617994)) (AND (JOIN (R P27) Q7684736) (JOIN P31 Q15617994)))", "s_expression_cores": ["(AND (JOIN (R P27) Q7639650) (JOIN P31 Q15617994))", "(AND (JOIN (R P27) Q7684736) (JOIN P31 Q15617994))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q7639650 wdt:P27 ?x . ?x wdt:P31 wd:Q15617994 .  } UNION { wd:Q7684736 wdt:P27 ?x . ?x wdt:P31 wd:Q15617994 .  } }", "results": ["Q902", "Q668"], "coreference_resolved_question": "Which administrative territories do Sundeep Kishan or Taposh Ghosh belong to?", "s_expression_fn": "(OR (AND (JOIN (R country_of_citizenship) Sundeep_Kishan) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (AND (JOIN (R country_of_citizenship) Taposh_Ghosh) (JOIN instance_of designation_for_an_administrative_territorial_entity)))", "predicted_s_expression_fn": "(DISTINCT (AND (JOIN (R country_of_citizenship) (VALUES Sundeep_Kishan Taposh_Ghosh)) (JOIN instance_of designation_for_an_administrative_territorial_entity))", "predicted_s_expression": "", "sparql_attempt_count": 2, "actions": ""}, {"turnID": "868.29.4", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Multiple_Relation", "question": "Which administrative territories did Vladimir Putin reside or are the places of birth of Anja Hansen ? [CTX]", "answer": "Moscow, Horsens", "s_expression": "(OR (AND (JOIN (R P551) Q7747) (JOIN P31 Q56061)) (AND (JOIN (R P19) Q2253741) (JOIN P31 Q56061)))", "s_expression_cores": ["(AND (JOIN (R P551) Q7747) (JOIN P31 Q56061))", "(AND (JOIN (R P19) Q2253741) (JOIN P31 Q56061))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q7747 wdt:P551 ?x . ?x wdt:P31 wd:Q56061 .  } UNION { wd:Q2253741 wdt:P19 ?x . ?x wdt:P31 wd:Q56061 .  } }", "results": ["Q649", "Q190235"], "coreference_resolved_question": "Which administrative territories did Vladimir Putin reside or are the places of birth of Anja Hansen?", "s_expression_fn": "(OR (AND (JOIN (R residence) Vladimir_Putin) (JOIN instance_of administrative_territorial_entity)) (AND (JOIN (R place_of_birth) Anja_Hansen) (JOIN instance_of administrative_territorial_entity)))", "predicted_s_expression_fn": "(DISTINCT (OR (AND (JOIN (R place_of_residence) Vladimir_Putin) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (AND (JOIN (R place_of_birth) Anja_Hansen) (JOIN instance_of designation_for_an_administrative_territorial_entity)))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "868.157.3", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Multiple_Relation", "question": "Which administrative territories do Dean Smith belong to or are Gate of the Kiss a part of ? [CTX]", "answer": "Romania, United States of America", "s_expression": "(OR (AND (JOIN (R P27) Q202584) (JOIN P31 Q15617994)) (AND (JOIN (R P17) Q2443657) (JOIN P31 Q15617994)))", "s_expression_cores": ["(AND (JOIN (R P27) Q202584) (JOIN P31 Q15617994))", "(AND (JOIN (R P17) Q2443657) (JOIN P31 Q15617994))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q202584 wdt:P27 ?x . ?x wdt:P31 wd:Q15617994 .  } UNION { wd:Q2443657 wdt:P17 ?x . ?x wdt:P31 wd:Q15617994 .  } }", "results": ["Q218", "Q30"], "coreference_resolved_question": "Which administrative territories do Dean Smith belong to or are Gate of the Kiss a part of?", "s_expression_fn": "(OR (AND (JOIN (R country_of_citizenship) Dean_Smith) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (AND (JOIN (R country) Gate_of_the_Kiss) (JOIN instance_of designation_for_an_administrative_territorial_entity)))", "predicted_s_expression_fn": "(DISTINCT (OR (AND (JOIN (R country_of_citizenship) Dean_Smith) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (AND (JOIN (R part_of) Gate_of_the_Kiss) (JOIN instance_of designation_for_an_administrative_territorial_entity)))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "868.157.10", "question_type": "Logical Reasoning (All)", "description": "Logical|Difference|Multiple_Relation", "question": "Which ship types were Normandy landings a part of and are n't classified as LST-1-class tank landing ship ? [CTX]", "answer": "HMS Enterprise, HNoMS Svenner, LCT 7074", "s_expression": "(DIFF (AND (JOIN P607 Q16470) (JOIN P31 Q2235308)) (JOIN P289 Q21718851))", "s_expression_cores": ["(AND (JOIN P607 Q16470) (JOIN P31 Q2235308))", "(JOIN P289 Q21718851)"], "sparql_delex": "SELECT ?x WHERE { ?x wdt:P607 wd:Q16470 . ?x wdt:P31 wd:Q2235308 .  FILTER NOT EXISTS { ?x wdt:P289 wd:Q21718851 .  } }", "results": ["Q1645144", "Q3381131", "Q19654984"], "coreference_resolved_question": "Which ship types were Normandy landings a part of and are not classified as LST-1-class tank landing ship?", "s_expression_fn": "(DIFF (AND (JOIN conflict Normandy_landings) (JOIN instance_of ship_type)) (JOIN vessel_class LST-1-class_tank_landing_ship))", "predicted_s_expression_fn": "(DIFF (AND (JOIN (R conflict) Normandy_landings) (JOIN instance_of ship_type)) (JOIN instance_of LST-1-class_tank_landing_ship))", "predicted_s_expression": "", "sparql_attempt_count": 2, "actions": ""}, {"turnID": "868.164.9", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Single_Relation", "question": "Which administrative territories are Gyeonggi Province or Lazica situated in ? [CTX]", "answer": "South Korea, Armenia", "s_expression": "(OR (AND (JOIN (R P17) Q20937) (JOIN P31 Q15617994)) (AND (JOIN (R P17) Q136884) (JOIN P31 Q15617994)))", "s_expression_cores": ["(AND (JOIN (R P17) Q20937) (JOIN P31 Q15617994))", "(AND (JOIN (R P17) Q136884) (JOIN P31 Q15617994))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q20937 wdt:P17 ?x . ?x wdt:P31 wd:Q15617994 .  } UNION { wd:Q136884 wdt:P17 ?x . ?x wdt:P31 wd:Q15617994 .  } }", "results": ["Q884", "Q399"], "coreference_resolved_question": "Which administrative territories are Gyeonggi Province or Lazica situated in?", "s_expression_fn": "(OR (AND (JOIN (R country) Gyeonggi_Province) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (AND (JOIN (R country) Lazica) (JOIN instance_of designation_for_an_administrative_territorial_entity)))", "predicted_s_expression_fn": "(DISTINCT (AND (JOIN (R country) (VALUES Gyeonggi_Province Lazica)) (JOIN instance_of designation_for_an_administrative_territorial_entity)))", "predicted_s_expression": "(DISTINCT (AND (JOIN (R P17) (VALUES Q20937 Q136884)) (JOIN P31 Q15617994)))", "sparql_attempt_count": 2, "actions": "SELECT DISTINCT ?x WHERE { VALUES ?x0 { wd:Q20937 wd:Q136884 } . ?x0 wdt:P17 ?x . ?x wdt:P31 wd:Q15617994 . }"}, {"turnID": "868.87.14", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Single_Relation", "question": "Which visual artss have the character Applejack and Pumpkin Cake ? [CTX]", "answer": "Baby Cakes, Pinkie Pride", "s_expression": "(AND (JOIN P674 Q7468973) (JOIN P31 Q36649) (JOIN P674 Q15725299))", "s_expression_cores": ["(AND (JOIN P674 Q7468973) (JOIN P31 Q36649) (JOIN P674 Q15725299))"], "sparql_delex": "SELECT ?x WHERE { ?x wdt:P674 wd:Q7468973 . ?x wdt:P31 wd:Q36649 .  ?x wdt:P674 wd:Q15725299 .  }", "results": ["Q15719277", "Q15711191"], "coreference_resolved_question": "Which visual arts have the character Applejack and Pumpkin Cake?", "s_expression_fn": "(AND (JOIN characters Applejack) (JOIN instance_of visual_arts) (JOIN characters Pumpkin_Cake))", "predicted_s_expression_fn": "(AND (JOIN (R character) (VALUES Applejack Pumpkin_Cake) (JOIN instance_of visual_arts))", "predicted_s_expression": "", "sparql_attempt_count": 2, "actions": ""}, {"turnID": "868.186.6", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Single_Relation", "question": "Which fictional humanoids are featured in Pirates of the Caribbean or DC Universe ? [CTX]", "answer": "Some of them are Andrea Beaumont, Will Turner, Hawkman, Oliver Queen, Kid Devil, Mary Marvel, Green Arrow, Hector Barbossa, Red Star, Tia Dalma", "s_expression": "(OR (AND (JOIN P1080 Q384426) (JOIN P31 Q6619679)) (AND (JOIN P1080 Q1152150) (JOIN P31 Q6619679)))", "s_expression_cores": ["(AND (JOIN P1080 Q384426) (JOIN P31 Q6619679))", "(AND (JOIN P1080 Q1152150) (JOIN P31 Q6619679))"], "sparql_delex": "SELECT ?x WHERE { { ?x wdt:P1080 wd:Q384426 . ?x wdt:P31 wd:Q6619679 .  } UNION { ?x wdt:P1080 wd:Q1152150 . ?x wdt:P31 wd:Q6619679 .  } }", "results": ["Q2556873", "Q2601118", "Q1528452", "Q2708077", "Q593185", "Q611993", "Q194705", "Q2941571", "Q2005691", "Q2466726", "Q2258938", "Q427647", "Q751117", "Q1785114", "Q2576706", "Q3610656", "Q9291762", "Q660051", "Q860922", "Q3316564", "Q1778905", "Q735712", "Q3108824", "Q601747", "Q2519257", "Q3547709", "Q2721145", "Q1513887", "Q2656267", "Q1427625", "Q12963444", "Q2278783", "Q840202", "Q3288683", "Q158952", "Q671915", "Q2732063", "Q2500238", "Q612720", "Q25439486", "Q726851", "Q3331983", "Q1130271", "Q1623044", "Q4851780", "Q2210354", "Q116113", "Q3549786", "Q25446598", "Q7811674", "Q2346769", "Q2718240", "Q3216027", "Q2422510", "Q2019744", "Q2663841", "Q3312273", "Q1660452", "Q588838", "Q1120560", "Q6404474", "Q3859326", "Q545367", "Q202857", "Q2359610", "Q1623086", "Q867810", "Q2469992", "Q1317406", "Q2168676", "Q10361296", "Q520158", "Q3697338", "Q2429447", "Q944728", "Q2419213", "Q4759961", "Q2345627", "Q523519", "Q5298637", "Q1074019", "Q7421051", "Q10797402", "Q3898184", "Q1997176", "Q1784409", "Q6968464", "Q1258649", "Q1764242", "Q2345229"], "coreference_resolved_question": "Which fictional humanoids are featured in Pirates of the Caribbean or DC Universe?", "s_expression_fn": "(OR (AND (JOIN from_narrative_universe Pirates_of_the_Caribbean) (JOIN instance_of fictional_humanoid)) (AND (JOIN from_narrative_universe DC_Universe) (JOIN instance_of fictional_humanoid)))", "predicted_s_expression_fn": "(AND (JOIN (R appears_in) (OR Pirates_of_the_Caribbean DC_Universe)) (JOIN instance_of fictional_humanoid))", "predicted_s_expression": "", "sparql_attempt_count": 2, "actions": ""}, {"turnID": "868.171.4", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Multiple_Relation", "question": "Which administrative territories did K\u014dichi Shiozawa die or are contained in Sebi\u0219 District ? [CTX]", "answer": "Some of them are Zimbru, Hon\u021bi\u0219or, Susani, Joia Mare, Tokyo, R\u0103de\u0219ti, R\u0103nu\u0219a, Bon\u021be\u0219ti, Cociuba, Slatina de Cri\u0219", "s_expression": "(OR (AND (JOIN (R P20) Q6455139) (JOIN P31 Q56061)) (AND (JOIN (R P1383) Q18818815) (JOIN P31 Q56061)))", "s_expression_cores": ["(AND (JOIN (R P20) Q6455139) (JOIN P31 Q56061))", "(AND (JOIN (R P1383) Q18818815) (JOIN P31 Q56061))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q6455139 wdt:P20 ?x . ?x wdt:P31 wd:Q56061 .  } UNION { wd:Q18818815 wdt:P1383 ?x . ?x wdt:P31 wd:Q56061 .  } }", "results": ["Q666867", "Q755680", "Q587970", "Q753216", "Q18818912", "Q755787", "Q268908", "Q820716", "Q727663", "Q751288", "Q1031440", "Q18818894", "Q755943", "Q1067664", "Q304979", "Q630795", "Q987047", "Q820637", "Q820759", "Q755586", "Q820694", "Q426789", "Q752056", "Q673034", "Q755797", "Q4799101", "Q755793", "Q281049", "Q820757", "Q665620", "Q912739", "Q1069480", "Q755652", "Q509603", "Q820646", "Q852398", "Q755808", "Q1092956", "Q755671", "Q583710", "Q755817", "Q281534", "Q1490", "Q1028874", "Q755819"], "coreference_resolved_question": "Which administrative territories did K\u014dichi Shiozawa die or are contained in Sebi\u0219 District?", "s_expression_fn": "(OR (AND (JOIN (R place_of_death) K\u014dichi_Shiozawa) (JOIN instance_of administrative_territorial_entity)) (AND (JOIN (R contains_settlement) Sebi\u0219_District) (JOIN instance_of administrative_territorial_entity)))", "predicted_s_expression_fn": "(DISTINCT (OR (AND (JOIN (R place_of_death) K\u014dichi_Shiozawa) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (AND (JOIN (R contained_by) Sebi\u0219_District) (JOIN instance_of designation_for_an_administrative_territorial_entity))))", "predicted_s_expression": "", "sparql_attempt_count": 1, "actions": ""}, {"turnID": "868.178.4", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Single_Relation|Incomplete", "question": "Which nucleic acid sequence encodes acylglycerol lipase YKL094W ? [SEP] acylglycerol lipase YKL094W [SEP] Which nucleic acid sequence encodes that nutrient ? [SEP] acylglycerol lipase YKL094W [SEP] Does that nucleic acid sequence encode acylglycerol lipase YKL094W ? [SEP] YES [SEP] Which infraspecific name is that nucleic acid sequence found in ? [SEP] Saccharomyces cerevisiae S288c [SEP] Or glycerol-3-phosphate acyltransferase    NRG857_20195? [CTX]", "answer": "Saccharomyces cerevisiae S288c, Escherichia coli O83:H1 str. NRG 857C", "s_expression": "(OR (AND (JOIN (R P703) Q27542638) (JOIN P31 Q631147)) (AND (JOIN (R P703) Q23101475) (JOIN P31 Q631147)))", "s_expression_cores": ["(AND (JOIN (R P703) Q27542638) (JOIN P31 Q631147))", "(AND (JOIN (R P703) Q23101475) (JOIN P31 Q631147))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q27542638 wdt:P703 ?x . ?x wdt:P31 wd:Q631147 .  } UNION { wd:Q23101475 wdt:P703 ?x . ?x wdt:P31 wd:Q631147 .  } }", "results": ["Q27510868", "Q21102934"], "coreference_resolved_question": "Which infraspecific name is NRG857_20195 found in?", "s_expression_fn": "(OR (AND (JOIN (R found_in_taxon) acylglycerol_lipase_YKL094W) (JOIN instance_of infraspecific_name)) (AND (JOIN (R found_in_taxon) glycerol-3-phosphate_acyltransferase____NRG857_20195) (JOIN instance_of infraspecific_name)))", "predicted_s_expression_fn": "(OR (JOIN (R infraspecific_name) acylglycerol_lipase_YKL094W) (JOIN (R infraspecific_name) glycerol-3-phosphate_acyltransferase____NRG857_20195))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "868.178.5", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Single_Relation", "question": "Which nutrients are encoded by acylglycerol lipase YKL094W or ATPase    KPHS_36290 ? [CTX]", "answer": "ATPase    KPHS_36290, acylglycerol lipase YKL094W", "s_expression": "(OR (AND (JOIN (R P688) Q27542638) (JOIN P31 Q181394)) (AND (JOIN (R P688) Q23135585) (JOIN P31 Q181394)))", "s_expression_cores": ["(AND (JOIN (R P688) Q27542638) (JOIN P31 Q181394))", "(AND (JOIN (R P688) Q23135585) (JOIN P31 Q181394))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q27542638 wdt:P688 ?x . ?x wdt:P31 wd:Q181394 .  } UNION { wd:Q23135585 wdt:P688 ?x . ?x wdt:P31 wd:Q181394 .  } }", "results": ["Q24272924", "Q27549732"], "coreference_resolved_question": "Which nutrients are encoded by acylglycerol lipase YKL094W or ATPase KPHS_36290?", "s_expression_fn": "(OR (AND (JOIN (R encodes) acylglycerol_lipase_YKL094W) (JOIN instance_of nutrient)) (AND (JOIN (R encodes) ATPase____KPHS_36290) (JOIN instance_of nutrient)))", "predicted_s_expression_fn": "(OR (AND (JOIN encoded_by acylglycerol_lipase_YKL094W) (JOIN instance_of nutrient) (AND (JOIN encoded_by ATPase____KPHS_36290) (JOIN instance_of nutrient)))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "868.78.5", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Single_Relation", "question": "Which administrative territories are the countries of citizenship of James Zehner or Zhong Biao ? [CTX]", "answer": "People's Republic of China, United States of America", "s_expression": "(OR (AND (JOIN (R P27) Q6145991) (JOIN P31 Q15617994)) (AND (JOIN (R P27) Q3575425) (JOIN P31 Q15617994)))", "s_expression_cores": ["(AND (JOIN (R P27) Q6145991) (JOIN P31 Q15617994))", "(AND (JOIN (R P27) Q3575425) (JOIN P31 Q15617994))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q6145991 wdt:P27 ?x . ?x wdt:P31 wd:Q15617994 .  } UNION { wd:Q3575425 wdt:P27 ?x . ?x wdt:P31 wd:Q15617994 .  } }", "results": ["Q148", "Q30"], "coreference_resolved_question": "Which administrative territories are the countries of citizenship of James Zehner or Zhong Biao?", "s_expression_fn": "(OR (AND (JOIN (R country_of_citizenship) James_Zehner) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (AND (JOIN (R country_of_citizenship) Zhong_Biao) (JOIN instance_of designation_for_an_administrative_territorial_entity)))", "predicted_s_expression_fn": "(DISTINCT (AND (JOIN (R country_of_citizenship) (VALUES James_Zehner Zhong_Biao)) (JOIN instance_of designation_for_an_administrative_territorial_entity)))", "predicted_s_expression": "(DISTINCT (AND (JOIN (R P27) (VALUES Q6145991 Q3575425)) (JOIN P31 Q15617994)))", "sparql_attempt_count": 2, "actions": "SELECT DISTINCT ?x WHERE { VALUES ?x0 { wd:Q6145991 wd:Q3575425 } . ?x0 wdt:P27 ?x . ?x wdt:P31 wd:Q15617994 . }"}, {"turnID": "868.78.9", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Multiple_Relation", "question": "Which people were the writers of Five Past Midnight in Bhopal or were casted in City by the Sea ? [CTX]", "answer": "Some of them are Frances McDormand, George Dzundza, Eliza Dushku, Dominique Lapierre, Patti LuPone, Robert De Niro, Anson Mount, James Franco, Leo Burmester, John Doman", "s_expression": "(OR (AND (JOIN (R P50) Q5456053) (JOIN P31 Q502895)) (AND (JOIN (R P161) Q785434) (JOIN P31 Q502895)))", "s_expression_cores": ["(AND (JOIN (R P50) Q5456053) (JOIN P31 Q502895))", "(AND (JOIN (R P161) Q785434) (JOIN P31 Q502895))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q5456053 wdt:P50 ?x . ?x wdt:P31 wd:Q502895 .  } UNION { wd:Q785434 wdt:P161 ?x . ?x wdt:P31 wd:Q502895 .  } }", "results": ["Q984443", "Q3644512", "Q164624", "Q1238249", "Q350255", "Q210200", "Q204299", "Q374586", "Q36949", "Q306403", "Q570006", "Q541821", "Q270324", "Q2697231"], "coreference_resolved_question": "Which people were the writers of Five Past Midnight in Bhopal or were casted in City by the Sea?", "s_expression_fn": "(OR (AND (JOIN (R author) Five_Past_Midnight_in_Bhopal) (JOIN instance_of common_name)) (AND (JOIN (R cast_member) City_by_the_Sea) (JOIN instance_of common_name)))", "predicted_s_expression_fn": "(DISTINCT (OR (AND (JOIN (R author) Five_Past_Midnight_in_Bhopal) (JOIN instance_of common_name)) (AND (JOIN (R cast_member) City_by_the_Sea) (JOIN instance_of common_name))))", "predicted_s_expression": "", "sparql_attempt_count": 1, "actions": ""}, {"turnID": "868.86.3", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Single_Relation|Incomplete", "question": "Which sex does Honorio Maura Gamazo have ? [SEP] male [SEP] Or Nicolae Filipescu? [CTX]", "answer": "male", "s_expression": "(OR (AND (JOIN (R P21) Q2885307) (JOIN P31 Q290)) (AND (JOIN (R P21) Q5471132) (JOIN P31 Q290)))", "s_expression_cores": ["(AND (JOIN (R P21) Q2885307) (JOIN P31 Q290))", "(AND (JOIN (R P21) Q5471132) (JOIN P31 Q290))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q2885307 wdt:P21 ?x . ?x wdt:P31 wd:Q290 .  } UNION { wd:Q5471132 wdt:P21 ?x . ?x wdt:P31 wd:Q290 .  } }", "results": ["Q6581097"], "coreference_resolved_question": "Which sex does Nicolae Filipescu have?", "s_expression_fn": "(OR (AND (JOIN (R sex_or_gender) Honorio_Maura_Gamazo) (JOIN instance_of sex)) (AND (JOIN (R sex_or_gender) Nicolae_Filipescu) (JOIN instance_of sex)))", "predicted_s_expression_fn": "(AND (JOIN (R sex_or_gender) Honorio_Maura_Gamazo) (JOIN (R sex_or_gender) Nicolae_Filipescu))", "predicted_s_expression": "(AND (JOIN (R P21) Q2885307) (JOIN (R P21) Q5471132))", "sparql_attempt_count": 1, "actions": "SELECT ?x WHERE { wd:Q2885307 wdt:P21 ?x . wd:Q5471132 wdt:P21 ?x . }"}, {"turnID": "868.2.3", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Multiple_Relation", "question": "Which administrative territories are the native countriesof Jakob Danger or are Valea Motrului present in ? [CTX]", "answer": "Romania, United States of America", "s_expression": "(OR (AND (JOIN (R P27) Q21621117) (JOIN P31 Q15617994)) (AND (JOIN (R P17) Q12087537) (JOIN P31 Q15617994)))", "s_expression_cores": ["(AND (JOIN (R P27) Q21621117) (JOIN P31 Q15617994))", "(AND (JOIN (R P17) Q12087537) (JOIN P31 Q15617994))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q21621117 wdt:P27 ?x . ?x wdt:P31 wd:Q15617994 .  } UNION { wd:Q12087537 wdt:P17 ?x . ?x wdt:P31 wd:Q15617994 .  } }", "results": ["Q218", "Q30"], "coreference_resolved_question": "Which administrative territories are the native countries of Jakob Danger or are Valea Motrului present in?", "s_expression_fn": "(OR (AND (JOIN (R country_of_citizenship) Jakob_Danger) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (AND (JOIN (R country) Valea_Motrului) (JOIN instance_of designation_for_an_administrative_territorial_entity)))", "predicted_s_expression_fn": "(DISTINCT (OR (AND (JOIN (R country_of_citizenship) Jakob_Danger) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (AND (JOIN (R country) Valea_Motrului) (JOIN instance_of designation_for_an_administrative_territorial_entity))))", "predicted_s_expression": "", "sparql_attempt_count": 1, "actions": ""}, {"turnID": "868.2.6", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Multiple_Relation", "question": "Which administrative territories do Georges Vilain XIIII belong to or have a shared border with Siror ? [CTX]", "answer": "Belgium, Imer, Predazzo, Canal San Bovo, Canale d'Agordo", "s_expression": "(OR (AND (JOIN (R P27) Q2121225) (JOIN P31 Q15617994)) (AND (JOIN (R P47) Q305537) (JOIN P31 Q15617994)))", "s_expression_cores": ["(AND (JOIN (R P27) Q2121225) (JOIN P31 Q15617994))", "(AND (JOIN (R P47) Q305537) (JOIN P31 Q15617994))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q2121225 wdt:P27 ?x . ?x wdt:P31 wd:Q15617994 .  } UNION { wd:Q305537 wdt:P47 ?x . ?x wdt:P31 wd:Q15617994 .  } }", "results": ["Q31", "Q290510", "Q300010", "Q257947", "Q40219"], "coreference_resolved_question": "Which administrative territories do Georges Vilain XIIII belong to or have a shared border with Siror?", "s_expression_fn": "(OR (AND (JOIN (R country_of_citizenship) Georges_Vilain_XIIII) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (AND (JOIN (R shares_border_with) Siror) (JOIN instance_of designation_for_an_administrative_territorial_entity)))", "predicted_s_expression_fn": "(DISTINCT (OR (AND (JOIN (R country_of_citizenship) Georges_Vilain_XIIII) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (AND (JOIN shares_border_with Siror) (JOIN instance_of designation_for_an_administrative_territorial_entity)))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "868.85.3", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Single_Relation", "question": "Which administrative territories are Studio City or Krzy\u017cowice, Brzeg County present in ? [CTX]", "answer": "United States of America, Poland", "s_expression": "(OR (AND (JOIN (R P17) Q3143067) (JOIN P31 Q15617994)) (AND (JOIN (R P17) Q6440400) (JOIN P31 Q15617994)))", "s_expression_cores": ["(AND (JOIN (R P17) Q3143067) (JOIN P31 Q15617994))", "(AND (JOIN (R P17) Q6440400) (JOIN P31 Q15617994))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q3143067 wdt:P17 ?x . ?x wdt:P31 wd:Q15617994 .  } UNION { wd:Q6440400 wdt:P17 ?x . ?x wdt:P31 wd:Q15617994 .  } }", "results": ["Q30", "Q36"], "coreference_resolved_question": "Which administrative territories are Studio City or Krzy\u017cowice, Brzeg County present in?", "s_expression_fn": "(OR (AND (JOIN (R country) Studio_City) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (AND (JOIN (R country) Krzy\u017cowice,_Brzeg_County) (JOIN instance_of designation_for_an_administrative_territorial_entity)))", "predicted_s_expression_fn": "(DISTINCT (AND (JOIN (R country) (VALUES Studio_City Krzy\u017cowice,_Brzeg_County)) (JOIN instance_of designation_for_an_administrative_territorial_entity)))", "predicted_s_expression": "(DISTINCT (AND (JOIN (R P17) (VALUES Q3143067 Q6440400)) (JOIN P31 Q15617994)))", "sparql_attempt_count": 2, "actions": "SELECT DISTINCT ?x WHERE { VALUES ?x0 { wd:Q3143067 wd:Q6440400 } . ?x0 wdt:P17 ?x . ?x wdt:P31 wd:Q15617994 . }"}, {"turnID": "868.57.4", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Single_Relation", "question": "Which administrative territories are Heimer Virkkunen or Sara Valen\u010di\u010d an inhabitant of ? [CTX]", "answer": "Finland, Slovenia", "s_expression": "(OR (AND (JOIN (R P27) Q11861943) (JOIN P31 Q15617994)) (AND (JOIN (R P27) Q3473290) (JOIN P31 Q15617994)))", "s_expression_cores": ["(AND (JOIN (R P27) Q11861943) (JOIN P31 Q15617994))", "(AND (JOIN (R P27) Q3473290) (JOIN P31 Q15617994))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q11861943 wdt:P27 ?x . ?x wdt:P31 wd:Q15617994 .  } UNION { wd:Q3473290 wdt:P27 ?x . ?x wdt:P31 wd:Q15617994 .  } }", "results": ["Q33", "Q215"], "coreference_resolved_question": "Which administrative territories are Heimer Virkkunen or Sara Valen\u010di\u010d an inhabitant of?", "s_expression_fn": "(OR (AND (JOIN (R country_of_citizenship) Heimer_Virkkunen) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (AND (JOIN (R country_of_citizenship) Sara_Valen\u010di\u010d) (JOIN instance_of designation_for_an_administrative_territorial_entity)))", "predicted_s_expression_fn": "(DISTINCT (AND (JOIN (R country_of_citizenship) (VALUES Heimer_Virkkunen Sara_Valen\u010di\u010d)) (JOIN instance_of designation_for_an_administrative_territorial_entity))", "predicted_s_expression": "", "sparql_attempt_count": 2, "actions": ""}, {"turnID": "868.159.6", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Single_Relation", "question": "Which administrative territories were Christina Schellenberg or Asle Gronna born ? [CTX]", "answer": "Elkader, Nuremberg", "s_expression": "(OR (AND (JOIN (R P19) Q18180975) (JOIN P31 Q56061)) (AND (JOIN (R P19) Q732712) (JOIN P31 Q56061)))", "s_expression_cores": ["(AND (JOIN (R P19) Q18180975) (JOIN P31 Q56061))", "(AND (JOIN (R P19) Q732712) (JOIN P31 Q56061))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q18180975 wdt:P19 ?x . ?x wdt:P31 wd:Q56061 .  } UNION { wd:Q732712 wdt:P19 ?x . ?x wdt:P31 wd:Q56061 .  } }", "results": ["Q932507", "Q2090"], "coreference_resolved_question": "Which administrative territories were Christina Schellenberg or Asle Gronna born in?", "s_expression_fn": "(OR (AND (JOIN (R place_of_birth) Christina_Schellenberg) (JOIN instance_of administrative_territorial_entity)) (AND (JOIN (R place_of_birth) Asle_Gronna) (JOIN instance_of administrative_territorial_entity)))", "predicted_s_expression_fn": "(DISTINCT (AND (JOIN (R place_of_birth) (VALUES Christina_Schellenberg Asle_Gronna)) (JOIN instance_of designation_for_an_administrative_territorial_entity)))", "predicted_s_expression": "(DISTINCT (AND (JOIN (R P19) (VALUES Q18180975 Q732712)) (JOIN P31 Q56061)))", "sparql_attempt_count": 2, "actions": "SELECT DISTINCT ?x WHERE { VALUES ?x0 { wd:Q18180975 wd:Q732712 } . ?x0 wdt:P19 ?x . ?x wdt:P31 wd:Q56061 . }"}, {"turnID": "868.172.7", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Multiple_Relation", "question": "Which administrative territories are Wurlitzer electric piano present in or are the native countriesof Rudolf Medek ? [CTX]", "answer": "Czech Republic, United States of America", "s_expression": "(OR (AND (JOIN (R P17) Q1759986) (JOIN P31 Q15617994)) (AND (JOIN (R P27) Q159952) (JOIN P31 Q15617994)))", "s_expression_cores": ["(AND (JOIN (R P17) Q1759986) (JOIN P31 Q15617994))", "(AND (JOIN (R P27) Q159952) (JOIN P31 Q15617994))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q1759986 wdt:P17 ?x . ?x wdt:P31 wd:Q15617994 .  } UNION { wd:Q159952 wdt:P27 ?x . ?x wdt:P31 wd:Q15617994 .  } }", "results": ["Q213", "Q30"], "coreference_resolved_question": "Which administrative territories are Wurlitzer electric piano present in or are the native countries of Rudolf Medek?", "s_expression_fn": "(OR (AND (JOIN (R country) Wurlitzer_electric_piano) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (AND (JOIN (R country_of_citizenship) Rudolf_Medek) (JOIN instance_of designation_for_an_administrative_territorial_entity)))", "predicted_s_expression_fn": "(DISTINCT (OR (AND (JOIN (R country) Wurlitzer_electric_piano) (AND (JOIN (R country_of_citizenship) Rudolf_Medek)))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "868.96.9", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Multiple_Relation", "question": "Which administrative territories do Florida Panthers belong to or share border with La Valle Agordina ? [CTX]", "answer": "Forno di Zoldo, Longarone, United States of America, Rivamonte Agordino, Agordo, Sedico", "s_expression": "(OR (AND (JOIN (R P17) Q204623) (JOIN P31 Q15617994)) (AND (JOIN (R P47) Q40211) (JOIN P31 Q15617994)))", "s_expression_cores": ["(AND (JOIN (R P17) Q204623) (JOIN P31 Q15617994))", "(AND (JOIN (R P47) Q40211) (JOIN P31 Q15617994))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q204623 wdt:P17 ?x . ?x wdt:P31 wd:Q15617994 .  } UNION { wd:Q40211 wdt:P47 ?x . ?x wdt:P31 wd:Q15617994 .  } }", "results": ["Q40471", "Q40161", "Q30", "Q39876", "Q39899", "Q40316"], "coreference_resolved_question": "Which administrative territories do Florida Panthers belong to or share border with La Valle Agordina?", "s_expression_fn": "(OR (AND (JOIN (R country) Florida_Panthers) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (AND (JOIN (R shares_border_with) La_Valle_Agordina) (JOIN instance_of designation_for_an_administrative_territorial_entity)))", "predicted_s_expression_fn": "(OR (AND (JOIN (R country) Florida_Panthers) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (AND (JOIN shares_border_with La_Valle_Agordina) (JOIN instance_of designation_for_an_administrative_territorial_entity)))", "predicted_s_expression": "", "sparql_attempt_count": 1, "actions": ""}, {"turnID": "868.93.7", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Multiple_Relation", "question": "Which works of art do Bent Mejding star in and are United States of America a country of origin of ? [CTX]", "answer": "Reptilicus", "s_expression": "(AND (JOIN P161 Q2347440) (JOIN P31 Q838948) (JOIN P495 Q30))", "s_expression_cores": ["(AND (JOIN P161 Q2347440) (JOIN P31 Q838948) (JOIN P495 Q30))"], "sparql_delex": "SELECT ?x WHERE { ?x wdt:P161 wd:Q2347440 . ?x wdt:P31 wd:Q838948 .  ?x wdt:P495 wd:Q30 .  }", "results": ["Q3078014"], "coreference_resolved_question": "Which works of art do Bent Mejding star in and are United States of America a country of origin of?", "s_expression_fn": "(AND (JOIN cast_member Bent_Mejding) (JOIN instance_of work_of_art) (JOIN country_of_origin United_States_of_America))", "predicted_s_expression_fn": "(AND (JOIN (R cast_member) Bent_Mejding) (JOIN (R country_of_origin) United_States_of_America) (JOIN instance_of work_of_art))", "predicted_s_expression": "(AND (JOIN P161 Q2347440) (JOIN P495 Q30) (JOIN P31 Q838948))", "sparql_attempt_count": 5, "actions": "SELECT ?x WHERE { ?x wdt:P161 wd:Q2347440 . ?x wdt:P495 wd:Q30 . ?x wdt:P31 wd:Q838948 . }"}, {"turnID": "868.94.6", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Multiple_Relation", "question": "Which fictional humanoids are featured in Pirates of the Caribbean or are from the works of Shortland Street ? [CTX]", "answer": "Some of them are Gabrielle Jacobs, Leanne Miller, Moira Crombie, Hector Barbossa, Nick Harrison, Kieran Mitchell, Jonathon McKenna, TK Samuels, Guy Warner, Weatherby Swann", "s_expression": "(OR (AND (JOIN P1080 Q384426) (JOIN P31 Q6619679)) (AND (JOIN P1441 Q494202) (JOIN P31 Q6619679)))", "s_expression_cores": ["(AND (JOIN P1080 Q384426) (JOIN P31 Q6619679))", "(AND (JOIN P1441 Q494202) (JOIN P31 Q6619679))"], "sparql_delex": "SELECT ?x WHERE { { ?x wdt:P1080 wd:Q384426 . ?x wdt:P31 wd:Q6619679 .  } UNION { ?x wdt:P1441 wd:Q494202 . ?x wdt:P31 wd:Q6619679 .  } }", "results": ["Q7613381", "Q1623086", "Q5944464", "Q5516078", "Q4768486", "Q4883349", "Q5181546", "Q5622661", "Q6179301", "Q17052562", "Q6868792", "Q5296360", "Q601747", "Q4679229", "Q7106039", "Q1764242", "Q5605555", "Q7027264", "Q5041048", "Q5444189", "Q7186969", "Q7821354", "Q5893192", "Q671915", "Q17053993", "Q6405426", "Q7982626", "Q2278783", "Q2732063", "Q840202", "Q16852122", "Q6540436", "Q6701931", "Q5364800", "Q4974433", "Q5934938", "Q6274968", "Q593185", "Q6735214", "Q7932652", "Q7407086", "Q7690798", "Q7292820", "Q4960158", "Q3288683", "Q4726053", "Q6555797", "Q6146897", "Q7817012", "Q7563037", "Q6210423", "Q6304361", "Q2576706", "Q1623044", "Q6160962", "Q6416171", "Q8063725", "Q6318109", "Q7626897", "Q6214407", "Q7430487", "Q7422709", "Q7975422", "Q6318361", "Q7801243", "Q6894704", "Q17061922", "Q7670567", "Q202857", "Q5108420", "Q6166512", "Q6832734", "Q6766144", "Q5225420", "Q5290662", "Q8062464", "Q7680506", "Q5044996", "Q7359870", "Q5254401", "Q5235883", "Q4978425", "Q7279329", "Q1317406"], "coreference_resolved_question": "Which fictional humanoids are featured in Pirates of the Caribbean or are from the works of Shortland Street?", "s_expression_fn": "(OR (AND (JOIN from_narrative_universe Pirates_of_the_Caribbean) (JOIN instance_of fictional_humanoid)) (AND (JOIN present_in_work Shortland_Street) (JOIN instance_of fictional_humanoid)))", "predicted_s_expression_fn": "(OR (AND (JOIN (R appears_in) Pirates_of_the_Caribbean) (JOIN (R appears_in) Shortland_Street) (JOIN instance_of fictional_humanoid))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "868.22.4", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Multiple_Relation", "question": "Which people work for Il Gazzettino and have writer as his/her means of employment ? [CTX]", "answer": "Silvio Branzi", "s_expression": "(AND (JOIN P108 Q902507) (JOIN P31 Q502895) (JOIN P106 Q36180))", "s_expression_cores": ["(AND (JOIN P108 Q902507) (JOIN P31 Q502895) (JOIN P106 Q36180))"], "sparql_delex": "SELECT ?x WHERE { ?x wdt:P108 wd:Q902507 . ?x wdt:P31 wd:Q502895 .  ?x wdt:P106 wd:Q36180 .  }", "results": ["Q18155961"], "coreference_resolved_question": "Which people work for Il Gazzettino and have writer as his/her means of employment?", "s_expression_fn": "(AND (JOIN employer Il_Gazzettino) (JOIN instance_of common_name) (JOIN occupation writer))", "predicted_s_expression_fn": "(AND (JOIN employer Il_Gazzettino) (JOIN instance_of common_name) (JOIN means_of_employment writer))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "868.184.5", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Multiple_Relation", "question": "Which people took part in UEFA Euro 2004 and have the gender as male ? [CTX]", "answer": "Some of them are Rui Costa, Sebastian Kehl, Pierre van Hooijdonk, Zdravko Lazarov, Juanito, Vyacheslav Malafeev, Sol Campbell, Anders Svensson, Aleksandrs Ko\u013cinko, Sven-G\u00f6ran Eriksson", "s_expression": "(AND (JOIN P1344 Q102920) (JOIN P31 Q502895) (JOIN P21 Q6581097))", "s_expression_cores": ["(AND (JOIN P1344 Q102920) (JOIN P31 Q502895) (JOIN P21 Q6581097))"], "sparql_delex": "SELECT ?x WHERE { ?x wdt:P1344 wd:Q102920 . ?x wdt:P31 wd:Q502895 .  ?x wdt:P21 wd:Q6581097 .  }", "results": ["Q152458", "Q131261", "Q170235", "Q463079", "Q974522", "Q41533", "Q62403", "Q1190731", "Q1934", "Q214117", "Q207949", "Q224033", "Q2263432", "Q374838", "Q561553", "Q540737", "Q315791", "Q318281", "Q526682", "Q113245", "Q49821", "Q80471", "Q109417", "Q342572", "Q159050", "Q352183", "Q525400", "Q362181", "Q503189", "Q349848", "Q2707629", "Q1389978", "Q342680", "Q232789", "Q313468", "Q2626803", "Q20110", "Q706050", "Q190608", "Q299717", "Q893814", "Q426905", "Q2081532", "Q45626", "Q484968", "Q1269497", "Q675344", "Q219657", "Q2423196", "Q210944", "Q29339", "Q311983", "Q310103", "Q116980", "Q217038", "Q296219", "Q462908", "Q43682", "Q2634525", "Q670561", "Q342103", "Q149933", "Q355820", "Q1937", "Q718765", "Q188918", "Q11948", "Q11949", "Q152968", "Q11584", "Q275691", "Q214734", "Q362955", "Q310803", "Q220521", "Q173360", "Q314759", "Q314756", "Q610550", "Q122350", "Q185081", "Q549848", "Q133556", "Q61219", "Q152340", "Q346694", "Q295506", "Q483137", "Q205773", "Q167962", "Q459830", "Q2448932", "Q311342", "Q221129", "Q180581", "Q34658", "Q315324", "Q313207", "Q102027", "Q294565", "Q42731", "Q2527026", "Q193024", "Q313208", "Q471641", "Q459625", "Q294204", "Q218369", "Q299435", "Q167241", "Q520202", "Q299536", "Q159803", "Q498468", "Q465975", "Q188983", "Q276284", "Q180993", "Q482955", "Q983891", "Q496071", "Q298484", "Q141354", "Q10598", "Q519280", "Q57217", "Q312940", "Q314494", "Q216917", "Q536160", "Q710788", "Q44464", "Q249209", "Q46347", "Q437545", "Q2548154", "Q17158", "Q573090", "Q211124", "Q211120", "Q442255", "Q294749", "Q570811", "Q296457", "Q296452", "Q282463", "Q57142", "Q624", "Q2453863", "Q269404", "Q526233", "Q44073", "Q63676", "Q2304882", "Q207401", "Q699412", "Q172211", "Q312176", "Q342214", "Q218063", "Q552732", "Q313722", "Q366531", "Q476621", "Q155903", "Q163974", "Q218165", "Q311372", "Q372351", "Q2425454", "Q294881", "Q1589484", "Q183967", "Q200868", "Q276544", "Q484909", "Q44420", "Q191139", "Q242193", "Q11958", "Q312659", "Q1244590", "Q68060", "Q313610", "Q635027", "Q207665", "Q357205", "Q316895", "Q2312981", "Q150484", "Q311089", "Q313438", "Q371599", "Q311087", "Q1354216", "Q379013", "Q206247", "Q122346", "Q314724", "Q577111", "Q203657", "Q152725", "Q504087", "Q389113", "Q184946", "Q185115", "Q57114", "Q204141", "Q266613", "Q1365559", "Q2716273", "Q184362", "Q160890", "Q186415", "Q537452", "Q271615", "Q299238", "Q352297", "Q295027", "Q314873", "Q372568", "Q314879", "Q189716", "Q44298", "Q27649", "Q313719", "Q221142", "Q294852", "Q356378", "Q2566681", "Q227892", "Q316026", "Q192491", "Q697271", "Q443937", "Q206677", "Q1365604", "Q203665", "Q356399", "Q302393", "Q191162", "Q299488", "Q153003", "Q315459", "Q532988", "Q375295", "Q955237", "Q313364", "Q518211", "Q125438", "Q2425562", "Q83456", "Q134976", "Q46896", "Q296467", "Q503051", "Q310354", "Q184269", "Q342904", "Q38317", "Q128829", "Q2426336", "Q163437", "Q549559", "Q490729", "Q723237", "Q193717", "Q43926", "Q188696", "Q270359", "Q482602", "Q234532", "Q465253", "Q313148", "Q348857", "Q311938", "Q45901", "Q971605", "Q313137", "Q672448", "Q736032", "Q943616", "Q189686", "Q309826", "Q168287", "Q311095", "Q1192739", "Q45613", "Q124086", "Q208104", "Q503154", "Q392591", "Q347603", "Q166263", "Q317293", "Q2286919", "Q191634", "Q10560", "Q107076", "Q466316", "Q270311", "Q311324", "Q1932838", "Q168997", "Q912982", "Q454257", "Q180326", "Q29162", "Q154305", "Q299383", "Q203002", "Q193568", "Q193625", "Q314865", "Q2735228", "Q43913", "Q179334", "Q201866", "Q214124", "Q700558", "Q1764977", "Q171295", "Q313178", "Q113156", "Q45567", "Q311968", "Q312920", "Q296188", "Q700551", "Q296180", "Q177343", "Q2735130", "Q518115", "Q1530922", "Q492484", "Q216282", "Q11571", "Q219248", "Q11576", "Q318226", "Q271882", "Q188793", "Q960589", "Q453130", "Q182907", "Q295315", "Q659634", "Q447494", "Q10520", "Q13488", "Q464927", "Q136940", "Q503164", "Q721546", "Q1835", "Q115843", "Q724528", "Q910192", "Q180283", "Q44513", "Q310737", "Q313913", "Q296975", "Q448906", "Q483145", "Q356426", "Q1709014", "Q17500", "Q468876", "Q206780", "Q449715", "Q299455", "Q2469197", "Q819582", "Q155884", "Q184614", "Q221138", "Q438403", "Q213616", "Q315336", "Q312516", "Q217760", "Q215824", "Q946457", "Q206644"], "coreference_resolved_question": "Which people took part in UEFA Euro 2004 and have the gender as male?", "s_expression_fn": "(AND (JOIN participant_in UEFA_Euro_2004) (JOIN instance_of common_name) (JOIN sex_or_gender male))", "predicted_s_expression_fn": "(AND (JOIN participant_of UEFA_Euro_2004) (JOIN sex_or_gender male) (JOIN instance_of common_name))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "868.184.8", "question_type": "Logical Reasoning (All)", "description": "Logical|Difference|Single_Relation", "question": "Which European Championships did Anders Svensson but not J\u00fcrgen S\u00e4umel participate in ? [CTX]", "answer": "UEFA Euro 2004, UEFA Euro 2012", "s_expression": "(DIFF (AND (JOIN (R P1344) Q296219) (JOIN P31 Q1375427)) (JOIN (R P1344) Q471791))", "s_expression_cores": ["(AND (JOIN (R P1344) Q296219) (JOIN P31 Q1375427))", "(JOIN (R P1344) Q471791)"], "sparql_delex": "SELECT ?x WHERE { wd:Q296219 wdt:P1344 ?x . ?x wdt:P31 wd:Q1375427 .  FILTER NOT EXISTS { wd:Q471791 wdt:P1344 ?x .  } }", "results": ["Q102920", "Q22669"], "coreference_resolved_question": "Which European Championships did Anders Svensson but not J\u00fcrgen S\u00e4umel participate in?", "s_expression_fn": "(DIFF (AND (JOIN (R participant_in) Anders_Svensson) (JOIN instance_of European_Championship)) (JOIN (R participant_in) J\u00fcrgen_S\u00e4umel))", "predicted_s_expression_fn": "(DIFF (AND (JOIN participant Anders_Svensson) (JOIN instance_of European_Championships)) (AND (JOIN participant J\u00fcrgen_S\u00e4umel) (JOIN instance_of European_Championships)))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "868.184.9", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Multiple_Relation", "question": "Which people plays Timbales and are a male ? [CTX]", "answer": "Tito Puente", "s_expression": "(AND (JOIN P1303 Q379248) (JOIN P31 Q502895) (JOIN P21 Q6581097))", "s_expression_cores": ["(AND (JOIN P1303 Q379248) (JOIN P31 Q502895) (JOIN P21 Q6581097))"], "sparql_delex": "SELECT ?x WHERE { ?x wdt:P1303 wd:Q379248 . ?x wdt:P31 wd:Q502895 .  ?x wdt:P21 wd:Q6581097 .  }", "results": ["Q317122"], "coreference_resolved_question": "Which people play Timbales and are male?", "s_expression_fn": "(AND (JOIN instrument Timbales) (JOIN instance_of common_name) (JOIN sex_or_gender male))", "predicted_s_expression_fn": "(AND (JOIN instrument Timbales) (JOIN sex_or_gender male) (JOIN instance_of common_name))", "predicted_s_expression": "(AND (JOIN P1303 Q379248) (JOIN P21 Q6581097) (JOIN P31 Q502895))", "sparql_attempt_count": 2, "actions": "SELECT ?x WHERE { ?x wdt:P1303 wd:Q379248 . ?x wdt:P21 wd:Q6581097 . ?x wdt:P31 wd:Q502895 . }"}, {"turnID": "868.67.7", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Multiple_Relation", "question": "Which nucleic acid sequences encodes Prostaglandin F2-alpha receptor and are found in Homo sapiens ? [CTX]", "answer": "PTGFR", "s_expression": "(AND (JOIN P688 Q21122493) (JOIN P31 Q863908) (JOIN P703 Q15978631))", "s_expression_cores": ["(AND (JOIN P688 Q21122493) (JOIN P31 Q863908) (JOIN P703 Q15978631))"], "sparql_delex": "SELECT ?x WHERE { ?x wdt:P688 wd:Q21122493 . ?x wdt:P31 wd:Q863908 .  ?x wdt:P703 wd:Q15978631 .  }", "results": ["Q18030902"], "coreference_resolved_question": "Which nucleic acid sequences encode Prostaglandin F2-alpha receptor and are found in Homo sapiens?", "s_expression_fn": "(AND (JOIN encodes Prostaglandin_F2-alpha_receptor) (JOIN instance_of nucleic_acid_sequence) (JOIN found_in_taxon Homo_sapiens))", "predicted_s_expression_fn": "(AND (JOIN encoded_by Prostaglandin_F2-alpha_receptor) (JOIN found_in_taxon Homo_sapiens) (JOIN instance_of nucleic_acid_sequence))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "868.11.6", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Multiple_Relation", "question": "Which occupations were discussed in Citizens and minstermen : a who's who of York City FC, 1922-1997 or were the positions for which Bob Heaton were appointed ? [CTX]", "answer": "member of the Indiana House of Representatives, association football player", "s_expression": "(OR (AND (JOIN (R P921) Q19845002) (JOIN P31 Q12737077)) (AND (JOIN (R P39) Q4932746) (JOIN P31 Q12737077)))", "s_expression_cores": ["(AND (JOIN (R P921) Q19845002) (JOIN P31 Q12737077))", "(AND (JOIN (R P39) Q4932746) (JOIN P31 Q12737077))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q19845002 wdt:P921 ?x . ?x wdt:P31 wd:Q12737077 .  } UNION { wd:Q4932746 wdt:P39 ?x . ?x wdt:P31 wd:Q12737077 .  } }", "results": ["Q18190880", "Q937857"], "coreference_resolved_question": "Which occupations were discussed in Citizens and minstermen : a who's who of York City FC, 1922-1997 or were the positions for which Bob Heaton were appointed?", "s_expression_fn": "(OR (AND (JOIN (R main_subject) Citizens_and_minstermen_:_a_who's_who_of_York_City_FC,_1922-1997) (JOIN instance_of occupation)) (AND (JOIN (R position_held) Bob_Heaton) (JOIN instance_of occupation)))", "predicted_s_expression_fn": "(UNION (AND (JOIN (R main_subject) Citizens_and_minstermen___a_who's_who_of_York_City_FC,_1922-1997) (JOIN instance_of occupation)) (AND (JOIN (R position_held) Bob_Heaton) (JOIN instance_of occupation))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "868.124.4", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Single_Relation", "question": "Which materials are used to craft Roman Street Scene or Chief Justice Peter Oliver ? [CTX]", "answer": "oil paint, gouache paint, canvas, ink, watercolor paint", "s_expression": "(OR (AND (JOIN (R P186) Q24039998) (JOIN P31 Q214609)) (AND (JOIN (R P186) Q20558406) (JOIN P31 Q214609)))", "s_expression_cores": ["(AND (JOIN (R P186) Q24039998) (JOIN P31 Q214609))", "(AND (JOIN (R P186) Q20558406) (JOIN P31 Q214609))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q24039998 wdt:P186 ?x . ?x wdt:P31 wd:Q214609 .  } UNION { wd:Q20558406 wdt:P186 ?x . ?x wdt:P31 wd:Q214609 .  } }", "results": ["Q296955", "Q204330", "Q4259259", "Q127418", "Q22915256"], "coreference_resolved_question": "Which materials are used to craft Roman Street Scene or Chief Justice Peter Oliver?", "s_expression_fn": "(OR (AND (JOIN (R made_from_material) Roman_Street_Scene) (JOIN instance_of material)) (AND (JOIN (R made_from_material) Chief_Justice_Peter_Oliver) (JOIN instance_of material)))", "predicted_s_expression_fn": "(DISTINCT (AND (JOIN (R material_used) (VALUES Roman_Street_Scene Chief_Justice_Peter_Oliver)) (JOIN instance_of material)))", "predicted_s_expression": "", "sparql_attempt_count": 2, "actions": ""}, {"turnID": "868.124.5", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Single_Relation", "question": "Which paintings are made from oil paint or paper ? [CTX]", "answer": "Some of them are Fright of a Girl, The Death of Eurydice, Perseus and Andromeda, Great Piece of Turf, Tuvstarr is still sitting there wistfully looking into the water, Today for Me, The Country of the Iguanodon, Long Pond, Foot of Red Hill, Dancer with Veils, Abundantia. Les dons de la terre", "s_expression": "(OR (AND (JOIN P186 Q296955) (JOIN P31 Q3305213)) (AND (JOIN P186 Q11472) (JOIN P31 Q3305213)))", "s_expression_cores": ["(AND (JOIN P186 Q296955) (JOIN P31 Q3305213))", "(AND (JOIN P186 Q11472) (JOIN P31 Q3305213))"], "sparql_delex": "SELECT ?x WHERE { { ?x wdt:P186 wd:Q296955 . ?x wdt:P31 wd:Q3305213 .  } UNION { ?x wdt:P186 wd:Q11472 . ?x wdt:P31 wd:Q3305213 .  } }", "results": ["Q20064454", "Q19962651", "Q19962653", "Q19904615", "Q20354623", "Q20064449", "Q3686309", "Q20064873", "Q18547075", "Q18591430", "Q21600399", "Q18685071", "Q19926018", "Q326503", "Q3918454", "Q18686545", "Q18579139", "Q7751053", "Q18686266", "Q23831034", "Q18343236", "Q20631716", "Q254794", "Q19967267", "Q19283476", "Q19961818", "Q20064875", "Q19925882", "Q537192", "Q19912455", "Q22915289", "Q22915288", "Q18375248", "Q23063007", "Q19912453", "Q17334742", "Q17490650", "Q17490651", "Q2715152", "Q20354795", "Q22915287", "Q22915286", "Q18599448", "Q22915284", "Q19912482", "Q18685793", "Q19883413", "Q3399411", "Q19912532", "Q19883416", "Q18686028", "Q23830983", "Q19926291", "Q18602438", "Q24024781", "Q18688318", "Q19925034", "Q24090417", "Q19901157", "Q24040006", "Q19926026", "Q24040004", "Q19927998", "Q10638843", "Q17334598", "Q18602459", "Q24039982", "Q20427966", "Q18689536", "Q19926216", "Q19926218", "Q3889196", "Q20018650", "Q18510591", "Q19826819", "Q19826818", "Q24040013", "Q26332660", "Q2620732", "Q12757909", "Q20064869", "Q20441102", "Q22915297", "Q19826814", "Q19826817", "Q19968488", "Q18689176", "Q18710654", "Q19883394", "Q19961442", "Q19883391", "Q19883390", "Q17329724", "Q20198419", "Q18587481", "Q20064547", "Q20064546", "Q19826797", "Q17189257", "Q19961227", "Q17334699", "Q20354686", "Q21659165", "Q19925629", "Q17334682", "Q22915303", "Q19883401", "Q18720074", "Q18683196", "Q18683194", "Q18683195", "Q18683193", "Q24039996", "Q18683191", "Q23831116", "Q20064638", "Q17339840", "Q18683198", "Q18687871", "Q1698794", "Q24090419", "Q3837491", "Q19912442", "Q20631614", "Q6937272", "Q22915343", "Q27115062", "Q19926278", "Q2741541", "Q23062646", "Q19925704", "Q18683040", "Q10541152", "Q19962520", "Q19861794", "Q27005745", "Q26972426", "Q577183", "Q18938735", "Q23054924", "Q6057356", "Q19945714", "Q18599436", "Q19961656", "Q18685728", "Q22915359", "Q18683721", "Q19912469", "Q19883419", "Q22915364", "Q20631669", "Q20022416", "Q22915360", "Q22915361", "Q20022413", "Q22915291", "Q18573877", "Q21699253", "Q22915406", "Q22915276", "Q22915400", "Q874058", "Q19930661", "Q19967587", "Q3395798", "Q22915279", "Q22915409", "Q22915307", "Q19928682", "Q18683130", "Q18683131", "Q19883395", "Q24039979", "Q11771555", "Q20631696", "Q19963627", "Q20631693", "Q285392", "Q17329657", "Q18602456", "Q11765899", "Q19961441", "Q19925169", "Q18628370", "Q19925164", "Q22915388", "Q19925648", "Q19925160", "Q22915391", "Q22915355", "Q2653851", "Q1720631", "Q22915395", "Q2428392", "Q22915397", "Q18687853", "Q18599215", "Q17329871", "Q18343261", "Q19924943", "Q19826820", "Q20064450", "Q19912545", "Q22915356", "Q22915412", "Q19912542", "Q21699178", "Q3698197", "Q22915394", "Q22915350", "Q20087072", "Q18918189", "Q18510551", "Q19967283", "Q22034100", "Q22570045", "Q19968764", "Q1967917", "Q18683789", "Q22915411", "Q1170194", "Q22915392", "Q18510569", "Q20064897", "Q19925951", "Q18587435", "Q22443797", "Q19912457", "Q18683255", "Q18713957", "Q17334411", "Q19962483", "Q22915386", "Q16543389", "Q22915384", "Q19912485", "Q19912550", "Q18602458", "Q19930646", "Q21699219", "Q18492052", "Q23009101", "Q22915358", "Q18564033", "Q3955106", "Q22034093", "Q22915357", "Q20667114", "Q19825938", "Q19912465", "Q18713954", "Q3210262", "Q22915300", "Q22915419", "Q22274084", "Q19925030", "Q18683013", "Q18684952", "Q26221008", "Q18683017", "Q18574711", "Q19912460", "Q22912326", "Q20064885", "Q19832639", "Q20631639", "Q19934474", "Q2741537", "Q22915362", "Q22034096", "Q18683155", "Q19924997", "Q19901160", "Q18689496", "Q17627562", "Q18714351", "Q22914523", "Q19963590", "Q18684713", "Q19912525", "Q18683416", "Q18684890", "Q19912523", "Q10543635", "Q19901158", "Q699388", "Q21494568", "Q20667106", "Q18343248", "Q19938817", "Q22915338", "Q2390197", "Q17334748", "Q18571662", "Q18643384", "Q18537006", "Q19928645", "Q19962900", "Q19912537", "Q18938721", "Q18684943", "Q19883408", "Q17329718", "Q22262391", "Q18938780", "Q20064452", "Q7158466", "Q716162", "Q14849952", "Q19826788", "Q19962648", "Q18683190", "Q21079910", "Q17627609", "Q18685044", "Q20701647", "Q4101655", "Q19887156", "Q18684629", "Q19825940", "Q19609369", "Q26221007", "Q18713967", "Q20631709", "Q24040003", "Q19336630", "Q19925958", "Q27464761", "Q19961790", "Q18572537", "Q17334638", "Q19825936", "Q18685823", "Q22115306", "Q21713196", "Q18346971", "Q22920999", "Q18709515", "Q18571641", "Q22915285"], "coreference_resolved_question": "Which paintings are made from oil paint or paper?", "s_expression_fn": "(OR (AND (JOIN made_from_material oil_paint) (JOIN instance_of painting)) (AND (JOIN made_from_material paper) (JOIN instance_of painting)))", "predicted_s_expression_fn": "(OR (AND (JOIN (R made_from_material) oil_paint) (JOIN instance_of painting)) (AND (JOIN (R made_from_material) paper) (JOIN instance_of painting)))", "predicted_s_expression": "", "sparql_attempt_count": 1, "actions": ""}, {"turnID": "868.124.6", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Multiple_Relation", "question": "Which administrative territories are demonstrated in Roman Street Scene or can Mettaweg be found ? [CTX]", "answer": "Ugchelen, Rome", "s_expression": "(OR (AND (JOIN (R P180) Q24039998) (JOIN P31 Q56061)) (AND (JOIN (R P276) Q19344631) (JOIN P31 Q56061)))", "s_expression_cores": ["(AND (JOIN (R P180) Q24039998) (JOIN P31 Q56061))", "(AND (JOIN (R P276) Q19344631) (JOIN P31 Q56061))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q24039998 wdt:P180 ?x . ?x wdt:P31 wd:Q56061 .  } UNION { wd:Q19344631 wdt:P276 ?x . ?x wdt:P31 wd:Q56061 .  } }", "results": ["Q1915779", "Q220"], "coreference_resolved_question": "Which administrative territories are demonstrated in Roman Street Scene or can Mettaweg be found?", "s_expression_fn": "(OR (AND (JOIN (R depicts) Roman_Street_Scene) (JOIN instance_of administrative_territorial_entity)) (AND (JOIN (R location) Mettaweg) (JOIN instance_of administrative_territorial_entity)))", "predicted_s_expression_fn": "(OR (AND (JOIN (R depicted_in) Roman_Street_Scene) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (AND (JOIN (R location) Mettaweg) (JOIN instance_of designation_for_an_administrative_territorial_entity)))", "predicted_s_expression": "", "sparql_attempt_count": 1, "actions": ""}, {"turnID": "868.13.5", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Single_Relation", "question": "Which administrative territories are the places of birth of Wenche Frogn Sell\u00e6g or Yal\u00e7\u0131n O\u011fuz ? [CTX]", "answer": "Sinop, Oslo", "s_expression": "(OR (AND (JOIN (R P19) Q1777521) (JOIN P31 Q56061)) (AND (JOIN (R P19) Q19613050) (JOIN P31 Q56061)))", "s_expression_cores": ["(AND (JOIN (R P19) Q1777521) (JOIN P31 Q56061))", "(AND (JOIN (R P19) Q19613050) (JOIN P31 Q56061))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q1777521 wdt:P19 ?x . ?x wdt:P31 wd:Q56061 .  } UNION { wd:Q19613050 wdt:P19 ?x . ?x wdt:P31 wd:Q56061 .  } }", "results": ["Q599416", "Q585"], "coreference_resolved_question": "Which administrative territories are the places of birth of Wenche Frogn Sell\u00e6g or Yal\u00e7\u0131n O\u011fuz?", "s_expression_fn": "(OR (AND (JOIN (R place_of_birth) Wenche_Frogn_Sell\u00e6g) (JOIN instance_of administrative_territorial_entity)) (AND (JOIN (R place_of_birth) Yal\u00e7\u0131n_O\u011fuz) (JOIN instance_of administrative_territorial_entity)))", "predicted_s_expression_fn": "(DISTINCT (AND (JOIN (R place_of_birth) (VALUES Wenche_Frogn_Sell\u00e6g Yal\u00e7\u0131n_O\u011fuz)) (JOIN instance_of designation_for_an_administrative_territorial_entity)))", "predicted_s_expression": "(DISTINCT (AND (JOIN (R P19) (VALUES Q1777521 Q19613050)) (JOIN P31 Q56061)))", "sparql_attempt_count": 2, "actions": "SELECT DISTINCT ?x WHERE { VALUES ?x0 { wd:Q1777521 wd:Q19613050 } . ?x0 wdt:P19 ?x . ?x wdt:P31 wd:Q56061 . }"}, {"turnID": "868.114.6", "question_type": "Logical Reasoning (All)", "description": "Logical|Difference|Multiple_Relation", "question": "Which political territories have diplomatic relations with United States of America and are not Pine Mountains present in ? [CTX]", "answer": "Canada, Germany", "s_expression": "(DIFF (AND (JOIN (R P530) Q30) (JOIN P31 Q1048835)) (JOIN (R P17) Q21904288))", "s_expression_cores": ["(AND (JOIN (R P530) Q30) (JOIN P31 Q1048835))", "(JOIN (R P17) Q21904288)"], "sparql_delex": "SELECT ?x WHERE { wd:Q30 wdt:P530 ?x . ?x wdt:P31 wd:Q1048835 .  FILTER NOT EXISTS { wd:Q21904288 wdt:P17 ?x .  } }", "results": ["Q16", "Q183"], "coreference_resolved_question": "Which political territories have diplomatic relations with United States of America and are not Pine Mountains present in?", "s_expression_fn": "(DIFF (AND (JOIN (R diplomatic_relation) United_States_of_America) (JOIN instance_of political_territorial_entity)) (JOIN (R country) Pine_Mountains))", "predicted_s_expression_fn": "(DIFF (AND (JOIN diplomatic_relation United_States_of_America) (JOIN instance_of political_territorial_entity)) (AND (JOIN present_in Pine_Mountains) (JOIN instance_of political_territorial_entity)))", "predicted_s_expression": "", "sparql_attempt_count": 1, "actions": ""}, {"turnID": "868.38.7", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Multiple_Relation", "question": "Which administrative territories do Tavros belong to or are the native countriesof Giustino Arpesani ? [CTX]", "answer": "Italy, Greece", "s_expression": "(OR (AND (JOIN (R P17) Q1568232) (JOIN P31 Q15617994)) (AND (JOIN (R P27) Q3771722) (JOIN P31 Q15617994)))", "s_expression_cores": ["(AND (JOIN (R P17) Q1568232) (JOIN P31 Q15617994))", "(AND (JOIN (R P27) Q3771722) (JOIN P31 Q15617994))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q1568232 wdt:P17 ?x . ?x wdt:P31 wd:Q15617994 .  } UNION { wd:Q3771722 wdt:P27 ?x . ?x wdt:P31 wd:Q15617994 .  } }", "results": ["Q38", "Q41"], "coreference_resolved_question": "Which administrative territories do Tavros belong to or are the native countries of Giustino Arpesani?", "s_expression_fn": "(OR (AND (JOIN (R country) Tavros) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (AND (JOIN (R country_of_citizenship) Giustino_Arpesani) (JOIN instance_of designation_for_an_administrative_territorial_entity)))", "predicted_s_expression_fn": "(DISTINCT (OR (AND (JOIN (R country) Tavros) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (AND (JOIN (R country_of_citizenship) Giustino_Arpesani) (JOIN instance_of designation_for_an_administrative_territorial_entity))))", "predicted_s_expression": "", "sparql_attempt_count": 1, "actions": ""}, {"turnID": "868.126.4", "question_type": "Logical Reasoning (All)", "description": "Logical|Difference|Single_Relation", "question": "Which health problems can be a sign of lead poisoning but not phenol exposure ? [CTX]", "answer": "hypertension, malnutrition, anemia, constipation, brain disease", "s_expression": "(DIFF (AND (JOIN (R P780) Q110315) (JOIN P31 Q2057971)) (JOIN (R P780) Q21175041))", "s_expression_cores": ["(AND (JOIN (R P780) Q110315) (JOIN P31 Q2057971))", "(JOIN (R P780) Q21175041)"], "sparql_delex": "SELECT ?x WHERE { wd:Q110315 wdt:P780 ?x . ?x wdt:P31 wd:Q2057971 .  FILTER NOT EXISTS { wd:Q21175041 wdt:P780 ?x .  } }", "results": ["Q41861", "Q12167", "Q5445", "Q178436", "Q576349"], "coreference_resolved_question": "Which health problems can be a sign of lead poisoning but not phenol exposure?", "s_expression_fn": "(DIFF (AND (JOIN (R symptoms_and_signs) lead_poisoning) (JOIN instance_of health_problem)) (JOIN (R symptoms_and_signs) phenol_exposure))", "predicted_s_expression_fn": "(DIFF (AND (JOIN (R symptom_of) lead_poisoning) (JOIN instance_of disease)) (AND (JOIN (R symptom_of) phenol_exposure) (JOIN instance_of disease))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "868.7.9", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Multiple_Relation", "question": "Which sports are associated with the field of occupation association football manager or were Luigi Giuseppe Giuliani a part of ? [CTX]", "answer": "association football", "s_expression": "(OR (AND (JOIN (R P425) Q628099) (JOIN P31 Q349)) (AND (JOIN (R P641) Q3839709) (JOIN P31 Q349)))", "s_expression_cores": ["(AND (JOIN (R P425) Q628099) (JOIN P31 Q349))", "(AND (JOIN (R P641) Q3839709) (JOIN P31 Q349))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q628099 wdt:P425 ?x . ?x wdt:P31 wd:Q349 .  } UNION { wd:Q3839709 wdt:P641 ?x . ?x wdt:P31 wd:Q349 .  } }", "results": ["Q2736"], "coreference_resolved_question": "Which sports are associated with the field of occupation association football manager or were Luigi Giuseppe Giuliani a part of?", "s_expression_fn": "(OR (AND (JOIN (R field_of_this_occupation) association_football_manager) (JOIN instance_of sport)) (AND (JOIN (R sport) Luigi_Giuseppe_Giuliani) (JOIN instance_of sport)))", "predicted_s_expression_fn": "(OR (AND (JOIN (R sports_discipline_competed_in) Luigi_Giuseppe_Giuliani) (JOIN instance_of sport)) (AND (JOIN (R field_of_work) association_football_manager) (JOIN instance_of sport))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "868.187.3", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Single_Relation", "question": "Which encyclopedias were Meyer, Jeremiah (DNB00) or Ince, Joseph Murray (DNB00) published in ? [CTX]", "answer": "Dictionary of National Biography (1885-1900)", "s_expression": "(OR (AND (JOIN (R P1433) Q19041134) (JOIN P31 Q5292)) (AND (JOIN (R P1433) Q19067737) (JOIN P31 Q5292)))", "s_expression_cores": ["(AND (JOIN (R P1433) Q19041134) (JOIN P31 Q5292))", "(AND (JOIN (R P1433) Q19067737) (JOIN P31 Q5292))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q19041134 wdt:P1433 ?x . ?x wdt:P31 wd:Q5292 .  } UNION { wd:Q19067737 wdt:P1433 ?x . ?x wdt:P31 wd:Q5292 .  } }", "results": ["Q15987216"], "coreference_resolved_question": "Which encyclopedias were Meyer, Jeremiah (DNB00) or Ince, Joseph Murray (DNB00) published in?", "s_expression_fn": "(OR (AND (JOIN (R published_in) Meyer,_Jeremiah_(DNB00)) (JOIN instance_of encyclopedia)) (AND (JOIN (R published_in) Ince,_Joseph_Murray_(DNB00)) (JOIN instance_of encyclopedia)))", "predicted_s_expression_fn": "(DISTINCT (AND (JOIN (R published_in) (VALUES Meyer,_Jeremiah_(DNB00) Ince,_Joseph_Murray_(DNB00)) (JOIN instance_of encyclopedia))", "predicted_s_expression": "", "sparql_attempt_count": 2, "actions": ""}, {"turnID": "868.115.3", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Single_Relation", "question": "Which administrative territories are the native countriesof Tod Browning or Niginho ? [CTX]", "answer": "Brazil, United States of America", "s_expression": "(OR (AND (JOIN (R P27) Q51476) (JOIN P31 Q15617994)) (AND (JOIN (R P27) Q1365945) (JOIN P31 Q15617994)))", "s_expression_cores": ["(AND (JOIN (R P27) Q51476) (JOIN P31 Q15617994))", "(AND (JOIN (R P27) Q1365945) (JOIN P31 Q15617994))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q51476 wdt:P27 ?x . ?x wdt:P31 wd:Q15617994 .  } UNION { wd:Q1365945 wdt:P27 ?x . ?x wdt:P31 wd:Q15617994 .  } }", "results": ["Q155", "Q30"], "coreference_resolved_question": "Which administrative territories are the native countries of Tod Browning or Niginho?", "s_expression_fn": "(OR (AND (JOIN (R country_of_citizenship) Tod_Browning) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (AND (JOIN (R country_of_citizenship) Niginho) (JOIN instance_of designation_for_an_administrative_territorial_entity)))", "predicted_s_expression_fn": "(DISTINCT (AND (JOIN (R country_of_citizenship) (VALUES Tod_Browning Niginho)) (JOIN instance_of designation_for_an_administrative_territorial_entity)))", "predicted_s_expression": "(DISTINCT (AND (JOIN (R P27) (VALUES Q51476 Q1365945)) (JOIN P31 Q15617994)))", "sparql_attempt_count": 2, "actions": "SELECT DISTINCT ?x WHERE { VALUES ?x0 { wd:Q51476 wd:Q1365945 } . ?x0 wdt:P27 ?x . ?x wdt:P31 wd:Q15617994 . }"}, {"turnID": "868.62.6", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Multiple_Relation", "question": "Which people have the profession of YouTuber and are a male ? [CTX]", "answer": "Some of them are Jack Conte, Louis Cole, Michele Bravi, RJ Balaji, Ed Bassmaster, Billy Wingrove, Joseph Garrett, Jack Harries, Adam Montoya, Enzo Knol", "s_expression": "(AND (JOIN P106 Q17125263) (JOIN P31 Q502895) (JOIN P21 Q6581097))", "s_expression_cores": ["(AND (JOIN P106 Q17125263) (JOIN P31 Q502895) (JOIN P21 Q6581097))"], "sparql_delex": "SELECT ?x WHERE { ?x wdt:P106 wd:Q17125263 . ?x wdt:P31 wd:Q502895 .  ?x wdt:P21 wd:Q6581097 .  }", "results": ["Q18149199", "Q6767367", "Q2051637", "Q18392741", "Q495272", "Q5638663", "Q20746902", "Q24050455", "Q471472", "Q15111952", "Q6789352", "Q12606686", "Q21019433", "Q4885336", "Q1394373", "Q21076652", "Q19881438", "Q14648645", "Q16982948", "Q15995557", "Q16231693", "Q26162460", "Q724093", "Q17385868", "Q5048547", "Q18686095", "Q17579908", "Q17125256", "Q18665912", "Q556589", "Q25712978", "Q20895644", "Q550996", "Q7817504", "Q20707531", "Q26250251", "Q20675836", "Q31180", "Q14436762", "Q7292375", "Q18217345", "Q17627234", "Q1280173", "Q6220303", "Q8194802", "Q6112168", "Q7176203", "Q17306356", "Q19658", "Q19841082", "Q3008879", "Q8018503", "Q2519623", "Q26793397", "Q13423853", "Q18702949", "Q17811709", "Q1853186", "Q4838870", "Q15994958", "Q17403415", "Q330316", "Q380125", "Q1071655", "Q311078", "Q5293897", "Q16235323", "Q16003159", "Q16890578", "Q15303721", "Q15125639", "Q18744638", "Q16234335", "Q16842940", "Q18744635", "Q23816443", "Q19704372", "Q23872995", "Q27057346", "Q5213711", "Q11222605", "Q3446620", "Q16647752", "Q19864858", "Q18685723", "Q937697", "Q21066191", "Q525921", "Q26831340", "Q7811905", "Q630446", "Q18672601", "Q319121", "Q26896929", "Q1347354", "Q1709841", "Q7816670", "Q49847", "Q5528148", "Q19667100", "Q3338543", "Q5534284", "Q7276861", "Q19502168", "Q615124", "Q20831383", "Q26831341", "Q1929063", "Q19414291", "Q7309729", "Q18685733", "Q55449", "Q26270184", "Q16927891", "Q18643733", "Q16235544", "Q971622", "Q3179168", "Q15429243", "Q16205820", "Q3157336", "Q18358046", "Q313080", "Q16231824", "Q22661131", "Q299657", "Q20243270", "Q16149408", "Q19628704", "Q20428012", "Q467863", "Q17476766", "Q21597748", "Q21597747", "Q19668231", "Q26885131", "Q9029142", "Q7936942", "Q26058", "Q23454", "Q5505267", "Q1186979", "Q4196127", "Q10851651", "Q16223298", "Q17489624", "Q4662561", "Q5699176", "Q21055609", "Q3343832", "Q734039", "Q4955182", "Q3186701", "Q19668529", "Q7153276", "Q863280", "Q26777546", "Q6003232", "Q20164592", "Q15790068", "Q296609", "Q18204783", "Q5244872", "Q16729001", "Q23008369", "Q546868", "Q16762380", "Q16235281", "Q5798973", "Q20150", "Q17418373", "Q6662247", "Q21197963", "Q1382540", "Q13132", "Q26262381", "Q353382", "Q19727242", "Q20961690", "Q190051", "Q2474313", "Q1362028", "Q19877907", "Q19703294", "Q16207357", "Q19667527", "Q16211971", "Q6397789", "Q17385856", "Q16145201", "Q22937468", "Q1364358", "Q23008395", "Q2618609", "Q15994921", "Q20031673", "Q19629663", "Q8063004", "Q18719441", "Q983689", "Q19864682", "Q18150766", "Q5238353", "Q22995912", "Q131685", "Q22936474", "Q16163337", "Q7182117", "Q931641", "Q20710912", "Q19878039", "Q17494126", "Q526710", "Q5170458", "Q23008815", "Q717527", "Q20089050", "Q20676799", "Q20731532"], "coreference_resolved_question": "Which people have the profession of YouTuber and are a male?", "s_expression_fn": "(AND (JOIN occupation YouTuber) (JOIN instance_of common_name) (JOIN sex_or_gender male))", "predicted_s_expression_fn": "(AND (JOIN (R occupation) YouTuber) (JOIN (R sex_or_gender) male) (JOIN instance_of common_name))", "predicted_s_expression": "(AND (JOIN P106 Q17125263) (JOIN P21 Q6581097) (JOIN P31 Q502895))", "sparql_attempt_count": 5, "actions": "SELECT ?x WHERE { ?x wdt:P106 wd:Q17125263 . ?x wdt:P21 wd:Q6581097 . ?x wdt:P31 wd:Q502895 . }"}, {"turnID": "868.125.6", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Single_Relation", "question": "Which people are the brothers of Sima Lang or Antoni Riera Nadal ? [CTX]", "answer": "Sima Yi, Sima Fu, Miquel \u00c0ngel Riera Nadal", "s_expression": "(OR (AND (JOIN (R P7) Q1074409) (JOIN P31 Q502895)) (AND (JOIN (R P7) Q19716557) (JOIN P31 Q502895)))", "s_expression_cores": ["(AND (JOIN (R P7) Q1074409) (JOIN P31 Q502895))", "(AND (JOIN (R P7) Q19716557) (JOIN P31 Q502895))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q1074409 wdt:P7 ?x . ?x wdt:P31 wd:Q502895 .  } UNION { wd:Q19716557 wdt:P7 ?x . ?x wdt:P31 wd:Q502895 .  } }", "results": ["Q353698", "Q1156935", "Q9033528"], "coreference_resolved_question": "Which people are the brothers of Sima Lang or Antoni Riera Nadal?", "s_expression_fn": "(OR (AND (JOIN (R brother) Sima_Lang) (JOIN instance_of common_name)) (AND (JOIN (R brother) Antoni_Riera_Nadal) (JOIN instance_of common_name)))", "predicted_s_expression_fn": "(DISTINCT (AND (JOIN (R sibling) (VALUES Sima_Lang Antoni_Riera_Nadal)) (JOIN instance_of common_name))", "predicted_s_expression": "", "sparql_attempt_count": 2, "actions": ""}, {"turnID": "868.125.10", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Multiple_Relation", "question": "Which people have Sima Fu as their brother and are a male ? [CTX]", "answer": "Sima Yi, Sima Lang", "s_expression": "(AND (JOIN P7 Q1156935) (JOIN P31 Q502895) (JOIN P21 Q6581097))", "s_expression_cores": ["(AND (JOIN P7 Q1156935) (JOIN P31 Q502895) (JOIN P21 Q6581097))"], "sparql_delex": "SELECT ?x WHERE { ?x wdt:P7 wd:Q1156935 . ?x wdt:P31 wd:Q502895 .  ?x wdt:P21 wd:Q6581097 .  }", "results": ["Q353698", "Q1074409"], "coreference_resolved_question": "Which people have Sima Fu as their brother and are a male?", "s_expression_fn": "(AND (JOIN brother Sima_Fu) (JOIN instance_of common_name) (JOIN sex_or_gender male))", "predicted_s_expression_fn": "(AND (JOIN brother Sima_Fu) (JOIN sex_or_gender male) (JOIN instance_of common_name))", "predicted_s_expression": "(AND (JOIN P7 Q1156935) (JOIN P21 Q6581097) (JOIN P31 Q502895))", "sparql_attempt_count": 2, "actions": "SELECT ?x WHERE { ?x wdt:P7 wd:Q1156935 . ?x wdt:P21 wd:Q6581097 . ?x wdt:P31 wd:Q502895 . }"}, {"turnID": "868.122.6", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Single_Relation", "question": "Which political territories do Robert Bunsen or Rudolf Altschul belong to ? [CTX]", "answer": "Canada, Germany", "s_expression": "(OR (AND (JOIN (R P27) Q71031) (JOIN P31 Q1048835)) (AND (JOIN (R P27) Q15830098) (JOIN P31 Q1048835)))", "s_expression_cores": ["(AND (JOIN (R P27) Q71031) (JOIN P31 Q1048835))", "(AND (JOIN (R P27) Q15830098) (JOIN P31 Q1048835))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q71031 wdt:P27 ?x . ?x wdt:P31 wd:Q1048835 .  } UNION { wd:Q15830098 wdt:P27 ?x . ?x wdt:P31 wd:Q1048835 .  } }", "results": ["Q16", "Q183"], "coreference_resolved_question": "Which political territories do Robert Bunsen or Rudolf Altschul belong to?", "s_expression_fn": "(OR (AND (JOIN (R country_of_citizenship) Robert_Bunsen) (JOIN instance_of political_territorial_entity)) (AND (JOIN (R country_of_citizenship) Rudolf_Altschul) (JOIN instance_of political_territorial_entity)))", "predicted_s_expression_fn": "(DISTINCT (AND (JOIN (R country_of_citizenship) (VALUES Robert_Bunsen Rudolf_Altschul)) (JOIN instance_of political_territorial_entity))", "predicted_s_expression": "", "sparql_attempt_count": 2, "actions": ""}, {"turnID": "868.49.2", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Multiple_Relation", "question": "Which administrative territories are The Girl with the Dragon Tattoo set in or are the places of birth of AJ Castillo ? [CTX]", "answer": "Austin, Stockholm", "s_expression": "(OR (AND (JOIN (R P840) Q276343) (JOIN P31 Q56061)) (AND (JOIN (R P19) Q4652093) (JOIN P31 Q56061)))", "s_expression_cores": ["(AND (JOIN (R P840) Q276343) (JOIN P31 Q56061))", "(AND (JOIN (R P19) Q4652093) (JOIN P31 Q56061))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q276343 wdt:P840 ?x . ?x wdt:P31 wd:Q56061 .  } UNION { wd:Q4652093 wdt:P19 ?x . ?x wdt:P31 wd:Q56061 .  } }", "results": ["Q16559", "Q1754"], "coreference_resolved_question": "Which administrative territories are The Girl with the Dragon Tattoo set in or are the places of birth of AJ Castillo?", "s_expression_fn": "(OR (AND (JOIN (R narrative_location) The_Girl_with_the_Dragon_Tattoo) (JOIN instance_of administrative_territorial_entity)) (AND (JOIN (R place_of_birth) AJ_Castillo) (JOIN instance_of administrative_territorial_entity)))", "predicted_s_expression_fn": "(DISTINCT (OR (AND (JOIN narrative_setting The_Girl_with_the_Dragon_Tattoo) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (AND (JOIN place_of_birth AJ_Castillo) (JOIN instance_of designation_for_an_administrative_territorial_entity))))", "predicted_s_expression": "", "sparql_attempt_count": 2, "actions": ""}, {"turnID": "868.5.3", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Single_Relation", "question": "Which human settlements are the places of birth of Jos\u00e9 Mar\u00eda Truchuelo Ru\u00edz or Roman Laurentius Dorazil ? [CTX]", "answer": "Krzesz\u00f3w, Lower Silesian Voivodeship, Quer\u00e9taro", "s_expression": "(OR (AND (JOIN (R P19) Q26678574) (JOIN P31 Q486972)) (AND (JOIN (R P19) Q2164659) (JOIN P31 Q486972)))", "s_expression_cores": ["(AND (JOIN (R P19) Q26678574) (JOIN P31 Q486972))", "(AND (JOIN (R P19) Q2164659) (JOIN P31 Q486972))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q26678574 wdt:P19 ?x . ?x wdt:P31 wd:Q486972 .  } UNION { wd:Q2164659 wdt:P19 ?x . ?x wdt:P31 wd:Q486972 .  } }", "results": ["Q478385", "Q173121"], "coreference_resolved_question": "Which human settlements are the places of birth of Jos\u00e9 Mar\u00eda Truchuelo Ru\u00edz or Roman Laurentius Dorazil?", "s_expression_fn": "(OR (AND (JOIN (R place_of_birth) Jos\u00e9_Mar\u00eda_Truchuelo_Ru\u00edz) (JOIN instance_of human_settlement)) (AND (JOIN (R place_of_birth) Roman_Laurentius_Dorazil) (JOIN instance_of human_settlement)))", "predicted_s_expression_fn": "(DISTINCT (AND (JOIN (R place_of_birth) (VALUES Jos\u00e9_Mar\u00eda_Truchuelo_Ru\u00edz Roman_Laurentius_Dorazil)) (JOIN instance_of human_settlement))", "predicted_s_expression": "", "sparql_attempt_count": 2, "actions": ""}, {"turnID": "868.64.4", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Single_Relation", "question": "Which political organizations have the ideology as communism or centrism ? [CTX]", "answer": "Some of them are United Communist Party, Free Fatherland Party - Paraguay, Bulgarian United Communist Party, Union of Communists in Bulgaria, Workers' Fight, Komalah, Common Course, Paraguayan Communist Party, Communist Party of French India, Nationalist Party", "s_expression": "(OR (AND (JOIN P1142 Q6186) (JOIN P31 Q7210356)) (AND (JOIN P1142 Q6587194) (JOIN P31 Q7210356)))", "s_expression_cores": ["(AND (JOIN P1142 Q6186) (JOIN P31 Q7210356))", "(AND (JOIN P1142 Q6587194) (JOIN P31 Q7210356))"], "sparql_delex": "SELECT ?x WHERE { { ?x wdt:P1142 wd:Q6186 . ?x wdt:P31 wd:Q7210356 .  } UNION { ?x wdt:P1142 wd:Q6587194 . ?x wdt:P31 wd:Q7210356 .  } }", "results": ["Q432608", "Q4896906", "Q17053908", "Q506591", "Q18348497", "Q6981582", "Q5154523", "Q4059714", "Q647925", "Q3306054", "Q15980871", "Q15980872", "Q451497", "Q626980", "Q1002594", "Q3323445", "Q1346313", "Q950664", "Q1236315", "Q212158", "Q13647283", "Q3355611", "Q5154459", "Q339706", "Q584730", "Q15980752", "Q3961877", "Q5354971", "Q40052", "Q7551656", "Q5983841", "Q7140524", "Q687409", "Q166073", "Q8034729", "Q4229906", "Q3565854", "Q15980723", "Q2453578", "Q8778806", "Q1975636", "Q3366245", "Q377349", "Q733925", "Q421477", "Q287777", "Q3366804", "Q1452292", "Q2037506", "Q5899673", "Q3227945", "Q858887", "Q3563415", "Q1141788", "Q2662810", "Q769829", "Q1976100", "Q1951190", "Q2296767", "Q15983471", "Q3366181", "Q5251223", "Q5154419", "Q5154418", "Q3565922", "Q5154413", "Q5154410", "Q3567316", "Q3567312", "Q6516862", "Q2697626", "Q15980843", "Q3561795", "Q3178479", "Q2053544", "Q266582", "Q6016982", "Q1788300", "Q6737439", "Q23011765", "Q7099167", "Q5154309", "Q5154308", "Q3877750", "Q827415", "Q2915102", "Q495459", "Q1054386", "Q702302", "Q3569927", "Q2670151", "Q2754931", "Q1559430", "Q4829778", "Q4544123", "Q4157658", "Q2054628", "Q2358124", "Q540982", "Q3367222", "Q4382630", "Q16185932", "Q7318765", "Q7318766", "Q493685", "Q11940273", "Q2054716", "Q839354", "Q3240512", "Q2348139", "Q841133", "Q82892", "Q5923696", "Q1752906", "Q7248822", "Q1484270", "Q936521", "Q2838038", "Q5852065", "Q163931", "Q20647668", "Q2975893", "Q6516886", "Q5051212", "Q853418", "Q579029", "Q3088482", "Q7767510", "Q7169265", "Q1854411", "Q5154341", "Q1860218", "Q5154462", "Q641691", "Q82807", "Q925616", "Q7141096", "Q2425638", "Q2080724", "Q1066799", "Q1637815", "Q15980746", "Q1428001", "Q2058323", "Q1185894", "Q3365477", "Q581177", "Q4887614", "Q1961133", "Q1535996", "Q7298391", "Q20760527", "Q157744", "Q1780578", "Q3366279", "Q927007", "Q3550123", "Q837159", "Q1142007", "Q2453869", "Q530916", "Q816863", "Q3813845", "Q6979788", "Q2453216", "Q2424039", "Q7318894", "Q4004869", "Q974577", "Q10785508", "Q1819658", "Q2712402", "Q7318751", "Q2448312", "Q3827425", "Q7886551", "Q7886553", "Q241787", "Q3625919", "Q3896781", "Q2003621", "Q3056426", "Q39655", "Q4727825", "Q3364651", "Q4991383", "Q1156179", "Q7389478", "Q15980854", "Q3291820", "Q1059383", "Q3923911", "Q15980893", "Q11693816", "Q1935264", "Q2613668", "Q3298135", "Q980864", "Q928652", "Q291414", "Q19833223", "Q6516925", "Q2576807", "Q6516921", "Q7551506", "Q7551503", "Q2177973", "Q6543693", "Q7887687", "Q1800560", "Q15728458", "Q3297904", "Q753422", "Q6277241", "Q1779796", "Q1111191", "Q2088895", "Q3366221", "Q7140545", "Q1303132", "Q3366226", "Q537303", "Q5348288", "Q4753656", "Q1682545", "Q5255726", "Q4897404", "Q7887632", "Q724682", "Q2376559", "Q2034798", "Q7633366", "Q2716578", "Q2717398", "Q2090478", "Q284853", "Q3561208", "Q3088569", "Q716379", "Q7318903", "Q6516900", "Q4397989", "Q15980899", "Q3142484", "Q1892305", "Q1137968", "Q3425534", "Q1781065", "Q1815140", "Q1771624", "Q13643059", "Q947126", "Q1499300", "Q233591", "Q2054596", "Q2054595", "Q15980774", "Q6888490", "Q587370", "Q1340875", "Q756180", "Q1121018", "Q15911893", "Q5154483", "Q1117948", "Q16948376", "Q284454", "Q3740911", "Q2113706", "Q1643413", "Q6401888", "Q1889194", "Q1259087", "Q5154390", "Q5154395", "Q7550574", "Q7886485", "Q277497", "Q11704923", "Q2671974", "Q3366214", "Q24863", "Q4574876", "Q1952211", "Q47768", "Q314946", "Q15145187", "Q1551114", "Q2944446", "Q5154437", "Q5154436", "Q943149", "Q2919240", "Q546903", "Q1628816", "Q1131598", "Q2626216", "Q5154283", "Q429972", "Q1470087", "Q3701765", "Q5154326", "Q1194748", "Q278860", "Q2061671", "Q1751122", "Q884932", "Q2160378", "Q1096175", "Q2654063", "Q3087523", "Q7248756", "Q5450807", "Q4229913", "Q4229911", "Q4229917", "Q3345101", "Q2495162", "Q3076886", "Q762083", "Q1167740", "Q5255652", "Q5255717", "Q2012277", "Q1430823", "Q1297375", "Q753446", "Q7886611", "Q234277", "Q744263", "Q6522624", "Q3896697", "Q1670332", "Q6509022", "Q891583", "Q3295407", "Q6509025", "Q1284829", "Q7101966", "Q3566041", "Q3563409", "Q964642", "Q3735405", "Q1157630", "Q3048772", "Q4996234", "Q937266", "Q1349604", "Q7551565", "Q4783169", "Q5154404", "Q5154407", "Q5154400", "Q2528507", "Q3218145", "Q6467504", "Q1799207", "Q156607", "Q815348", "Q1960994", "Q4229898", "Q4229894", "Q6277236", "Q1958474", "Q5154313", "Q6531692", "Q572998", "Q1968205", "Q2344321", "Q2664987", "Q727724", "Q1253956", "Q211656", "Q286683", "Q2665253", "Q3310481", "Q5152962", "Q720303", "Q6778625", "Q3804206", "Q1120572", "Q1120576", "Q1280685", "Q3544318", "Q25338960", "Q5154382", "Q5154387", "Q15980767", "Q17022283", "Q485814", "Q3366202", "Q384826", "Q3366206", "Q3008598", "Q7300872", "Q1297449", "Q5488980", "Q2894133"], "coreference_resolved_question": "Which political organizations have the ideology as communism or centrism?", "s_expression_fn": "(OR (AND (JOIN political_ideology communism) (JOIN instance_of political_organization)) (AND (JOIN political_ideology centrism) (JOIN instance_of political_organization)))", "predicted_s_expression_fn": "(OR (AND (JOIN (R political_ideology) communism) (AND (JOIN (R political_ideology) centrism)) (JOIN instance_of political_organization))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "868.64.6", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Single_Relation", "question": "Which administrative territories are Communist Party of India (Marxist) or Kamienna, Piotrk\u00f3w County located in ? [CTX]", "answer": "Poland, India", "s_expression": "(OR (AND (JOIN (R P17) Q234277) (JOIN P31 Q15617994)) (AND (JOIN (R P17) Q6357503) (JOIN P31 Q15617994)))", "s_expression_cores": ["(AND (JOIN (R P17) Q234277) (JOIN P31 Q15617994))", "(AND (JOIN (R P17) Q6357503) (JOIN P31 Q15617994))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q234277 wdt:P17 ?x . ?x wdt:P31 wd:Q15617994 .  } UNION { wd:Q6357503 wdt:P17 ?x . ?x wdt:P31 wd:Q15617994 .  } }", "results": ["Q36", "Q668"], "coreference_resolved_question": "Which administrative territories are Communist Party of India (Marxist) or Kamienna, Piotrk\u00f3w County located in?", "s_expression_fn": "(OR (AND (JOIN (R country) Communist_Party_of_India_(Marxist)) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (AND (JOIN (R country) Kamienna,_Piotrk\u00f3w_County) (JOIN instance_of designation_for_an_administrative_territorial_entity)))", "predicted_s_expression_fn": "(DISTINCT (AND (JOIN (R country) (VALUES Communist_Party_of_India_(Marxist) Kamienna,_Piotrk\u00f3w_County)) (JOIN instance_of designation_for_an_administrative_territorial_entity)))", "predicted_s_expression": "", "sparql_attempt_count": 2, "actions": ""}, {"turnID": "868.12.6", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Single_Relation", "question": "Which administrative territories are the places of death of Damasus I or Lewis Lywood ? [CTX]", "answer": "Caterham, Rome", "s_expression": "(OR (AND (JOIN (R P20) Q130997) (JOIN P31 Q56061)) (AND (JOIN (R P20) Q6536813) (JOIN P31 Q56061)))", "s_expression_cores": ["(AND (JOIN (R P20) Q130997) (JOIN P31 Q56061))", "(AND (JOIN (R P20) Q6536813) (JOIN P31 Q56061))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q130997 wdt:P20 ?x . ?x wdt:P31 wd:Q56061 .  } UNION { wd:Q6536813 wdt:P20 ?x . ?x wdt:P31 wd:Q56061 .  } }", "results": ["Q1996975", "Q220"], "coreference_resolved_question": "Which administrative territories are the places of death of Damasus I or Lewis Lywood?", "s_expression_fn": "(OR (AND (JOIN (R place_of_death) Damasus_I) (JOIN instance_of administrative_territorial_entity)) (AND (JOIN (R place_of_death) Lewis_Lywood) (JOIN instance_of administrative_territorial_entity)))", "predicted_s_expression_fn": "(DISTINCT (AND (JOIN (R place_of_death) (VALUES Damasus_I Lewis_Lywood)) (JOIN instance_of designation_for_an_administrative_territorial_entity)))", "predicted_s_expression": "(DISTINCT (AND (JOIN (R P20) (VALUES Q130997 Q6536813)) (JOIN P31 Q56061)))", "sparql_attempt_count": 2, "actions": "SELECT DISTINCT ?x WHERE { VALUES ?x0 { wd:Q130997 wd:Q6536813 } . ?x0 wdt:P20 ?x . ?x wdt:P31 wd:Q56061 . }"}, {"turnID": "868.53.5", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Multiple_Relation", "question": "Which political territories are Monte Raymond a civilian of or were the main subjects in the work Valle Crucis Abbey ? [CTX]", "answer": "Canada, Llantysilio", "s_expression": "(OR (AND (JOIN (R P27) Q21858406) (JOIN P31 Q1048835)) (AND (JOIN (R P921) Q24566607) (JOIN P31 Q1048835)))", "s_expression_cores": ["(AND (JOIN (R P27) Q21858406) (JOIN P31 Q1048835))", "(AND (JOIN (R P921) Q24566607) (JOIN P31 Q1048835))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q21858406 wdt:P27 ?x . ?x wdt:P31 wd:Q1048835 .  } UNION { wd:Q24566607 wdt:P921 ?x . ?x wdt:P31 wd:Q1048835 .  } }", "results": ["Q16", "Q6661823"], "coreference_resolved_question": "Which political territories are Monte Raymond a civilian of or were the main subjects in the work Valle Crucis Abbey?", "s_expression_fn": "(OR (AND (JOIN (R country_of_citizenship) Monte_Raymond) (JOIN instance_of political_territorial_entity)) (AND (JOIN (R main_subject) Valle_Crucis_Abbey) (JOIN instance_of political_territorial_entity)))", "predicted_s_expression_fn": "(DISTINCT (OR (AND (JOIN (R country_of_citizenship) Monte_Raymond) (JOIN instance_of political_territorial_entity)) (AND (JOIN main_subject Valle_Crucis_Abbey) (JOIN instance_of political_territorial_entity)))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "868.52.3", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Single_Relation", "question": "Which administrative territories do Elie Wiesel or Giorgio Gallione belong to ? [CTX]", "answer": "Romania, United States of America, Italy", "s_expression": "(OR (AND (JOIN (R P27) Q18391) (JOIN P31 Q15617994)) (AND (JOIN (R P27) Q3765475) (JOIN P31 Q15617994)))", "s_expression_cores": ["(AND (JOIN (R P27) Q18391) (JOIN P31 Q15617994))", "(AND (JOIN (R P27) Q3765475) (JOIN P31 Q15617994))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q18391 wdt:P27 ?x . ?x wdt:P31 wd:Q15617994 .  } UNION { wd:Q3765475 wdt:P27 ?x . ?x wdt:P31 wd:Q15617994 .  } }", "results": ["Q218", "Q30", "Q38"], "coreference_resolved_question": "Which administrative territories do Elie Wiesel or Giorgio Gallione belong to?", "s_expression_fn": "(OR (AND (JOIN (R country_of_citizenship) Elie_Wiesel) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (AND (JOIN (R country_of_citizenship) Giorgio_Gallione) (JOIN instance_of designation_for_an_administrative_territorial_entity)))", "predicted_s_expression_fn": "(DISTINCT (AND (JOIN (R country_of_citizenship) (VALUES Elie_Wiesel Giorgio_Gallione)) (JOIN instance_of designation_for_an_administrative_territorial_entity))", "predicted_s_expression": "", "sparql_attempt_count": 2, "actions": ""}, {"turnID": "868.89.10", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Multiple_Relation", "question": "Which people received the award titled Officer of the National Order of Merit and are a male ? [CTX]", "answer": "Some of them are Jean-Marie Pelt, Jacques Gautheron, Aldo Cardoso, Thierry Orosco, Guy Drut, Georges Blanc, Yves Guillot, Jean Baub\u00e9rot, Jean M\u00e9gret, Dominique Bourg", "s_expression": "(AND (JOIN P166 Q13422140) (JOIN P31 Q502895) (JOIN P21 Q6581097))", "s_expression_cores": ["(AND (JOIN P166 Q13422140) (JOIN P31 Q502895) (JOIN P21 Q6581097))"], "sparql_delex": "SELECT ?x WHERE { ?x wdt:P166 wd:Q13422140 . ?x wdt:P31 wd:Q502895 .  ?x wdt:P21 wd:Q6581097 .  }", "results": ["Q314223", "Q439849", "Q3089290", "Q3109829", "Q2927038", "Q322719", "Q3156083", "Q3166618", "Q2277390", "Q1152188", "Q3160151", "Q17496928", "Q711010", "Q3384916", "Q264399", "Q1450908", "Q3351296", "Q598539", "Q3386721", "Q3570715", "Q1649272", "Q11984900", "Q3340828", "Q3387336", "Q2550312", "Q350442", "Q667925", "Q8326835", "Q3591402", "Q3168067", "Q3622", "Q3174945", "Q22666795", "Q2848866", "Q3176764", "Q3192370", "Q451331", "Q3219447", "Q595951", "Q472038", "Q2934879", "Q2830066", "Q2363842", "Q3380364", "Q3387068", "Q3387740", "Q679585", "Q3128924", "Q728158", "Q17634935", "Q266382", "Q711984", "Q3086090", "Q159478", "Q2831163", "Q1842057", "Q3380317", "Q2820955", "Q2829581", "Q1229212", "Q3170234", "Q2452752", "Q3420771", "Q14626678", "Q3479201", "Q2830162", "Q3047969", "Q445961", "Q3165249", "Q462579", "Q984330", "Q3384710", "Q3438621", "Q3169951", "Q445910", "Q3166883", "Q22255964", "Q2392313", "Q3369577", "Q3456003", "Q776564", "Q3438696", "Q2389393", "Q3122192", "Q3385289", "Q2389185", "Q3379827", "Q3122052", "Q1151126", "Q382060", "Q3311066", "Q1685312", "Q2978024", "Q3035028", "Q24054581", "Q2424688", "Q13233791", "Q27654246", "Q134709", "Q982005", "Q3367342", "Q1373922", "Q3219135", "Q678553", "Q3524366", "Q3142142", "Q742622", "Q3592386", "Q3384203", "Q3573695", "Q3385147", "Q2830091", "Q3169683", "Q20671471", "Q130355", "Q3311177", "Q3172746", "Q57849", "Q3167778", "Q3591405", "Q2896151", "Q3124124", "Q3159069", "Q3012837", "Q3308874", "Q1684958", "Q3102819", "Q2848626", "Q1470586", "Q515195", "Q3174537", "Q439594", "Q3105663", "Q1974920", "Q21521538", "Q3056792", "Q3301202", "Q3421060", "Q21175454", "Q722357", "Q3387357", "Q3134558", "Q1296999", "Q3167959", "Q18214171", "Q3367496", "Q465743", "Q2898766", "Q3169833", "Q3384384", "Q3265390", "Q4261", "Q1879369", "Q767435", "Q263086", "Q3425969", "Q3426094", "Q3173653", "Q43697", "Q455883", "Q7149456", "Q3265325", "Q708863", "Q3168421", "Q458430", "Q3369867", "Q27435048", "Q534446", "Q435771", "Q3309069", "Q3171566", "Q3310063", "Q255413", "Q20936775", "Q1363031", "Q3310263", "Q3173427", "Q360905", "Q2863236", "Q19839076", "Q257752", "Q3129275", "Q3105716", "Q3166200", "Q152905", "Q2977112", "Q21151023", "Q3159840", "Q3385351", "Q3170641", "Q3573413", "Q3027108", "Q2898681", "Q166311", "Q718596", "Q3022894", "Q3436072", "Q3165001", "Q3168348", "Q2897919", "Q2897915", "Q1677870", "Q820283", "Q3158979", "Q3174818", "Q1360255", "Q115243", "Q27805682", "Q711554", "Q3035048", "Q3168640", "Q523545", "Q3133233", "Q3169983", "Q2959006", "Q18222207", "Q377291", "Q3263612", "Q1236962", "Q3165545", "Q14626680", "Q73713", "Q2847719", "Q3570735", "Q3372420", "Q2811177", "Q16267424", "Q2898280", "Q3084041", "Q3159650", "Q3174030", "Q1285720", "Q690286", "Q3092628", "Q3167792", "Q993391", "Q2977832", "Q365638", "Q592313", "Q1341695", "Q956505", "Q593140", "Q2568057", "Q2830043", "Q2829495", "Q1304275", "Q3172462", "Q3309637", "Q17355540", "Q3588731", "Q3387463", "Q551733", "Q19360792", "Q2303868", "Q3288324", "Q3574628", "Q3159001", "Q445935", "Q3165537", "Q3159490", "Q2829634", "Q3288774", "Q2853652", "Q770037", "Q2847354", "Q123135", "Q3524457", "Q2743768", "Q27605161", "Q1471976", "Q3309490", "Q17076721", "Q24805525", "Q3369496", "Q542922", "Q330218", "Q21666181", "Q1685870", "Q3379809", "Q3249088", "Q1930803", "Q676710", "Q551776", "Q3167374", "Q3484264", "Q3559586", "Q2830315", "Q3263262", "Q19924352", "Q3387051", "Q2019130", "Q3174731", "Q3385337", "Q3351443", "Q3289106", "Q3142646", "Q2404991", "Q3580085", "Q4245", "Q728214", "Q3123959", "Q2134239", "Q573184", "Q2849909", "Q19629254", "Q2876416", "Q3166786", "Q3171317", "Q3310951", "Q3384313", "Q2093468", "Q3027060", "Q3093665", "Q2832304", "Q3124272", "Q3103069", "Q587004", "Q3309184", "Q3148283", "Q544469", "Q3171746", "Q2897873", "Q2965422", "Q3310770", "Q11984926", "Q928479", "Q963644", "Q2897572", "Q3385157", "Q3166006", "Q3380682", "Q3168395", "Q3172571", "Q3168819", "Q3035015", "Q297477", "Q3171160", "Q3103367", "Q2844680", "Q1432745", "Q3159696", "Q3573871", "Q3426322", "Q107690", "Q2383241", "Q3435986", "Q2965605", "Q3121727", "Q3436114", "Q91020", "Q704153"], "coreference_resolved_question": "Which people received the award titled Officer of the National Order of Merit and are a male?", "s_expression_fn": "(AND (JOIN award_received Officer_of_the_National_Order_of_Merit) (JOIN instance_of common_name) (JOIN sex_or_gender male))", "predicted_s_expression_fn": "(AND (JOIN (R award_received) Officer_of_the_National_Order_of_Merit) (JOIN sex_or_gender male) (JOIN instance_of common_name))", "predicted_s_expression": "(AND (JOIN P166 Q13422140) (JOIN P21 Q6581097) (JOIN P31 Q502895))", "sparql_attempt_count": 3, "actions": "SELECT ?x WHERE { ?x wdt:P166 wd:Q13422140 . ?x wdt:P21 wd:Q6581097 . ?x wdt:P31 wd:Q502895 . }"}, {"turnID": "868.133.4", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Multiple_Relation", "question": "Which administrative territories are partner towns of B\u00fcy\u00fck\u00e7ekmece or are the countries of citizenship of Eugen Prosper Pr\u00e9vost ? [CTX]", "answer": "France, Gelsenkirchen", "s_expression": "(OR (AND (JOIN (R P190) Q840258) (JOIN P31 Q15617994)) (AND (JOIN (R P27) Q1373556) (JOIN P31 Q15617994)))", "s_expression_cores": ["(AND (JOIN (R P190) Q840258) (JOIN P31 Q15617994))", "(AND (JOIN (R P27) Q1373556) (JOIN P31 Q15617994))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q840258 wdt:P190 ?x . ?x wdt:P31 wd:Q15617994 .  } UNION { wd:Q1373556 wdt:P27 ?x . ?x wdt:P31 wd:Q15617994 .  } }", "results": ["Q142", "Q2765"], "coreference_resolved_question": "Which administrative territories are partner towns of B\u00fcy\u00fck\u00e7ekmece or are the countries of citizenship of Eugen Prosper Pr\u00e9vost?", "s_expression_fn": "(OR (AND (JOIN (R twinned_administrative_body) B\u00fcy\u00fck\u00e7ekmece) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (AND (JOIN (R country_of_citizenship) Eugen_Prosper_Pr\u00e9vost) (JOIN instance_of designation_for_an_administrative_territorial_entity)))", "predicted_s_expression_fn": "(OR (AND (JOIN (R twinned_administrative_body) B\u00fcy\u00fck\u00e7ekmece) (AND (JOIN (R country_of_citizenship) Eugen_Prosper_Pr\u00e9vost))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "868.3.6", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Single_Relation", "question": "Which watercourses are situated in the neighbourhood of First Republic of Austria or Vlissingen ? [CTX]", "answer": "Morava, Inn, Rhine, Salzach, Thaya, Danube, Western Scheldt", "s_expression": "(OR (AND (JOIN (R P206) Q518101) (JOIN P31 Q355304)) (AND (JOIN (R P206) Q10084) (JOIN P31 Q355304)))", "s_expression_cores": ["(AND (JOIN (R P206) Q518101) (JOIN P31 Q355304))", "(AND (JOIN (R P206) Q10084) (JOIN P31 Q355304))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q518101 wdt:P206 ?x . ?x wdt:P31 wd:Q355304 .  } UNION { wd:Q10084 wdt:P206 ?x . ?x wdt:P31 wd:Q355304 .  } }", "results": ["Q179251", "Q14369", "Q584", "Q152661", "Q660208", "Q1653", "Q1524840"], "coreference_resolved_question": "Which watercourses are situated in the neighbourhood of First Republic of Austria or Vlissingen?", "s_expression_fn": "(OR (AND (JOIN (R located_in_or_next_to_body_of_water) First_Republic_of_Austria) (JOIN instance_of watercourse)) (AND (JOIN (R located_in_or_next_to_body_of_water) Vlissingen) (JOIN instance_of watercourse)))", "predicted_s_expression_fn": "(DISTINCT (AND (JOIN (R adjacent_to) (VALUES First_Republic_of_Austria Vlissingen)) (JOIN instance_of watercourse)))", "predicted_s_expression": "", "sparql_attempt_count": 2, "actions": ""}, {"turnID": "868.0.2", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Single_Relation", "question": "Which administrative territories have a shared border with Norway or Ennenda ? [CTX]", "answer": "Obstalden, Mollis, Netstal, Sool, Mitl\u00f6di, Filzbach, European Union, Glarus", "s_expression": "(OR (AND (JOIN (R P47) Q20) (JOIN P31 Q56061)) (AND (JOIN (R P47) Q659434) (JOIN P31 Q56061)))", "s_expression_cores": ["(AND (JOIN (R P47) Q20) (JOIN P31 Q56061))", "(AND (JOIN (R P47) Q659434) (JOIN P31 Q56061))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q20 wdt:P47 ?x . ?x wdt:P31 wd:Q56061 .  } UNION { wd:Q659434 wdt:P47 ?x . ?x wdt:P31 wd:Q56061 .  } }", "results": ["Q659922", "Q644055", "Q607716", "Q659986", "Q661465", "Q661477", "Q458", "Q15730054"], "coreference_resolved_question": "Which administrative territories have a shared border with Norway or Ennenda?", "s_expression_fn": "(OR (AND (JOIN (R shares_border_with) Norway) (JOIN instance_of administrative_territorial_entity)) (AND (JOIN (R shares_border_with) Ennenda) (JOIN instance_of administrative_territorial_entity)))", "predicted_s_expression_fn": "(DISTINCT (AND (JOIN shares_border_with (VALUES Norway Ennenda)) (JOIN instance_of designation_for_an_administrative_territorial_entity)))", "predicted_s_expression": "(DISTINCT (AND (JOIN P47 (VALUES Q20 Q659434)) (JOIN P31 Q15617994)))", "sparql_attempt_count": 2, "actions": "SELECT DISTINCT ?x WHERE { VALUES ?x0 { wd:Q20 wd:Q659434 } . ?x wdt:P47 ?x0 . ?x wdt:P31 wd:Q15617994 . }"}, {"turnID": "868.58.4", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Single_Relation", "question": "Which administrative territories are Hollywood or Inka Kancha a part of ? [CTX]", "answer": "Peru, United States of America", "s_expression": "(OR (AND (JOIN (R P17) Q34006) (JOIN P31 Q15617994)) (AND (JOIN (R P17) Q19421199) (JOIN P31 Q15617994)))", "s_expression_cores": ["(AND (JOIN (R P17) Q34006) (JOIN P31 Q15617994))", "(AND (JOIN (R P17) Q19421199) (JOIN P31 Q15617994))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q34006 wdt:P17 ?x . ?x wdt:P31 wd:Q15617994 .  } UNION { wd:Q19421199 wdt:P17 ?x . ?x wdt:P31 wd:Q15617994 .  } }", "results": ["Q419", "Q30"], "coreference_resolved_question": "Which administrative territories are Hollywood or Inka Kancha a part of?", "s_expression_fn": "(OR (AND (JOIN (R country) Hollywood) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (AND (JOIN (R country) Inka_Kancha) (JOIN instance_of designation_for_an_administrative_territorial_entity)))", "predicted_s_expression_fn": "(DISTINCT (AND (JOIN (R part_of) (VALUES Hollywood Inka_Kancha)) (JOIN instance_of designation_for_an_administrative_territorial_entity)))", "predicted_s_expression": "(DISTINCT (AND (JOIN (R P361) (VALUES Q34006 Q19421199)) (JOIN P31 Q271669)))", "sparql_attempt_count": 2, "actions": "SELECT DISTINCT ?x WHERE { VALUES ?x0 { wd:Q34006 wd:Q19421199 } . ?x0 wdt:P361 ?x . ?x wdt:P31 wd:Q271669 . }"}, {"turnID": "868.34.7", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Single_Relation", "question": "Which people starred in The White Angel or Die Hochzeit von L\u00e4nneken ? [CTX]", "answer": "Some of them are Ralph Borgwardt, Egon Brecher, Donald Crisp, Lionel Belmore, Harry Hindemith, Fred Delmare, Paul Panzer, Kay Francis, Donald Woods, Georgia Caine", "s_expression": "(OR (AND (JOIN (R P161) Q1526466) (JOIN P31 Q502895)) (AND (JOIN (R P161) Q4168576) (JOIN P31 Q502895)))", "s_expression_cores": ["(AND (JOIN (R P161) Q1526466) (JOIN P31 Q502895))", "(AND (JOIN (R P161) Q4168576) (JOIN P31 Q502895))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q1526466 wdt:P161 ?x . ?x wdt:P31 wd:Q502895 .  } UNION { wd:Q4168576 wdt:P161 ?x . ?x wdt:P31 wd:Q502895 .  } }", "results": ["Q3517461", "Q1298490", "Q2477748", "Q3752667", "Q960510", "Q1240064", "Q1240511", "Q975586", "Q916148", "Q1767387", "Q434901", "Q314513", "Q3049429", "Q728050", "Q2177656", "Q268110", "Q70692", "Q461949", "Q1443099", "Q5547403", "Q477361", "Q394571", "Q271878", "Q1267491", "Q3126164", "Q1586558", "Q1576387", "Q367073"], "coreference_resolved_question": "Which people starred in The White Angel or Die Hochzeit von L\u00e4nneken?", "s_expression_fn": "(OR (AND (JOIN (R cast_member) The_White_Angel) (JOIN instance_of common_name)) (AND (JOIN (R cast_member) Die_Hochzeit_von_L\u00e4nneken) (JOIN instance_of common_name)))", "predicted_s_expression_fn": "(DISTINCT (AND (JOIN (R cast_member) (OR The_White_Angel Die_Hochzeit_von_L\u00e4nneken)) (JOIN instance_of common_name)))", "predicted_s_expression": "", "sparql_attempt_count": 2, "actions": ""}, {"turnID": "868.161.3", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Multiple_Relation", "question": "Which administrative territories did Bogdan Suchowiak expire or were Francesco del Cossa born ? [CTX]", "answer": "Warsaw, Ferrara", "s_expression": "(OR (AND (JOIN (R P20) Q890442) (JOIN P31 Q56061)) (AND (JOIN (R P19) Q454892) (JOIN P31 Q56061)))", "s_expression_cores": ["(AND (JOIN (R P20) Q890442) (JOIN P31 Q56061))", "(AND (JOIN (R P19) Q454892) (JOIN P31 Q56061))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q890442 wdt:P20 ?x . ?x wdt:P31 wd:Q56061 .  } UNION { wd:Q454892 wdt:P19 ?x . ?x wdt:P31 wd:Q56061 .  } }", "results": ["Q270", "Q13362"], "coreference_resolved_question": "Which administrative territories did Bogdan Suchowiak expire or were Francesco del Cossa born?", "s_expression_fn": "(OR (AND (JOIN (R place_of_death) Bogdan_Suchowiak) (JOIN instance_of administrative_territorial_entity)) (AND (JOIN (R place_of_birth) Francesco_del_Cossa) (JOIN instance_of administrative_territorial_entity)))", "predicted_s_expression_fn": "(DISTINCT (OR (AND (JOIN (R place_of_death) Bogdan_Suchowiak) (JOIN (R place_of_birth) Francesco_del_Cossa) (JOIN instance_of designation_for_an_administrative_territorial_entity)))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "868.161.4", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Multiple_Relation", "question": "Which administrative territories did the demise of Bogdan Suchowiak occur or were Palmiro Foresi born ? [CTX]", "answer": "Warsaw, Livorno", "s_expression": "(OR (AND (JOIN (R P20) Q890442) (JOIN P31 Q56061)) (AND (JOIN (R P19) Q3892804) (JOIN P31 Q56061)))", "s_expression_cores": ["(AND (JOIN (R P20) Q890442) (JOIN P31 Q56061))", "(AND (JOIN (R P19) Q3892804) (JOIN P31 Q56061))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q890442 wdt:P20 ?x . ?x wdt:P31 wd:Q56061 .  } UNION { wd:Q3892804 wdt:P19 ?x . ?x wdt:P31 wd:Q56061 .  } }", "results": ["Q270", "Q6761"], "coreference_resolved_question": "Which administrative territories did the demise of Bogdan Suchowiak occur or were Palmiro Foresi born?", "s_expression_fn": "(OR (AND (JOIN (R place_of_death) Bogdan_Suchowiak) (JOIN instance_of administrative_territorial_entity)) (AND (JOIN (R place_of_birth) Palmiro_Foresi) (JOIN instance_of administrative_territorial_entity)))", "predicted_s_expression_fn": "(DISTINCT (OR (AND (JOIN (R place_of_death) Bogdan_Suchowiak) (JOIN (R place_of_birth) Palmiro_Foresi)))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "868.32.3", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Multiple_Relation", "question": "Which administrative territories are the countries of origin of Hunger or are Alfredo Lamadrid a civilian of ? [CTX]", "answer": "Chile, Ireland, United Kingdom", "s_expression": "(OR (AND (JOIN (R P495) Q1637811) (JOIN P31 Q15617994)) (AND (JOIN (R P27) Q5667796) (JOIN P31 Q15617994)))", "s_expression_cores": ["(AND (JOIN (R P495) Q1637811) (JOIN P31 Q15617994))", "(AND (JOIN (R P27) Q5667796) (JOIN P31 Q15617994))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q1637811 wdt:P495 ?x . ?x wdt:P31 wd:Q15617994 .  } UNION { wd:Q5667796 wdt:P27 ?x . ?x wdt:P31 wd:Q15617994 .  } }", "results": ["Q298", "Q27", "Q145"], "coreference_resolved_question": "Which administrative territories are the countries of origin of Hunger or are Alfredo Lamadrid a civilian of?", "s_expression_fn": "(OR (AND (JOIN (R country_of_origin) Hunger) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (AND (JOIN (R country_of_citizenship) Alfredo_Lamadrid) (JOIN instance_of designation_for_an_administrative_territorial_entity)))", "predicted_s_expression_fn": "(DISTINCT (OR (AND (JOIN (R country_of_origin) Hunger) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (AND (JOIN (R country_of_citizenship) Alfredo_Lamadrid) (JOIN instance_of designation_for_an_administrative_territorial_entity)))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "868.14.7", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Single_Relation", "question": "Which administrative territories were Roozbeh Shahalidoost or Paride Tumburus born in ? [CTX]", "answer": "Aquileia, Iran", "s_expression": "(OR (AND (JOIN (R P19) Q7366690) (JOIN P31 Q15617994)) (AND (JOIN (R P19) Q2705256) (JOIN P31 Q15617994)))", "s_expression_cores": ["(AND (JOIN (R P19) Q7366690) (JOIN P31 Q15617994))", "(AND (JOIN (R P19) Q2705256) (JOIN P31 Q15617994))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q7366690 wdt:P19 ?x . ?x wdt:P31 wd:Q15617994 .  } UNION { wd:Q2705256 wdt:P19 ?x . ?x wdt:P31 wd:Q15617994 .  } }", "results": ["Q53216", "Q794"], "coreference_resolved_question": "Which administrative territories were Roozbeh Shahalidoost or Paride Tumburus born in?", "s_expression_fn": "(OR (AND (JOIN (R place_of_birth) Roozbeh_Shahalidoost) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (AND (JOIN (R place_of_birth) Paride_Tumburus) (JOIN instance_of designation_for_an_administrative_territorial_entity)))", "predicted_s_expression_fn": "(DISTINCT (AND (JOIN (R place_of_birth) (VALUES Roozbeh_Shahalidoost Paride_Tumburus)) (JOIN instance_of designation_for_an_administrative_territorial_entity)))", "predicted_s_expression": "(DISTINCT (AND (JOIN (R P19) (VALUES Q7366690 Q2705256)) (JOIN P31 Q15617994)))", "sparql_attempt_count": 2, "actions": "SELECT DISTINCT ?x WHERE { VALUES ?x0 { wd:Q7366690 wd:Q2705256 } . ?x0 wdt:P19 ?x . ?x wdt:P31 wd:Q15617994 . }"}, {"turnID": "868.138.7", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Multiple_Relation", "question": "Which people held the position of member of the Volkskammer and are a male ? [CTX]", "answer": "Some of them are Per-Ren\u00e9 Seeger, Rolf Berger, Thomas Klein, Josef Orlopp, Hans Koch, Rudolph Schulze, G\u00fcnther Maleuda, Georg Zschornack, Bruno Benthien, Josef Rambo", "s_expression": "(AND (JOIN P39 Q18557729) (JOIN P31 Q502895) (JOIN P21 Q6581097))", "s_expression_cores": ["(AND (JOIN P39 Q18557729) (JOIN P31 Q502895) (JOIN P21 Q6581097))"], "sparql_delex": "SELECT ?x WHERE { ?x wdt:P39 wd:Q18557729 . ?x wdt:P31 wd:Q502895 .  ?x wdt:P21 wd:Q6581097 .  }", "results": ["Q2591699", "Q1729906", "Q99232", "Q99233", "Q17274612", "Q1608083", "Q101695", "Q1370700", "Q1744797", "Q96950", "Q2343739", "Q1512223", "Q1515372", "Q1584728", "Q1601107", "Q2571319", "Q1736990", "Q1512345", "Q1576958", "Q1730043", "Q1690493", "Q2172322", "Q2203577", "Q1579689", "Q18223955", "Q87628", "Q1468342", "Q1731934", "Q694621", "Q2544186", "Q1039801", "Q1582072", "Q1697361", "Q1587511", "Q2589296", "Q1585006", "Q518534", "Q1690448", "Q499291", "Q2040014", "Q2150548", "Q2561433", "Q100617", "Q100904", "Q1601211", "Q120752", "Q1515386", "Q2038758", "Q120970", "Q1527190", "Q2174480", "Q1288549", "Q1598290", "Q18222930", "Q125488", "Q2140475", "Q1444314", "Q1745750", "Q1363495", "Q96126", "Q17991809", "Q18412789", "Q714819", "Q695240", "Q1262973", "Q77210", "Q2283573", "Q108312", "Q1168276", "Q2069874", "Q1421411", "Q2571789", "Q15822835", "Q1912742", "Q1533960", "Q2561669", "Q823877", "Q103798", "Q62459", "Q500550", "Q97056", "Q2039681", "Q677731", "Q1360274", "Q2141082", "Q88427", "Q62963", "Q1145031", "Q1600000", "Q993864", "Q1927471", "Q2039618", "Q108541", "Q108542", "Q1578037", "Q91595", "Q110263", "Q1534049", "Q2543789", "Q1662143", "Q1000698", "Q2040948", "Q1226238", "Q1422544", "Q2173881", "Q1610930", "Q825705", "Q1201253", "Q95829", "Q2283876", "Q69373", "Q69371", "Q2038138", "Q87742", "Q1271175", "Q1518284", "Q84706", "Q1528355", "Q1913096", "Q1511783", "Q1458764", "Q1580990", "Q1645789", "Q2702085", "Q1478867", "Q1696115", "Q92446", "Q1440065", "Q1512378", "Q993107", "Q73195", "Q1110166", "Q1560383", "Q88359", "Q1600853", "Q1598158", "Q58057", "Q126803", "Q90315", "Q1329406", "Q1222726", "Q1870923", "Q1576917", "Q531807", "Q1248652", "Q18334477", "Q1566827", "Q2590925", "Q77391", "Q497768", "Q1726837", "Q1383708", "Q98509", "Q95367", "Q3305736", "Q15428361", "Q2582214", "Q1522002", "Q1283720", "Q18411829", "Q1352053", "Q1360716", "Q1323921", "Q2546123", "Q1331975", "Q1467958", "Q15440086", "Q1551813", "Q65013", "Q2737822", "Q1511912", "Q1580791", "Q89282", "Q1456982", "Q1456983", "Q107610", "Q109175", "Q15823718", "Q1874349", "Q824427", "Q17575529", "Q2544611", "Q1278834", "Q18026577", "Q1168950", "Q1560839", "Q91307", "Q97062", "Q1506534", "Q1889728", "Q18223617", "Q1247113", "Q2589421", "Q2040889", "Q78207", "Q317762", "Q1600516", "Q2582103", "Q1444124", "Q1223478", "Q1360382", "Q72800", "Q2173015", "Q65536", "Q66622", "Q2577361", "Q1311177", "Q1359281", "Q1580091", "Q95861", "Q2543737", "Q1690197", "Q98333", "Q95869", "Q1110347", "Q1578679", "Q1461487", "Q121331", "Q96380", "Q1597627", "Q2610", "Q1560428", "Q1754243", "Q1658609", "Q1594398", "Q1504171", "Q15853408", "Q1352281", "Q1352325", "Q1279018", "Q104079", "Q1583165", "Q100593", "Q495770", "Q110870", "Q1359236", "Q15638549", "Q95269", "Q1298977", "Q2645493", "Q1296788", "Q85553", "Q2062001", "Q1509202", "Q1528734", "Q1717030", "Q2589936", "Q1929282", "Q97230", "Q57682", "Q103500", "Q1113924", "Q103562", "Q1279336", "Q118061", "Q1298777", "Q1238993", "Q108392", "Q1512521", "Q1928491", "Q2163816", "Q1577544", "Q70087", "Q1578356", "Q95644", "Q1391105", "Q87942", "Q993009", "Q65126", "Q123423", "Q1597062", "Q1461964", "Q2590122", "Q1444302", "Q1241511", "Q1729697", "Q126610", "Q68832", "Q2077344", "Q15842913", "Q90846", "Q1560760", "Q1512967", "Q1591105", "Q823338", "Q122302", "Q125405", "Q1581449", "Q2589589", "Q1578131", "Q1732713", "Q107155", "Q1793818", "Q1409134", "Q18287969", "Q15815074", "Q1470299", "Q16509317", "Q64970", "Q105914", "Q1579854", "Q2562002", "Q1889978", "Q18289346", "Q57896", "Q1577327", "Q1927421", "Q1512066", "Q78208", "Q215555", "Q1646386", "Q64993", "Q5391993", "Q362086", "Q16508956", "Q1255218", "Q64998", "Q57241", "Q1495029", "Q895636", "Q1584405", "Q993479", "Q78414", "Q1383178", "Q1560862", "Q96502", "Q109618", "Q1649475", "Q1256247", "Q86014", "Q2140441", "Q110074", "Q92149", "Q104403", "Q1596498", "Q2650188", "Q1794259", "Q1650317", "Q1293797", "Q2040385", "Q18020445", "Q1490650", "Q1712485", "Q1768559", "Q1561413", "Q2034085", "Q1369222", "Q1884532", "Q1278890", "Q95812", "Q1583262", "Q1359082", "Q1303687", "Q119751", "Q2149589", "Q15811693", "Q2561874", "Q823385", "Q115317", "Q1442973", "Q1496546", "Q70049", "Q500786", "Q99211", "Q1506244", "Q98461", "Q1352311", "Q1913488", "Q101483", "Q1016495", "Q1819255", "Q1703456", "Q1600838", "Q363491", "Q1610640", "Q1511284", "Q15810751", "Q1800925", "Q2562839", "Q57500", "Q1323258", "Q2597756", "Q1223046", "Q1734489", "Q95881", "Q108347", "Q1250221", "Q1241206", "Q1706027", "Q1732450", "Q1238230", "Q110297", "Q1733614", "Q1330419", "Q1505988", "Q1360135", "Q1329259", "Q1553622", "Q361234", "Q72667", "Q1611204", "Q1454633", "Q63201", "Q1913462", "Q124875", "Q714937", "Q2545244", "Q1513083", "Q1357634", "Q1301625", "Q1535762", "Q1787245", "Q824350", "Q15815333", "Q216081", "Q1732621", "Q1713483", "Q1608875", "Q105620", "Q1155868", "Q1322842", "Q1582045", "Q1689410", "Q1312175", "Q166700", "Q88336", "Q92316", "Q107269", "Q1510820", "Q90457", "Q1577273", "Q2039937", "Q65032", "Q64096", "Q1717471", "Q1611296", "Q61659", "Q985162", "Q1503545", "Q15814947", "Q15814944", "Q1517953", "Q1164284", "Q97871", "Q1582177", "Q63528", "Q687881", "Q1759325", "Q985246", "Q1488352", "Q2804841", "Q2601", "Q2602", "Q16509367", "Q15456023", "Q2607", "Q1080156", "Q2427121", "Q16831289", "Q70767", "Q1564770", "Q2571881", "Q881278", "Q1387706", "Q822519", "Q2422678", "Q85561", "Q2650383", "Q2546533", "Q1650553", "Q1512080", "Q2581363", "Q2018100", "Q15455487", "Q1599066", "Q1352621", "Q1462755", "Q1450191", "Q1794295", "Q1729817", "Q1705646", "Q15439212", "Q2174450", "Q1745596", "Q1126612", "Q1629452", "Q2075544", "Q99246", "Q687390", "Q121672", "Q1297891", "Q110966", "Q84681", "Q1668331", "Q87974", "Q1347143", "Q1600486", "Q18413013", "Q2473469", "Q2645740", "Q1539480", "Q126118", "Q2643321", "Q1669312", "Q1474012", "Q1407723", "Q1794176", "Q2544315", "Q1232825", "Q1698019", "Q1549887", "Q1283234", "Q64915", "Q1705412", "Q1330095", "Q2283815", "Q75246", "Q1629252", "Q73581", "Q90856", "Q1651953", "Q108703", "Q1079671", "Q1351900", "Q1222104", "Q15839762", "Q2562645", "Q2504234", "Q1698572", "Q89295", "Q1730968", "Q121258", "Q2040818", "Q18334918", "Q1912471", "Q15906323", "Q1512075", "Q1668415", "Q2545488", "Q2173828", "Q1351924", "Q66490", "Q2590286", "Q1504870", "Q1029213", "Q1468405", "Q1352191", "Q1670838", "Q1395449", "Q997223", "Q2544306", "Q1889464", "Q1612789", "Q2589520", "Q1452459", "Q71189", "Q2561105", "Q1522804", "Q1388926", "Q1890103", "Q1997081", "Q1312513", "Q2163234", "Q2562302", "Q1903923", "Q105273", "Q64043", "Q105436", "Q1577342", "Q1669266", "Q1996928", "Q2061055", "Q216336", "Q1100075", "Q73201", "Q70999", "Q993163", "Q1294529", "Q449899", "Q69197", "Q761865", "Q1477239", "Q86914", "Q69198", "Q1347054", "Q86454", "Q1603431", "Q1510739", "Q1878049", "Q1596546", "Q1577166", "Q1442966", "Q1577517", "Q1782370", "Q99205", "Q2562609", "Q112378", "Q2336417", "Q1505901", "Q1505900", "Q1732293", "Q2417563", "Q1512359", "Q2172312", "Q96963", "Q1512203", "Q1819220", "Q1532557", "Q97469", "Q1926766", "Q110321", "Q1123023", "Q1343417", "Q1169413", "Q1577197", "Q1392092", "Q2164534", "Q1562032", "Q18412054", "Q1586832", "Q1362869", "Q64812", "Q1561863", "Q1705511", "Q1393309", "Q2073969", "Q2127956", "Q1929270", "Q2577117", "Q109422", "Q126067", "Q1442892", "Q1524256", "Q1279081", "Q1794152", "Q1539205", "Q18371089", "Q1630046", "Q15858391", "Q2646180", "Q2571981", "Q78321", "Q96962", "Q119786", "Q2543642", "Q1889413", "Q61585", "Q1084635", "Q2141540", "Q1426050", "Q1221580", "Q120502", "Q993803", "Q2059666", "Q2162654", "Q18223778", "Q1793346", "Q1652887", "Q1337383", "Q2589219", "Q99439", "Q1781980", "Q1745738", "Q126702", "Q1597014", "Q2644709", "Q1781988", "Q15544081", "Q62970", "Q828456", "Q2562436", "Q105575", "Q828514", "Q107314", "Q2036805", "Q91951", "Q1082265", "Q57309", "Q708747", "Q1668424", "Q101995", "Q1697555", "Q2476180", "Q16319439", "Q2561138", "Q4521658", "Q1561504", "Q1458336", "Q15439930", "Q97924", "Q1581966", "Q1596847", "Q1353554", "Q1437007", "Q1889556", "Q1578698", "Q1110510", "Q15854040", "Q1638972", "Q1622677", "Q113524", "Q1600404", "Q1545159", "Q1505358", "Q2283261", "Q1511563", "Q96559", "Q71018", "Q57412", "Q17310618", "Q1554926", "Q1698643", "Q15819265", "Q1996910", "Q1793762", "Q1818604", "Q1038211", "Q1709639", "Q1609215", "Q1353389", "Q1416110", "Q75962", "Q1305669", "Q1870846", "Q1688541", "Q1084617", "Q1577092", "Q1554634", "Q1230205", "Q2062608", "Q1561760", "Q97199", "Q1447800", "Q15819577", "Q2538", "Q2336875", "Q1532308", "Q1223322", "Q1569785", "Q1732176", "Q18156572", "Q2545018", "Q1579561", "Q103295", "Q1630083", "Q1581291", "Q1500045", "Q1357228", "Q1710107", "Q1663226", "Q1612598", "Q1739642", "Q1294610", "Q77226", "Q215043", "Q88224", "Q1637283", "Q1359710", "Q57442", "Q894752", "Q15808372", "Q1325706", "Q1733258", "Q1082002", "Q1336614", "Q75868", "Q120782", "Q591955", "Q1534599", "Q69609", "Q18221912", "Q76625", "Q57445", "Q2545166", "Q1889354", "Q75709", "Q1511668", "Q1629926", "Q1591037", "Q2692958", "Q2591624", "Q75971", "Q1358449", "Q1479597", "Q16509338", "Q1353287", "Q15429071", "Q57730", "Q825152", "Q1557728", "Q2473178", "Q1889914", "Q1578466", "Q2128188", "Q1029208", "Q75186", "Q78214", "Q1573213", "Q1728843", "Q214888", "Q1581096", "Q2644993", "Q1372637", "Q16318961", "Q1608216", "Q1352062", "Q62703", "Q2059750", "Q1251086", "Q1241822", "Q1609340", "Q2546706", "Q1874770", "Q84984", "Q2561622", "Q1730784", "Q1514892", "Q1503854", "Q2062838", "Q1903914", "Q1796786", "Q1478126", "Q18224280", "Q993583", "Q126184", "Q2562922", "Q1904967", "Q1655411", "Q1690185", "Q98317", "Q65917", "Q95406", "Q1224074", "Q104122", "Q1553882", "Q2628", "Q1461221"], "coreference_resolved_question": "Which people held the position of member of the Volkskammer and are a male?", "s_expression_fn": "(AND (JOIN position_held member_of_the_Volkskammer) (JOIN instance_of common_name) (JOIN sex_or_gender male))", "predicted_s_expression_fn": "(AND (JOIN position_held member_of_the_Volkskammer) (JOIN sex_or_gender male) (JOIN instance_of common_name))", "predicted_s_expression": "(AND (JOIN P39 Q18557729) (JOIN P21 Q6581097) (JOIN P31 Q502895))", "sparql_attempt_count": 2, "actions": "SELECT ?x WHERE { ?x wdt:P39 wd:Q18557729 . ?x wdt:P21 wd:Q6581097 . ?x wdt:P31 wd:Q502895 . }"}, {"turnID": "868.130.5", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Single_Relation", "question": "Which political territories are Wolfgang Harnisch or Cindy Waddingham a civilian of ? [CTX]", "answer": "Australia, Germany", "s_expression": "(OR (AND (JOIN (R P27) Q2589843) (JOIN P31 Q1048835)) (AND (JOIN (R P27) Q5120608) (JOIN P31 Q1048835)))", "s_expression_cores": ["(AND (JOIN (R P27) Q2589843) (JOIN P31 Q1048835))", "(AND (JOIN (R P27) Q5120608) (JOIN P31 Q1048835))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q2589843 wdt:P27 ?x . ?x wdt:P31 wd:Q1048835 .  } UNION { wd:Q5120608 wdt:P27 ?x . ?x wdt:P31 wd:Q1048835 .  } }", "results": ["Q408", "Q183"], "coreference_resolved_question": "Which political territories are Wolfgang Harnisch or Cindy Waddingham a civilian of?", "s_expression_fn": "(OR (AND (JOIN (R country_of_citizenship) Wolfgang_Harnisch) (JOIN instance_of political_territorial_entity)) (AND (JOIN (R country_of_citizenship) Cindy_Waddingham) (JOIN instance_of political_territorial_entity)))", "predicted_s_expression_fn": "(DISTINCT (AND (JOIN (R country_of_citizenship) (VALUES Wolfgang_Harnisch Cindy_Waddingham)) (JOIN instance_of political_territorial_entity))", "predicted_s_expression": "", "sparql_attempt_count": 2, "actions": ""}, {"turnID": "868.130.6", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Multiple_Relation", "question": "Which political territories are the native countriesof Wolfgang Harnisch or are adjacent to Bag\u00e0 ? [CTX]", "answer": "Some of them are Germany, Castellar de n'Hug, Josa i Tuix\u00e9n, Bellver de Cerdanya, Das, Catalonia, Alp, Ur\u00fas, Saldes, Montell\u00e0 i Martinet, Gisclareny", "s_expression": "(OR (AND (JOIN (R P27) Q2589843) (JOIN P31 Q1048835)) (AND (JOIN (R P47) Q15486) (JOIN P31 Q1048835)))", "s_expression_cores": ["(AND (JOIN (R P27) Q2589843) (JOIN P31 Q1048835))", "(AND (JOIN (R P47) Q15486) (JOIN P31 Q1048835))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q2589843 wdt:P27 ?x . ?x wdt:P31 wd:Q1048835 .  } UNION { wd:Q15486 wdt:P47 ?x . ?x wdt:P31 wd:Q1048835 .  } }", "results": ["Q15519", "Q15511", "Q183", "Q15493", "Q13734", "Q15537", "Q13732", "Q13731", "Q13756", "Q13761", "Q984429"], "coreference_resolved_question": "Which political territories are the native countries of Wolfgang Harnisch or are adjacent to Bag\u00e0?", "s_expression_fn": "(OR (AND (JOIN (R country_of_citizenship) Wolfgang_Harnisch) (JOIN instance_of political_territorial_entity)) (AND (JOIN (R shares_border_with) Bag\u00e0) (JOIN instance_of political_territorial_entity)))", "predicted_s_expression_fn": "(DISTINCT (OR (AND (JOIN (R country_of_citizenship) (VALUES Wolfgang_Harnisch)) (AND (JOIN shares_border_with Bag\u00e0) (JOIN instance_of political_territorial_entity))))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "868.162.2", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Multiple_Relation", "question": "Which people are married to Phil Boutelje and have the profession as actor ? [CTX]", "answer": "Babe London", "s_expression": "(AND (JOIN P26 Q7181722) (JOIN P31 Q502895) (JOIN P106 Q33999))", "s_expression_cores": ["(AND (JOIN P26 Q7181722) (JOIN P31 Q502895) (JOIN P106 Q33999))"], "sparql_delex": "SELECT ?x WHERE { ?x wdt:P26 wd:Q7181722 . ?x wdt:P31 wd:Q502895 .  ?x wdt:P106 wd:Q33999 .  }", "results": ["Q3632374"], "coreference_resolved_question": "Which people are married to Phil Boutelje and have the profession as actor?", "s_expression_fn": "(AND (JOIN spouse Phil_Boutelje) (JOIN instance_of common_name) (JOIN occupation actor))", "predicted_s_expression_fn": "(AND (JOIN (R spouse) Phil_Boutelje) (JOIN (R profession) actor) (JOIN instance_of common_name))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "868.162.8", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Multiple_Relation", "question": "Which administrative territories are the origin of Scrambled Brains or are adjacent to Candia Canavese ? [CTX]", "answer": "Mercenasco, Barone Canavese, Mazz\u00e8, Caluso, Strambino, United States of America, Vische", "s_expression": "(OR (AND (JOIN (R P495) Q7438716) (JOIN P31 Q15617994)) (AND (JOIN (R P47) Q9144) (JOIN P31 Q15617994)))", "s_expression_cores": ["(AND (JOIN (R P495) Q7438716) (JOIN P31 Q15617994))", "(AND (JOIN (R P47) Q9144) (JOIN P31 Q15617994))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q7438716 wdt:P495 ?x . ?x wdt:P31 wd:Q15617994 .  } UNION { wd:Q9144 wdt:P47 ?x . ?x wdt:P31 wd:Q15617994 .  } }", "results": ["Q9464", "Q9044", "Q9460", "Q9131", "Q10310", "Q30", "Q10364"], "coreference_resolved_question": "Which administrative territories are the origin of Scrambled Brains or are adjacent to Candia Canavese?", "s_expression_fn": "(OR (AND (JOIN (R country_of_origin) Scrambled_Brains) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (AND (JOIN (R shares_border_with) Candia_Canavese) (JOIN instance_of designation_for_an_administrative_territorial_entity)))", "predicted_s_expression_fn": "(DISTINCT (OR (AND (JOIN (R country_of_origin) Scrambled_Brains) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (AND (JOIN shares_border_with Candia_Canavese) (JOIN instance_of designation_for_an_administrative_territorial_entity))))", "predicted_s_expression": "", "sparql_attempt_count": 1, "actions": ""}, {"turnID": "491.55.6", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Multiple_Relation", "question": "Which political territories are the countries of citizenship of David Ling or are bordered by Noalejo ? [CTX]", "answer": "Huelma, Montillana, Cambil, Campillo de Arenas, Canada, Frailes, Montej\u00edcar, Campot\u00e9jar, Iznalloz, Valdepe\u00f1as de Ja\u00e9n", "s_expression": "(OR (AND (JOIN (R P27) Q464729) (JOIN P31 Q1048835)) (AND (JOIN (R P47) Q1642224) (JOIN P31 Q1048835)))", "s_expression_cores": ["(AND (JOIN (R P27) Q464729) (JOIN P31 Q1048835))", "(AND (JOIN (R P47) Q1642224) (JOIN P31 Q1048835))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q464729 wdt:P27 ?x . ?x wdt:P31 wd:Q1048835 .  } UNION { wd:Q1642224 wdt:P47 ?x . ?x wdt:P31 wd:Q1048835 .  } }", "results": ["Q1641746", "Q593679", "Q1611875", "Q780608", "Q16", "Q2047553", "Q593505", "Q253744", "Q1410782", "Q1641765"], "coreference_resolved_question": "Which political territories are the countries of citizenship of David Ling or are bordered by Noalejo?", "s_expression_fn": "(OR (AND (JOIN (R country_of_citizenship) David_Ling) (JOIN instance_of political_territorial_entity)) (AND (JOIN (R shares_border_with) Noalejo) (JOIN instance_of political_territorial_entity)))", "predicted_s_expression_fn": "(OR (AND (JOIN (R country_of_citizenship) David_Ling) (JOIN instance_of political_territorial_entity)) (AND (JOIN (R shares_border_with) Noalejo) (JOIN instance_of political_territorial_entity)))", "predicted_s_expression": "", "sparql_attempt_count": 1, "actions": ""}, {"turnID": "491.43.8", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Multiple_Relation", "question": "Which recurring events did Jes\u00fas del Muro compete in or are Karate at the 2010 Asian Games \u2013 Women's kumite +68 kg a portion of ? [CTX]", "answer": "1958 FIFA World Cup, 1966 FIFA World Cup, Asian Games, 1962 FIFA World Cup", "s_expression": "(OR (AND (JOIN (R P1344) Q1381977) (JOIN P31 Q15275719)) (AND (JOIN (R P361) Q17055321) (JOIN P31 Q15275719)))", "s_expression_cores": ["(AND (JOIN (R P1344) Q1381977) (JOIN P31 Q15275719))", "(AND (JOIN (R P361) Q17055321) (JOIN P31 Q15275719))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q1381977 wdt:P1344 ?x . ?x wdt:P31 wd:Q15275719 .  } UNION { wd:Q17055321 wdt:P361 ?x . ?x wdt:P31 wd:Q15275719 .  } }", "results": ["Q132533", "Q134202", "Q483463", "Q160813"], "coreference_resolved_question": "Which recurring events did Jes\u00fas del Muro compete in or are Karate at the 2010 Asian Games \u2013 Women's kumite +68 kg a portion of?", "s_expression_fn": "(OR (AND (JOIN (R participant_in) Jes\u00fas_del_Muro) (JOIN instance_of recurring_event)) (AND (JOIN (R part_of) Karate_at_the_2010_Asian_Games_\u2013_Women's_kumite_+68_kg) (JOIN instance_of recurring_event)))", "predicted_s_expression_fn": "(OR (AND (JOIN sports_discipline_competed_in Jes\u00fas_del_Muro) (JOIN instance_of recurring_event)) (AND (JOIN (R part_of) Karate_at_the_2010_Asian_Games_\u2013_Women's_kumite_+68_kg) (JOIN instance_of recurring_event)))", "predicted_s_expression": "", "sparql_attempt_count": 1, "actions": ""}, {"turnID": "491.13.6", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Multiple_Relation", "question": "Which administrative territories did Uncle Earl originate and do American Cordillera belong to ? [CTX]", "answer": "United States of America", "s_expression": "(AND (JOIN (R P495) Q7882730) (JOIN P31 Q15617994) (JOIN (R P17) Q605761))", "s_expression_cores": ["(AND (JOIN (R P495) Q7882730) (JOIN P31 Q15617994) (JOIN (R P17) Q605761))"], "sparql_delex": "SELECT ?x WHERE { wd:Q7882730 wdt:P495 ?x . ?x wdt:P31 wd:Q15617994 .  wd:Q605761 wdt:P17 ?x .  }", "results": ["Q30"], "coreference_resolved_question": "Which administrative territories did Uncle Earl originate and do American Cordillera belong to?", "s_expression_fn": "(AND (JOIN (R country_of_origin) Uncle_Earl) (JOIN instance_of designation_for_an_administrative_territorial_entity) (JOIN (R country) American_Cordillera))", "predicted_s_expression_fn": "(DISTINCT (AND (JOIN (R country) (VALUES Uncle_Earl American_Cordillera)) (JOIN instance_of designation_for_an_administrative_territorial_entity)))", "predicted_s_expression": "(DISTINCT (AND (JOIN (R P17) (VALUES Q7882730 Q605761)) (JOIN P31 Q15617994)))", "sparql_attempt_count": 2, "actions": "SELECT DISTINCT ?x WHERE { VALUES ?x0 { wd:Q7882730 wd:Q605761 } . ?x0 wdt:P17 ?x . ?x wdt:P31 wd:Q15617994 . }"}, {"turnID": "770.73.2", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Single_Relation", "question": "Which administrative territories do Charles Johnson or Daniel Goll\u00e1n belong to ? [CTX]", "answer": "United States of America, Argentina", "s_expression": "(OR (AND (JOIN (R P27) Q5079558) (JOIN P31 Q15617994)) (AND (JOIN (R P27) Q19521806) (JOIN P31 Q15617994)))", "s_expression_cores": ["(AND (JOIN (R P27) Q5079558) (JOIN P31 Q15617994))", "(AND (JOIN (R P27) Q19521806) (JOIN P31 Q15617994))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q5079558 wdt:P27 ?x . ?x wdt:P31 wd:Q15617994 .  } UNION { wd:Q19521806 wdt:P27 ?x . ?x wdt:P31 wd:Q15617994 .  } }", "results": ["Q30", "Q414"], "coreference_resolved_question": "Which administrative territories do Charles Johnson or Daniel Goll\u00e1n belong to?", "s_expression_fn": "(OR (AND (JOIN (R country_of_citizenship) Charles_Johnson) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (AND (JOIN (R country_of_citizenship) Daniel_Goll\u00e1n) (JOIN instance_of designation_for_an_administrative_territorial_entity)))", "predicted_s_expression_fn": "(DISTINCT (AND (JOIN (R country_of_citizenship) (VALUES Charles_Johnson Daniel_Goll\u00e1n)) (JOIN instance_of designation_for_an_administrative_territorial_entity)))", "predicted_s_expression": "(DISTINCT (AND (JOIN (R P27) (VALUES Q1065092 Q19521806)) (JOIN P31 Q15617994)))", "sparql_attempt_count": 2, "actions": "SELECT DISTINCT ?x WHERE { VALUES ?x0 { wd:Q1065092 wd:Q19521806 } . ?x0 wdt:P27 ?x . ?x wdt:P31 wd:Q15617994 . }"}, {"turnID": "770.109.2", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Multiple_Relation", "question": "Which nucleic acid sequences encode Tubulin alpha-3 chain and are found in the taxon Mus musculus ? [CTX]", "answer": "Tuba3a, Tuba3b", "s_expression": "(AND (JOIN P688 Q21989625) (JOIN P31 Q863908) (JOIN P703 Q83310))", "s_expression_cores": ["(AND (JOIN P688 Q21989625) (JOIN P31 Q863908) (JOIN P703 Q83310))"], "sparql_delex": "SELECT ?x WHERE { ?x wdt:P688 wd:Q21989625 . ?x wdt:P31 wd:Q863908 .  ?x wdt:P703 wd:Q83310 .  }", "results": ["Q18255176", "Q18255179"], "coreference_resolved_question": "Which nucleic acid sequences encode Tubulin alpha-3 chain and are found in the taxon Mus musculus?", "s_expression_fn": "(AND (JOIN encodes Tubulin_alpha-3_chain) (JOIN instance_of nucleic_acid_sequence) (JOIN found_in_taxon Mus_musculus))", "predicted_s_expression_fn": "(AND (JOIN encoded_by Tubulin_alpha-3_chain) (JOIN found_in_taxon Mus_musculus) (JOIN instance_of nucleic_acid_sequence))", "predicted_s_expression": "(AND (JOIN (R P702) Q21989625) (JOIN P703 Q83310) (JOIN P31 Q863908))", "sparql_attempt_count": 3, "actions": "SELECT ?x WHERE { wd:Q21989625 wdt:P702 ?x . ?x wdt:P703 wd:Q83310 . ?x wdt:P31 wd:Q863908 . }"}, {"turnID": "770.50.5", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Single_Relation", "question": "Which wars did Andrew Davidson, 2nd Viscount Davidson or Susumu Kimura take part in ? [CTX]", "answer": "World War II", "s_expression": "(OR (AND (JOIN (R P607) Q504398) (JOIN P31 Q198)) (AND (JOIN (R P607) Q7649783) (JOIN P31 Q198)))", "s_expression_cores": ["(AND (JOIN (R P607) Q504398) (JOIN P31 Q198))", "(AND (JOIN (R P607) Q7649783) (JOIN P31 Q198))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q504398 wdt:P607 ?x . ?x wdt:P31 wd:Q198 .  } UNION { wd:Q7649783 wdt:P607 ?x . ?x wdt:P31 wd:Q198 .  } }", "results": ["Q362"], "coreference_resolved_question": "Which wars did Andrew Davidson, 2nd Viscount Davidson or Susumu Kimura take part in?", "s_expression_fn": "(OR (AND (JOIN (R conflict) Andrew_Davidson,_2nd_Viscount_Davidson) (JOIN instance_of war)) (AND (JOIN (R conflict) Susumu_Kimura) (JOIN instance_of war)))", "predicted_s_expression_fn": "(DISTINCT (AND (JOIN (R conflict) (VALUES Andrew_Davidson,_2nd_Viscount_Davidson Susumu_Kimura) (JOIN instance_of war)))", "predicted_s_expression": "", "sparql_attempt_count": 2, "actions": ""}, {"turnID": "770.99.5", "question_type": "Logical Reasoning (All)", "description": "Logical|Difference|Single_Relation", "question": "Which chemical bonds represent molecular function of E3 ubiquitin-protein ligase TRIM38 but not putative zinc-dependent peptidase    O3K_01260 ? [CTX]", "answer": "zinc ion binding", "s_expression": "(DIFF (AND (JOIN (R P680) Q21114635) (JOIN P31 Q44424)) (JOIN (R P680) Q24281769))", "s_expression_cores": ["(AND (JOIN (R P680) Q21114635) (JOIN P31 Q44424))", "(JOIN (R P680) Q24281769)"], "sparql_delex": "SELECT ?x WHERE { wd:Q21114635 wdt:P680 ?x . ?x wdt:P31 wd:Q44424 .  FILTER NOT EXISTS { wd:Q24281769 wdt:P680 ?x .  } }", "results": ["Q14633865"], "coreference_resolved_question": "Which chemical bonds represent molecular function of E3 ubiquitin-protein ligase TRIM38 but not putative zinc-dependent peptidase O3K_01260?", "s_expression_fn": "(DIFF (AND (JOIN (R molecular_function) E3_ubiquitin-protein_ligase_TRIM38) (JOIN instance_of chemical_bond)) (JOIN (R molecular_function) putative_zinc-dependent_peptidase____O3K_01260))", "predicted_s_expression_fn": "(DIFF (AND (JOIN (R molecular_function) E3_ubiquitin-protein_ligase_TRIM38) (JOIN instance_of chemical_bond)) (AND (JOIN (R molecular_function) putative_zinc-dependent_peptidase____O3K_01260) (JOIN instance_of chemical_bond)))", "predicted_s_expression": "", "sparql_attempt_count": 1, "actions": ""}, {"turnID": "770.142.2", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Single_Relation|Incomplete", "question": "Which party does Jane Kennedy belong to ? [SEP] Labour Party [SEP] Which ideologies are the political ideologies of that one ? [SEP] democratic socialism, social democracy [SEP] Or Palestine Liberation Front? [CTX]", "answer": "Marxism\u2013Leninism, democratic socialism, social democracy", "s_expression": "(OR (AND (JOIN (R P1142) Q9630) (JOIN P31 Q7257)) (AND (JOIN (R P1142) Q1422785) (JOIN P31 Q7257)))", "s_expression_cores": ["(AND (JOIN (R P1142) Q9630) (JOIN P31 Q7257))", "(AND (JOIN (R P1142) Q1422785) (JOIN P31 Q7257))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q9630 wdt:P1142 ?x . ?x wdt:P31 wd:Q7257 .  } UNION { wd:Q1422785 wdt:P1142 ?x . ?x wdt:P31 wd:Q7257 .  } }", "results": ["Q211930", "Q189280", "Q121254"], "coreference_resolved_question": "Which ideologies are the political ideologies of Palestine Liberation Front?", "s_expression_fn": "(OR (AND (JOIN (R political_ideology) Labour_Party) (JOIN instance_of ideology)) (AND (JOIN (R political_ideology) Palestine_Liberation_Front) (JOIN instance_of ideology)))", "predicted_s_expression_fn": "(OR (AND (JOIN political_ideology Labour_Party) (JOIN instance_of ideology)) (AND (JOIN political_ideology Palestine_Liberation_Front) (JOIN instance_of ideology)))", "predicted_s_expression": "", "sparql_attempt_count": 2, "actions": ""}, {"turnID": "770.86.8", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Single_Relation", "question": "Which event sequences did Erich Recknagel or Horst Bernhardt take part in ? [CTX]", "answer": "1976 Winter Olympics, 1928 Winter Olympics", "s_expression": "(OR (AND (JOIN (R P1344) Q113367) (JOIN P31 Q15900616)) (AND (JOIN (R P1344) Q826578) (JOIN P31 Q15900616)))", "s_expression_cores": ["(AND (JOIN (R P1344) Q113367) (JOIN P31 Q15900616))", "(AND (JOIN (R P1344) Q826578) (JOIN P31 Q15900616))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q113367 wdt:P1344 ?x . ?x wdt:P31 wd:Q15900616 .  } UNION { wd:Q826578 wdt:P1344 ?x . ?x wdt:P31 wd:Q15900616 .  } }", "results": ["Q9651", "Q9591"], "coreference_resolved_question": "Which event sequences did Erich Recknagel or Horst Bernhardt take part in?", "s_expression_fn": "(OR (AND (JOIN (R participant_in) Erich_Recknagel) (JOIN instance_of event_sequence)) (AND (JOIN (R participant_in) Horst_Bernhardt) (JOIN instance_of event_sequence)))", "predicted_s_expression_fn": "(DISTINCT (AND (JOIN (R participant) (VALUES Erich_Recknagel Horst_Bernhardt)) (JOIN instance_of event_series)))", "predicted_s_expression": "", "sparql_attempt_count": 2, "actions": ""}, {"turnID": "770.159.4", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Multiple_Relation", "question": "Which medias depict male and use paper as material for their making ? [CTX]", "answer": "Portrait of a Young Man", "s_expression": "(AND (JOIN P180 Q6581097) (JOIN P31 Q340169) (JOIN P186 Q11472))", "s_expression_cores": ["(AND (JOIN P180 Q6581097) (JOIN P31 Q340169) (JOIN P186 Q11472))"], "sparql_delex": "SELECT ?x WHERE { ?x wdt:P180 wd:Q6581097 . ?x wdt:P31 wd:Q340169 .  ?x wdt:P186 wd:Q11472 .  }", "results": ["Q20020115"], "coreference_resolved_question": "Which medias depict male and use paper as material for their making?", "s_expression_fn": "(AND (JOIN depicts male) (JOIN instance_of media) (JOIN made_from_material paper))", "predicted_s_expression_fn": "(AND (JOIN (R depicts) (JOIN (R sex_or_gender) male)) (JOIN (R made_from_material) paper) (JOIN instance_of media)))", "predicted_s_expression": "", "sparql_attempt_count": 8, "actions": ""}, {"turnID": "770.159.7", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Single_Relation", "question": "Which political territories do Beau Thompson or Marie Atkins belong to ? [CTX]", "answer": "Canada, Jamaica", "s_expression": "(OR (AND (JOIN (R P27) Q813334) (JOIN P31 Q1048835)) (AND (JOIN (R P27) Q16018044) (JOIN P31 Q1048835)))", "s_expression_cores": ["(AND (JOIN (R P27) Q813334) (JOIN P31 Q1048835))", "(AND (JOIN (R P27) Q16018044) (JOIN P31 Q1048835))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q813334 wdt:P27 ?x . ?x wdt:P31 wd:Q1048835 .  } UNION { wd:Q16018044 wdt:P27 ?x . ?x wdt:P31 wd:Q1048835 .  } }", "results": ["Q16", "Q766"], "coreference_resolved_question": "Which political territories do Beau Thompson or Marie Atkins belong to?", "s_expression_fn": "(OR (AND (JOIN (R country_of_citizenship) Beau_Thompson) (JOIN instance_of political_territorial_entity)) (AND (JOIN (R country_of_citizenship) Marie_Atkins) (JOIN instance_of political_territorial_entity)))", "predicted_s_expression_fn": "(DISTINCT (AND (JOIN (R country_of_citizenship) (VALUES Beau_Thompson Marie_Atkins)) (JOIN instance_of political_territorial_entity)))", "predicted_s_expression": "(DISTINCT (AND (JOIN (R P27) (VALUES Q813334 Q16018044)) (JOIN P31 Q1048835)))", "sparql_attempt_count": 2, "actions": "SELECT DISTINCT ?x WHERE { VALUES ?x0 { wd:Q813334 wd:Q16018044 } . ?x0 wdt:P27 ?x . ?x wdt:P31 wd:Q1048835 . }"}, {"turnID": "770.92.2", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Multiple_Relation", "question": "Which administrative territories are the origins of Vapors or are the countries of citizenship of Gustav Aarestrup ? [CTX]", "answer": "Norway, United States of America", "s_expression": "(OR (AND (JOIN (R P495) Q20814885) (JOIN P31 Q15617994)) (AND (JOIN (R P27) Q5621050) (JOIN P31 Q15617994)))", "s_expression_cores": ["(AND (JOIN (R P495) Q20814885) (JOIN P31 Q15617994))", "(AND (JOIN (R P27) Q5621050) (JOIN P31 Q15617994))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q20814885 wdt:P495 ?x . ?x wdt:P31 wd:Q15617994 .  } UNION { wd:Q5621050 wdt:P27 ?x . ?x wdt:P31 wd:Q15617994 .  } }", "results": ["Q20", "Q30"], "coreference_resolved_question": "Which administrative territories are the origins of Vapors or are the countries of citizenship of Gustav Aarestrup?", "s_expression_fn": "(OR (AND (JOIN (R country_of_origin) Vapors) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (AND (JOIN (R country_of_citizenship) Gustav_Aarestrup) (JOIN instance_of designation_for_an_administrative_territorial_entity)))", "predicted_s_expression_fn": "(DISTINCT (OR (AND (JOIN (R country_of_origin) Vapors) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (AND (JOIN (R country_of_citizenship) Gustav_Aarestrup) (JOIN instance_of designation_for_an_administrative_territorial_entity)))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "770.94.6", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Multiple_Relation", "question": "Which people are a successors of Gerhard III of J\u00fclich or were the teachers of Plato ? [CTX]", "answer": "Some of them are Alexander of J\u00fclich, Hestiaeus of Perinthus, Aristotle, Chaeron of Pellene, Euphraeus, Speusippus, Heraclides of Aenus, Leon of Byzantium, Lastheneia of Mantinea, Timolaus of Cyzicus", "s_expression": "(OR (AND (JOIN (R P40) Q196031) (JOIN P31 Q502895)) (AND (JOIN (R P802) Q859) (JOIN P31 Q502895)))", "s_expression_cores": ["(AND (JOIN (R P40) Q196031) (JOIN P31 Q502895))", "(AND (JOIN (R P802) Q859) (JOIN P31 Q502895))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q196031 wdt:P40 ?x . ?x wdt:P31 wd:Q502895 .  } UNION { wd:Q859 wdt:P802 ?x . ?x wdt:P31 wd:Q502895 .  } }", "results": ["Q3134747", "Q316334", "Q16210063", "Q5732535", "Q428222", "Q185150", "Q3060421", "Q5255306", "Q947007", "Q195692", "Q5385022", "Q555818", "Q288467", "Q5170720", "Q7806914", "Q214121", "Q3271431", "Q14519581", "Q7263937", "Q45013", "Q868", "Q325955"], "coreference_resolved_question": "Which people are successors of Gerhard III of J\u00fclich or were the teachers of Plato?", "s_expression_fn": "(OR (AND (JOIN (R child) Gerhard_III_of_J\u00fclich) (JOIN instance_of common_name)) (AND (JOIN (R student) Plato) (JOIN instance_of common_name)))", "predicted_s_expression_fn": "(OR (AND (JOIN (R successor_of) Gerhard_III_of_J\u00fclich) (JOIN instance_of common_name)) (AND (JOIN (R student_of) Plato) (JOIN instance_of common_name)))", "predicted_s_expression": "", "sparql_attempt_count": 1, "actions": ""}, {"turnID": "770.129.10", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Single_Relation", "question": "Which administrative territories do Ault and Lochwiller belong to ? [CTX]", "answer": "France", "s_expression": "(AND (JOIN (R P17) Q45764) (JOIN P31 Q15617994) (JOIN (R P17) Q21448))", "s_expression_cores": ["(AND (JOIN (R P17) Q45764) (JOIN P31 Q15617994) (JOIN (R P17) Q21448))"], "sparql_delex": "SELECT ?x WHERE { wd:Q45764 wdt:P17 ?x . ?x wdt:P31 wd:Q15617994 .  wd:Q21448 wdt:P17 ?x .  }", "results": ["Q142"], "coreference_resolved_question": "Which administrative territories do Ault and Lochwiller belong to?", "s_expression_fn": "(AND (JOIN (R country) Ault) (JOIN instance_of designation_for_an_administrative_territorial_entity) (JOIN (R country) Lochwiller))", "predicted_s_expression_fn": "(DISTINCT (AND (JOIN (R administrative_territory) (VALUES Ault Lochwiller)) (JOIN instance_of designation_for_an_administrative_territorial_entity))", "predicted_s_expression": "", "sparql_attempt_count": 2, "actions": ""}, {"turnID": "770.129.11", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Multiple_Relation", "question": "Which administrative territories are canton of Ault located in or have a shared border with Verbania ? [CTX]", "answer": "Some of them are San Bernardino Verbano, Baveno, Vignone, Ghiffa, Gravellona Toce, Cossogno, Mergozzo, France, Miazzina, Laveno-Mombello", "s_expression": "(OR (AND (JOIN (R P17) Q1300860) (JOIN P31 Q15617994)) (AND (JOIN (R P47) Q3639) (JOIN P31 Q15617994)))", "s_expression_cores": ["(AND (JOIN (R P17) Q1300860) (JOIN P31 Q15617994))", "(AND (JOIN (R P47) Q3639) (JOIN P31 Q15617994))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q1300860 wdt:P17 ?x . ?x wdt:P31 wd:Q15617994 .  } UNION { wd:Q3639 wdt:P47 ?x . ?x wdt:P31 wd:Q15617994 .  } }", "results": ["Q142", "Q23723", "Q23643", "Q23281", "Q23238", "Q23213", "Q23636", "Q23590", "Q23692", "Q23578", "Q23700", "Q39550", "Q23310"], "coreference_resolved_question": "Which administrative territories are canton of Ault located in or have a shared border with Verbania?", "s_expression_fn": "(OR (AND (JOIN (R country) canton_of_Ault) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (AND (JOIN (R shares_border_with) Verbania) (JOIN instance_of designation_for_an_administrative_territorial_entity)))", "predicted_s_expression_fn": "(OR (AND (JOIN (R country) canton_of_Ault) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (AND (JOIN shares_border_with Verbania) (JOIN instance_of designation_for_an_administrative_territorial_entity)))", "predicted_s_expression": "", "sparql_attempt_count": 1, "actions": ""}, {"turnID": "770.141.4", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Multiple_Relation", "question": "Which political territories do member of the House of Commons of Canada belong to or are Mariana Leky a civilian of ? [CTX]", "answer": "Canada, Germany", "s_expression": "(OR (AND (JOIN (R P17) Q15964890) (JOIN P31 Q1048835)) (AND (JOIN (R P27) Q1896715) (JOIN P31 Q1048835)))", "s_expression_cores": ["(AND (JOIN (R P17) Q15964890) (JOIN P31 Q1048835))", "(AND (JOIN (R P27) Q1896715) (JOIN P31 Q1048835))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q15964890 wdt:P17 ?x . ?x wdt:P31 wd:Q1048835 .  } UNION { wd:Q1896715 wdt:P27 ?x . ?x wdt:P31 wd:Q1048835 .  } }", "results": ["Q16", "Q183"], "coreference_resolved_question": "Which political territories is Mariana Leky a civilian of?", "s_expression_fn": "(OR (AND (JOIN (R country) member_of_the_House_of_Commons_of_Canada) (JOIN instance_of political_territorial_entity)) (AND (JOIN (R country_of_citizenship) Mariana_Leky) (JOIN instance_of political_territorial_entity)))", "predicted_s_expression_fn": "(DISTINCT (OR (AND (JOIN (R country_of_citizenship) (JOIN instance_of member_of_the_House_of_Commons_of_Canada)) (AND (JOIN (R country_of_citizenship) Mariana_Leky) (JOIN instance_of political_territorial_entity))))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "770.119.5", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Multiple_Relation", "question": "Which administrative territories do Rodrigo Reina Liceaga belong to or were Eckhard Erxleben born at ? [CTX]", "answer": "Mexico, Stendal", "s_expression": "(OR (AND (JOIN (R P27) Q19519112) (JOIN P31 Q15617994)) (AND (JOIN (R P19) Q15447339) (JOIN P31 Q15617994)))", "s_expression_cores": ["(AND (JOIN (R P27) Q19519112) (JOIN P31 Q15617994))", "(AND (JOIN (R P19) Q15447339) (JOIN P31 Q15617994))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q19519112 wdt:P27 ?x . ?x wdt:P31 wd:Q15617994 .  } UNION { wd:Q15447339 wdt:P19 ?x . ?x wdt:P31 wd:Q15617994 .  } }", "results": ["Q96", "Q7082"], "coreference_resolved_question": "Which administrative territories do Rodrigo Reina Liceaga belong to or were Eckhard Erxleben born at?", "s_expression_fn": "(OR (AND (JOIN (R country_of_citizenship) Rodrigo_Reina_Liceaga) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (AND (JOIN (R place_of_birth) Eckhard_Erxleben) (JOIN instance_of designation_for_an_administrative_territorial_entity)))", "predicted_s_expression_fn": "(DISTINCT (OR (AND (JOIN (R country_of_citizenship) Rodrigo_Reina_Liceaga) (AND (JOIN (R place_of_birth) Eckhard_Erxleben) (JOIN instance_of designation_for_an_administrative_territorial_entity))))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "770.97.4", "question_type": "Logical Reasoning (All)", "description": "Logical|Difference|Multiple_Relation", "question": "Which people have Watanabe as last name and have not participated in 2012 Summer Olympics ? [CTX]", "answer": "Some of them are Atsushi Watanabe, Masataka Watanabe, Tsutomu Watanabe, Hirofumi Watanabe, Y\u016bki Watanabe, Y\u014dko Watanabe, Hideki Watanabe, Kunio Watanabe, Yuka Watanabe, Makoto Sei Watanabe", "s_expression": "(DIFF (AND (JOIN P734 Q10983405) (JOIN P31 Q502895)) (JOIN P1344 Q8577))", "s_expression_cores": ["(AND (JOIN P734 Q10983405) (JOIN P31 Q502895))", "(JOIN P1344 Q8577)"], "sparql_delex": "SELECT ?x WHERE { ?x wdt:P734 wd:Q10983405 . ?x wdt:P31 wd:Q502895 .  FILTER NOT EXISTS { ?x wdt:P1344 wd:Q8577 .  } }", "results": ["Q7463595", "Q5384468", "Q3080610", "Q17217334", "Q11562348", "Q11562349", "Q11562346", "Q11562342", "Q11562343", "Q11562341", "Q11562589", "Q11562461", "Q11562451", "Q11562585", "Q11562587", "Q11562582", "Q11562583", "Q15304382", "Q2658543", "Q15402036", "Q11562665", "Q11562788", "Q11562789", "Q11562786", "Q11562784", "Q11562782", "Q11562783", "Q6381584", "Q11562781", "Q11562827", "Q11562826", "Q11562825", "Q11562822", "Q11562820", "Q11561985", "Q3571982", "Q11562662", "Q11562748", "Q187662", "Q17217750", "Q17217756", "Q900656", "Q17217697", "Q11562738", "Q1658535", "Q11562732", "Q11562731", "Q11562730", "Q11562737", "Q1185883", "Q11562735", "Q11562734", "Q11562080", "Q11562082", "Q11562085", "Q11562084", "Q11562087", "Q11562086", "Q11562089", "Q17230844", "Q17230847", "Q17230846", "Q17230840", "Q17230843", "Q11562166", "Q11562167", "Q11562163", "Q11562249", "Q11562161", "Q11562245", "Q1350842", "Q17217623", "Q11562241", "Q11562240", "Q4260279", "Q346527", "Q17217475", "Q11562069", "Q17217470", "Q7820335", "Q11562068", "Q11562130", "Q5018776", "Q6139365", "Q11562608", "Q11562606", "Q11562605", "Q11562602", "Q11562601", "Q11562600", "Q11562063", "Q11562684", "Q11562012", "Q11562011", "Q1074159", "Q3247973", "Q17217372", "Q1153899", "Q11562423", "Q11562422", "Q11562421", "Q11562420", "Q11562427", "Q11562424", "Q11562540", "Q11562541", "Q11562429", "Q11562428", "Q11562544", "Q11562545", "Q5366641", "Q7972984", "Q3302801", "Q4701198", "Q11562722", "Q11562723", "Q3247778", "Q7426423", "Q2557715", "Q11562290", "Q329588", "Q11562108", "Q5965018", "Q7485283", "Q17217305", "Q1389740", "Q11562336", "Q11562335", "Q11562334", "Q11562333", "Q11562332", "Q11562339", "Q9097640", "Q2552436", "Q768574", "Q16658405", "Q17217658", "Q11562031", "Q11562399", "Q11562209", "Q11562208", "Q11562203", "Q11562202", "Q11562201", "Q11562200", "Q11562205", "Q11561993", "Q6875103", "Q5962483", "Q2757691", "Q16092072", "Q11562649", "Q11562648", "Q11562780", "Q11562259", "Q11562643", "Q11562642", "Q11562640", "Q11562647", "Q11562646", "Q11562645", "Q11562644", "Q321776", "Q11562392", "Q11562765", "Q11562769", "Q17217779", "Q11562057", "Q11562054", "Q11562055", "Q9059699", "Q11562053", "Q6381485", "Q11562051", "Q11562117", "Q6381489", "Q11562112", "Q11562058", "Q11562110", "Q6123669", "Q11562506", "Q866333", "Q11562502", "Q11562503", "Q846530", "Q11562672", "Q15223151", "Q17217438", "Q17232993", "Q17217431", "Q648285", "Q11562180", "Q11562373", "Q11562370", "Q17217341", "Q11562376", "Q11562374", "Q11562470", "Q11562379", "Q11562378", "Q17217348", "Q11562476", "Q11562477", "Q653426", "Q11562570", "Q11562573", "Q17217557", "Q11562574", "Q11562577", "Q11562576", "Q11562830", "Q11562831", "Q1185564", "Q9307687", "Q5384952", "Q7850215", "Q3571993", "Q11562485", "Q11562484", "Q11562487", "Q6582069", "Q11562481", "Q11562480", "Q11562482", "Q11413923", "Q17217764", "Q11562611", "Q2522024", "Q17217683", "Q11562687", "Q11562686", "Q11562685", "Q11562613", "Q11562683", "Q6538219", "Q11562681", "Q11562680", "Q11562724", "Q7972986", "Q11562726", "Q11562727", "Q11562720", "Q11562721", "Q11562689", "Q11562688", "Q11562092", "Q11562091", "Q11562096", "Q467679", "Q11562153", "Q11562152", "Q11562150", "Q11562157", "Q11562156", "Q17230850", "Q2708421", "Q11562250", "Q11562751", "Q11562252", "Q11562254", "Q11562256", "Q11562750", "Q11562391", "Q11562390", "Q4352284", "Q11562394", "Q11562397", "Q17217465", "Q17217862", "Q11562357", "Q11562610", "Q11562758", "Q11562612", "Q545625", "Q11562614", "Q4701116", "Q11562616", "Q11562618", "Q11562619", "Q11561976", "Q11562752", "Q11562755", "Q11562754", "Q11562757", "Q11562350", "Q11562029", "Q11562028", "Q11562026", "Q11562025", "Q15205820", "Q11562021", "Q11562020", "Q17217380", "Q7385299", "Q15197141", "Q9074845", "Q3548545", "Q2601703", "Q11562435", "Q11562437", "Q11562539", "Q11562431", "Q11562432", "Q11562537", "Q11562536", "Q11562438", "Q11562533", "Q11562532", "Q11562364", "Q11081093", "Q3243537", "Q17217813", "Q11562361", "Q1064833", "Q4924564", "Q11562283", "Q11562282", "Q11562281", "Q11562280", "Q11562286", "Q11562285", "Q11562284", "Q11562320", "Q11562321", "Q6699915", "Q11562324", "Q11562325", "Q11562326", "Q11562327", "Q11562441", "Q11562444", "Q11562447", "Q11562446", "Q11562448", "Q11562736", "Q3735517", "Q3299325", "Q10863038", "Q275844", "Q11562050", "Q17687845", "Q11562678", "Q11562753", "Q7504421", "Q11562803", "Q11562802", "Q11562805", "Q11562804", "Q11562806", "Q11562329", "Q11562196", "Q6352438", "Q11562193", "Q11562192", "Q6282641", "Q11562190", "Q11562215", "Q11562216", "Q11562217", "Q11562211", "Q11562212", "Q11562198", "Q7850052", "Q49960", "Q561077", "Q11562538", "Q706671", "Q11561974", "Q2223759", "Q11562658", "Q11562659", "Q11562654", "Q11562656", "Q11562650", "Q11562651", "Q11562653", "Q11562715", "Q11562714", "Q11562717", "Q11562716", "Q11562711", "Q11562710", "Q11562713", "Q11562712", "Q9143435", "Q11562062", "Q11562061", "Q11562060", "Q11562719", "Q11562066", "Q11562064", "Q11562269", "Q11562102", "Q11562104", "Q11562105", "Q11562106", "Q11562107", "Q11562261", "Q11562260", "Q11562263", "Q11562262", "Q11562265", "Q11562266", "Q17217515", "Q17217450", "Q17361592", "Q11562628", "Q6143081", "Q11562620", "Q11562622", "Q11562625", "Q11562624", "Q11562289", "Q11562626", "Q17217855", "Q17217584", "Q11562168", "Q17217852", "Q17217427", "Q11562664", "Q7674390", "Q7461767", "Q3275415", "Q18011711", "Q11562365", "Q11562366", "Q17217355", "Q11562360", "Q11562408", "Q11562363", "Q11562404", "Q11562407", "Q11562406", "Q11562368", "Q11562400", "Q11562403", "Q11562402", "Q11562567", "Q11562564", "Q7461790", "Q11562568", "Q11562569", "Q9059715", "Q10729526", "Q10729527", "Q5476607", "Q11562310", "Q11562313", "Q361715", "Q11562314", "Q11562317", "Q11562316", "Q11562319", "Q11562318", "Q9307595", "Q11562322", "Q6381514", "Q11562495", "Q11562492", "Q11562493", "Q11562699", "Q17217676", "Q11562690", "Q11562691", "Q11562692", "Q11562694", "Q11562695", "Q11562696", "Q11562697", "Q6538208", "Q11562148", "Q11562149", "Q11562144", "Q11562145", "Q11562146", "Q11562147", "Q11562140", "Q944093", "Q11562142", "Q9307621", "Q11562225", "Q11562224", "Q11562226", "Q17217602", "Q11562222", "Q11562380", "Q11562381", "Q11562386", "Q11562228", "Q11562384", "Q7506128", "Q17217418", "Q2654022", "Q2342402", "Q11561981", "Q11561980", "Q11561983", "Q11562661", "Q11562663", "Q11561986", "Q11562742", "Q11562743", "Q11562169", "Q11562744", "Q11562139", "Q8055984", "Q11562032", "Q11562035", "Q11562037", "Q11562131", "Q11562039", "Q11562133", "Q11562132", "Q11562134", "Q11562136", "Q17217527", "Q4260732", "Q16660680", "Q11562528", "Q11562529", "Q11562526", "Q11562527", "Q11562525", "Q11562522", "Q11562523", "Q11562520", "Q11562521", "Q6143071", "Q3278086", "Q3566605", "Q17217314", "Q3198344", "Q17492383", "Q3482794", "Q618978", "Q8060769", "Q11561990", "Q11562294", "Q11562296", "Q11562297", "Q11562359", "Q11562291", "Q11562292", "Q11562293", "Q11562355", "Q11562354", "Q17217325", "Q14536684", "Q11562351", "Q11562299", "Q11562508", "Q11562352", "Q2814400", "Q11562453", "Q11562450", "Q11562598", "Q11562456", "Q11562457", "Q11562454", "Q11562593", "Q11562592", "Q11562591", "Q11562590", "Q11562596", "Q11562595", "Q11562594", "Q11562014", "Q11562048", "Q11562799", "Q11562798", "Q17687852", "Q11562797", "Q3130609", "Q11562791", "Q11562793", "Q11562792", "Q11562188", "Q11562189", "Q11562811", "Q11562817", "Q11562815", "Q7461742", "Q11562181", "Q11562182", "Q11562819", "Q11562185", "Q9307708", "Q11562047", "Q19566397", "Q2689524", "Q11562571", "Q17217742", "Q982153", "Q11562707", "Q17217771", "Q11562572", "Q2072697", "Q4700621", "Q11562079", "Q11562706", "Q11562548", "Q11562704", "Q11562705", "Q11562078", "Q11562703", "Q11562700", "Q11562701", "Q11562074", "Q17230831", "Q11562076", "Q17230833", "Q17230835", "Q17230836", "Q11562709", "Q11562175", "Q11562174", "Q11562177", "Q11562279", "Q17217732", "Q11562172", "Q3785961", "Q11562273", "Q11562270", "Q11562271", "Q11562179", "Q11562277", "Q11562274", "Q17217296", "Q11562077", "Q17217443", "Q375027", "Q11562071", "Q2522609", "Q11562072", "Q11561991", "Q11562638", "Q11562639", "Q11562632", "Q11562633", "Q11562630", "Q11562631", "Q11562637", "Q11562009", "Q11562176", "Q11562000", "Q11562003", "Q11562007", "Q11562173", "Q17217365", "Q10968450", "Q11562278", "Q11562418", "Q11562419", "Q11562416", "Q11562417", "Q11562414", "Q11562415", "Q11562412", "Q11562413", "Q11562410", "Q11562557", "Q11562554", "Q11562551", "Q11562550", "Q11562276", "Q11562558", "Q4385243", "Q16336068", "Q11562141", "Q845433", "Q11561995", "Q6782726", "Q11562302", "Q11562300", "Q11562307", "Q11562304", "Q11562305", "Q11562308", "Q11562615", "Q17217310", "Q17230838", "Q3547262", "Q11562197", "Q11562195", "Q247087", "Q3566599", "Q18276984", "Q9307732", "Q11562387", "Q11562237", "Q11562235", "Q11562232", "Q11562233", "Q11562231", "Q6322270", "Q11562238", "Q6139977", "Q5250728", "Q515427", "Q723867", "Q17217792", "Q211099", "Q11562676", "Q11562677", "Q11562674", "Q11562675", "Q11561996", "Q11561994", "Q11562778", "Q11561998", "Q11562671", "Q11562771", "Q11562679", "Q7485279", "Q11562128", "Q11562046", "Q11562041", "Q1052513", "Q11562120", "Q11562126", "Q11562127", "Q11562124", "Q11562125", "Q17217533", "Q2595975", "Q11562511", "Q11562510", "Q11562516", "Q11562514", "Q3950796", "Q11562519", "Q11562518", "Q11562667", "Q1396833", "Q17217837", "Q1092833", "Q736336"], "coreference_resolved_question": "Which people have Watanabe as last name and have not participated in 2012 Summer Olympics?", "s_expression_fn": "(DIFF (AND (JOIN family_name Watanabe) (JOIN instance_of common_name)) (JOIN participant_in 2012_Summer_Olympics))", "predicted_s_expression_fn": "(DIFF (AND (JOIN (R family_name) Watanabe) (JOIN instance_of common_name)) (AND (JOIN sports_discipline_competed_in 2012_Summer_Olympics) (JOIN instance_of common_name)))", "predicted_s_expression": "", "sparql_attempt_count": 2, "actions": ""}, {"turnID": "770.45.5", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Single_Relation|Incomplete", "question": "Where was Fredericus Franciscus Steenberghe born ? [SEP] Ghent [SEP] Which person dwells at that administrative territory ? [SEP] Siegfried Bracke [SEP] Which sex does that person belong to ? [SEP] male [SEP] Or Silda Cordoliani? [CTX]", "answer": "male, female", "s_expression": "(OR (AND (JOIN (R P21) Q2064794) (JOIN P31 Q290)) (AND (JOIN (R P21) Q6128299) (JOIN P31 Q290)))", "s_expression_cores": ["(AND (JOIN (R P21) Q2064794) (JOIN P31 Q290))", "(AND (JOIN (R P21) Q6128299) (JOIN P31 Q290))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q2064794 wdt:P21 ?x . ?x wdt:P31 wd:Q290 .  } UNION { wd:Q6128299 wdt:P21 ?x . ?x wdt:P31 wd:Q290 .  } }", "results": ["Q6581097", "Q6581072"], "coreference_resolved_question": "Which sex does Silda Cordoliani belong to?", "s_expression_fn": "(OR (AND (JOIN (R sex_or_gender) Siegfried_Bracke) (JOIN instance_of sex)) (AND (JOIN (R sex_or_gender) Silda_Cordoliani) (JOIN instance_of sex)))", "predicted_s_expression_fn": "(AND (JOIN (R sex_or_gender) Silda_Cordoliani) (JOIN instance_of sex))", "predicted_s_expression": "(AND (JOIN (R P21) Q6128299) (JOIN P31 Q290))", "sparql_attempt_count": 2, "actions": "SELECT ?x WHERE { wd:Q6128299 wdt:P21 ?x . ?x wdt:P31 wd:Q290 . }"}, {"turnID": "770.81.7", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Multiple_Relation", "question": "Which french administrative divisions were Jules-Adolphe Chauvet born in or share border with Vestric-et-Candiac ? [CTX]", "answer": "P\u00e9ronne, Beauvoisin, Verg\u00e8ze, Vauvert, Uchaud, Le Cailar, Boissi\u00e8res", "s_expression": "(OR (AND (JOIN (R P19) Q3188317) (JOIN P31 Q20667921)) (AND (JOIN (R P47) Q859903) (JOIN P31 Q20667921)))", "s_expression_cores": ["(AND (JOIN (R P19) Q3188317) (JOIN P31 Q20667921))", "(AND (JOIN (R P47) Q859903) (JOIN P31 Q20667921))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q3188317 wdt:P19 ?x . ?x wdt:P31 wd:Q20667921 .  } UNION { wd:Q859903 wdt:P47 ?x . ?x wdt:P31 wd:Q20667921 .  } }", "results": ["Q217768", "Q274333", "Q269225", "Q268025", "Q243963", "Q844798", "Q749093"], "coreference_resolved_question": "Which french administrative divisions were Jules-Adolphe Chauvet born in or share border with Vestric-et-Candiac?", "s_expression_fn": "(OR (AND (JOIN (R place_of_birth) Jules-Adolphe_Chauvet) (JOIN instance_of type_of_french_administrative_division)) (AND (JOIN (R shares_border_with) Vestric-et-Candiac) (JOIN instance_of type_of_french_administrative_division)))", "predicted_s_expression_fn": "(OR (AND (JOIN place_of_birth Jules-Adolphe_Chauvet) (JOIN instance_of french_administrative_division)) (AND (JOIN shares_border_with Vestric-et-Candiac) (JOIN instance_of french_administrative_division)))", "predicted_s_expression": "", "sparql_attempt_count": 1, "actions": ""}, {"turnID": "770.62.2", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Single_Relation|Incomplete", "question": "Which taxon is Protein S-Myc found in ? [SEP] Mus musculus [SEP] What is the gene that encodes that nutrient ? [SEP] Mycs [SEP] Or Ribosomal RNA processing protein 1 homolog A? [CTX]", "answer": "RRP1, Mycs", "s_expression": "(OR (AND (JOIN (R P702) Q21436545) (JOIN P31 Q863908)) (AND (JOIN (R P702) Q21127113) (JOIN P31 Q863908)))", "s_expression_cores": ["(AND (JOIN (R P702) Q21436545) (JOIN P31 Q863908))", "(AND (JOIN (R P702) Q21127113) (JOIN P31 Q863908))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q21436545 wdt:P702 ?x . ?x wdt:P31 wd:Q863908 .  } UNION { wd:Q21127113 wdt:P702 ?x . ?x wdt:P31 wd:Q863908 .  } }", "results": ["Q18033116", "Q18252512"], "coreference_resolved_question": "What is the gene that encodes Ribosomal RNA processing protein 1 homolog A?", "s_expression_fn": "(OR (AND (JOIN (R encoded_by) Protein_S-Myc) (JOIN instance_of nucleic_acid_sequence)) (AND (JOIN (R encoded_by) Ribosomal_RNA_processing_protein_1_homolog_A) (JOIN instance_of nucleic_acid_sequence)))", "predicted_s_expression_fn": "(OR (JOIN encoded_by Mycs) (JOIN encoded_by Ribosomal_RNA_processing_protein_1_homolog_A)", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "770.121.8", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Multiple_Relation", "question": "Which administrative territories have New York City as their county seat or are Villa Contarini a part of ? [CTX]", "answer": "United States of America, Italy", "s_expression": "(OR (AND (JOIN (R P1376) Q60) (JOIN P31 Q15617994)) (AND (JOIN (R P17) Q4011905) (JOIN P31 Q15617994)))", "s_expression_cores": ["(AND (JOIN (R P1376) Q60) (JOIN P31 Q15617994))", "(AND (JOIN (R P17) Q4011905) (JOIN P31 Q15617994))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q60 wdt:P1376 ?x . ?x wdt:P31 wd:Q15617994 .  } UNION { wd:Q4011905 wdt:P17 ?x . ?x wdt:P31 wd:Q15617994 .  } }", "results": ["Q30", "Q38"], "coreference_resolved_question": "Which administrative territories have New York City as their county seat or are Villa Contarini a part of?", "s_expression_fn": "(OR (AND (JOIN (R capital_of) New_York_City) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (AND (JOIN (R country) Villa_Contarini) (JOIN instance_of designation_for_an_administrative_territorial_entity)))", "predicted_s_expression_fn": "(OR (AND (JOIN capital_of New_York_City) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (AND (JOIN (R part_of) Villa_Contarini) (JOIN instance_of designation_for_an_administrative_territorial_entity))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "770.58.3", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Single_Relation", "question": "Which occupations are the professions of Henry Westmoreland and J\u00fcrgen Klopp ? [CTX]", "answer": "association football player", "s_expression": "(AND (JOIN (R P106) Q5730034) (JOIN P31 Q12737077) (JOIN (R P106) Q83106))", "s_expression_cores": ["(AND (JOIN (R P106) Q5730034) (JOIN P31 Q12737077) (JOIN (R P106) Q83106))"], "sparql_delex": "SELECT ?x WHERE { wd:Q5730034 wdt:P106 ?x . ?x wdt:P31 wd:Q12737077 .  wd:Q83106 wdt:P106 ?x .  }", "results": ["Q937857"], "coreference_resolved_question": "Which occupations are the professions of Henry Westmoreland and J\u00fcrgen Klopp?", "s_expression_fn": "(AND (JOIN (R occupation) Henry_Westmoreland) (JOIN instance_of occupation) (JOIN (R occupation) J\u00fcrgen_Klopp))", "predicted_s_expression_fn": "(DISTINCT (AND (JOIN (R occupation) (VALUES Henry_Westmoreland J\u00fcrgen_Klopp)) (JOIN instance_of profession)))", "predicted_s_expression": "(DISTINCT (AND (JOIN (R P106) (VALUES Q5730034 Q83106)) (JOIN P31 Q12737077)))", "sparql_attempt_count": 2, "actions": "SELECT DISTINCT ?x WHERE { VALUES ?x0 { wd:Q5730034 wd:Q83106 } . ?x0 wdt:P106 ?x . ?x wdt:P31 wd:Q12737077 . }"}, {"turnID": "770.150.2", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Single_Relation|Incomplete", "question": "What is Diyan Donchev a member of ? [SEP] Bulgaria national football team [SEP] Which sport did that person participate in ? [SEP] association football [SEP] And also Damien Da Silva [CTX]", "answer": "association football", "s_expression": "(AND (JOIN (R P641) Q5285022) (JOIN P31 Q349) (JOIN (R P641) Q5212408))", "s_expression_cores": ["(AND (JOIN (R P641) Q5285022) (JOIN P31 Q349) (JOIN (R P641) Q5212408))"], "sparql_delex": "SELECT ?x WHERE { wd:Q5285022 wdt:P641 ?x . ?x wdt:P31 wd:Q349 .  wd:Q5212408 wdt:P641 ?x .  }", "results": ["Q2736"], "coreference_resolved_question": "Which sport did Damien Da Silva participate in?", "s_expression_fn": "(AND (JOIN (R sport) Diyan_Donchev) (JOIN instance_of sport) (JOIN (R sport) Damien_Da_Silva))", "predicted_s_expression_fn": "(AND (JOIN sports_discipline_competed_in association_football) (JOIN instance_of common_name) (JOIN sports_discipline_competed_in Damien_Da_Silva))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "82.127.10", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Multiple_Relation", "question": "Which people were awarded with Knight of the Order of the Golden Fleece and are a male ? [CTX]", "answer": "Some of them are Ludwig I of Bavaria, Javier Solana, Ottavio Farnese, Duke of Parma, Albrecht, Duke of Bavaria, John of Austria, Jos\u00e9 Mo\u00f1ino, 1st Count of Floridablanca, Charles Albert of Sardinia, Louis XV of France, Miguel Jos\u00e9 de Azanza, Duke of Santa Fe, Albert II", "s_expression": "(AND (JOIN P166 Q15117228) (JOIN P31 Q502895) (JOIN P21 Q6581097))", "s_expression_cores": ["(AND (JOIN P166 Q15117228) (JOIN P31 Q502895) (JOIN P21 Q6581097))"], "sparql_delex": "SELECT ?x WHERE { ?x wdt:P166 wd:Q15117228 . ?x wdt:P31 wd:Q502895 .  ?x wdt:P21 wd:Q6581097 .  }", "results": ["Q399216", "Q7184817", "Q3081891", "Q2850743", "Q151321", "Q2551465", "Q2287910", "Q153500", "Q3114825", "Q480455", "Q1149737", "Q1517581", "Q5274703", "Q319764", "Q158232", "Q2046768", "Q3129915", "Q553046", "Q1694751", "Q1588031", "Q1694755", "Q37979", "Q83171", "Q568849", "Q48547", "Q721509", "Q63042", "Q2351059", "Q3372453", "Q811186", "Q328245", "Q45195", "Q7758", "Q991813", "Q6301362", "Q309605", "Q6300387", "Q7750", "Q152923", "Q3040498", "Q49767", "Q152099", "Q587967", "Q17142", "Q548543", "Q150599", "Q1857969", "Q1308299", "Q63612", "Q63611", "Q98017", "Q316827", "Q78578", "Q324754", "Q1243898", "Q154927", "Q329", "Q45068", "Q78673", "Q324648", "Q93373", "Q321581", "Q93371", "Q959645", "Q64965", "Q112039", "Q589374", "Q324453", "Q134817", "Q452240", "Q3198365", "Q570195", "Q222050", "Q6753010", "Q302561", "Q2617641", "Q1677724", "Q455392", "Q151667", "Q2325634", "Q53444", "Q2893913", "Q1967151", "Q157107", "Q150611", "Q157103", "Q939", "Q695489", "Q369210", "Q3745218", "Q506415", "Q165674", "Q372740", "Q158838", "Q841145", "Q112400", "Q315203", "Q181333", "Q727398", "Q313169", "Q455890", "Q348183", "Q352200", "Q86974", "Q356522", "Q557223", "Q313167", "Q152480", "Q3184168", "Q468968", "Q84705", "Q442587", "Q155596", "Q151087", "Q475967", "Q474802", "Q676301", "Q206223", "Q44825", "Q104235", "Q2394118", "Q2458000", "Q150966", "Q964355", "Q459401", "Q296064", "Q608679", "Q2603694", "Q168657", "Q61869", "Q15988", "Q711149", "Q156521", "Q310807", "Q518879", "Q701087", "Q6103352", "Q296083", "Q2343300", "Q155463", "Q57538", "Q112066", "Q57428", "Q80847", "Q150494", "Q76080", "Q506600", "Q78633", "Q473847", "Q2190692", "Q2654769", "Q76736", "Q719590", "Q187149", "Q855252", "Q313426", "Q3031141", "Q516283", "Q1060355", "Q767582", "Q152245", "Q157324", "Q58755", "Q12967", "Q44319", "Q58023", "Q2397415", "Q318089", "Q2958020", "Q719626", "Q154287", "Q60610", "Q150862", "Q61214", "Q517", "Q150642", "Q66533", "Q2762034", "Q2483142", "Q57628", "Q57621", "Q1346624", "Q153688", "Q444290", "Q160341", "Q45662", "Q5738", "Q585884", "Q701103", "Q6299717", "Q93427", "Q156175", "Q205779", "Q112108", "Q1465751", "Q1339093", "Q158874", "Q310146", "Q464726", "Q57454", "Q473543", "Q52940", "Q20875", "Q57440", "Q1441744", "Q310790", "Q44961", "Q44039", "Q510334", "Q511206", "Q78591", "Q464657", "Q150726", "Q154444", "Q78596", "Q32500", "Q120180", "Q174231", "Q154855", "Q359936", "Q51068", "Q454013", "Q84192", "Q3930427", "Q1710673", "Q552625", "Q78151", "Q2397608", "Q57841", "Q155394", "Q442756", "Q2736342", "Q155002", "Q1442231", "Q462892", "Q3052519", "Q155004", "Q169502", "Q4760194", "Q60438", "Q155545", "Q3392057", "Q551974", "Q781656", "Q461667", "Q8078610", "Q317929", "Q6292611", "Q597865", "Q111975", "Q37134", "Q702602", "Q71678", "Q7159980", "Q43063", "Q1332391", "Q560021", "Q611180", "Q336901", "Q60721", "Q60727", "Q468925", "Q437093", "Q264258", "Q696614", "Q40519", "Q112096", "Q38370", "Q2016270", "Q1406351", "Q60657", "Q78560", "Q526028", "Q697963", "Q2537215", "Q296023", "Q5129095", "Q822892", "Q700564", "Q1943652", "Q83761", "Q79080", "Q434529", "Q581481", "Q156617", "Q981450", "Q57146", "Q322330", "Q555434", "Q299378", "Q502919", "Q183579", "Q2957909", "Q57483", "Q191321", "Q153819", "Q163443", "Q152157", "Q698430", "Q1826184", "Q454337", "Q215859", "Q560806", "Q742662", "Q1854324", "Q3370289", "Q112870", "Q662588", "Q284565", "Q713664", "Q715048", "Q52878", "Q179728", "Q454297", "Q474571", "Q310528", "Q44893", "Q2457294", "Q170467", "Q57320", "Q1146008", "Q34464", "Q2679087", "Q151773", "Q517182", "Q137814", "Q936744", "Q931474", "Q480138", "Q526803", "Q94393", "Q151173", "Q158143", "Q312304", "Q3821685", "Q503991", "Q329803", "Q379479", "Q562934", "Q44785", "Q569405", "Q212457", "Q557419", "Q312903", "Q191231", "Q552175", "Q52924", "Q445056", "Q158654", "Q193157", "Q129857", "Q40787", "Q52926", "Q553123", "Q3754488", "Q296076", "Q44393", "Q555033", "Q5274764", "Q477953", "Q448174", "Q446711", "Q3911", "Q773570", "Q554961", "Q888204", "Q57508", "Q216789", "Q60113", "Q57507", "Q1379524", "Q5444887", "Q557463", "Q8442", "Q132548", "Q181261", "Q935822", "Q696039", "Q52890", "Q435844", "Q62553", "Q1648217", "Q157092", "Q7732", "Q5041634", "Q296555", "Q2253617", "Q154912", "Q157098", "Q343621", "Q3263400", "Q130586", "Q452200", "Q118703", "Q100205", "Q6729457", "Q1774732", "Q131691", "Q78454", "Q221549", "Q6170413", "Q768366", "Q32347", "Q78519", "Q89422", "Q700105", "Q78515", "Q549462", "Q36234", "Q57298", "Q72247", "Q3806547", "Q3059672", "Q3374032", "Q152756", "Q363992", "Q590227", "Q2677", "Q151120", "Q537073", "Q7159749", "Q599528", "Q467021", "Q351161", "Q327758", "Q2587661", "Q168691", "Q150575", "Q3914865", "Q2276154", "Q44747", "Q77067", "Q1229886", "Q691402", "Q327156", "Q3298921", "Q1848146", "Q2616821", "Q558747", "Q647505", "Q78853", "Q445399", "Q3659979", "Q3101189", "Q51056", "Q1127464", "Q2679370", "Q53437", "Q52928", "Q52925", "Q223293", "Q52927", "Q159817", "Q53438", "Q503811", "Q2831850", "Q2058139", "Q3659992", "Q2608613", "Q952446", "Q54056", "Q54054", "Q312305", "Q2857114", "Q76555", "Q3062292", "Q156774", "Q220030", "Q67362", "Q942292", "Q15193", "Q130834", "Q7159632", "Q62168", "Q2728663", "Q541365", "Q328233", "Q515741", "Q157052", "Q44361", "Q7771", "Q278954", "Q95815", "Q930199", "Q84201", "Q442497", "Q316110", "Q151075", "Q371731", "Q450181", "Q153545", "Q58600", "Q77787", "Q2023833", "Q319954", "Q320659", "Q940083", "Q655687", "Q315513", "Q698123", "Q327976", "Q76343", "Q146906", "Q645325", "Q442085", "Q3754543", "Q239337", "Q455008", "Q689523", "Q2222177", "Q61786", "Q160499", "Q84470", "Q12860", "Q85472", "Q2102021", "Q61015", "Q163755", "Q151305", "Q150665", "Q434061", "Q312683", "Q562489", "Q595088", "Q3052915", "Q588037", "Q36174", "Q269412", "Q276578", "Q317016", "Q967903", "Q5290377", "Q2381763", "Q712085", "Q420319", "Q112866", "Q364723", "Q3749940", "Q437838", "Q2408326", "Q506533", "Q76508", "Q251502", "Q566861", "Q170293", "Q16004", "Q1397935", "Q34479", "Q1344054", "Q128668", "Q712502", "Q3438519", "Q62263", "Q689289", "Q3262391", "Q150586", "Q670383", "Q66561", "Q654855", "Q1464104", "Q3164238", "Q698910", "Q191045", "Q156949", "Q1028786", "Q522120", "Q60743", "Q1709737", "Q546082", "Q214367", "Q711836", "Q708874", "Q157781", "Q1333222", "Q719814", "Q1932165", "Q3756709", "Q703780", "Q543711", "Q618547", "Q458688", "Q89685", "Q78535", "Q1382690", "Q60514", "Q93362", "Q65030", "Q85290", "Q134309", "Q314196", "Q1694741", "Q369973", "Q321214", "Q161106", "Q3837032", "Q433924", "Q94941", "Q18363", "Q6844626", "Q550766", "Q7726", "Q538207", "Q1350692", "Q7159675", "Q940626", "Q54041", "Q332717", "Q507964", "Q3158215", "Q2436272", "Q983302", "Q2575404", "Q57569", "Q872942", "Q4714590", "Q151377", "Q1566933", "Q213766", "Q700504", "Q588143", "Q2303777", "Q443481", "Q4255270", "Q216259", "Q57287", "Q314577", "Q327020", "Q4785876", "Q125649", "Q2667", "Q88851", "Q163508", "Q2630473", "Q3166573", "Q312819", "Q279924", "Q695234", "Q942153", "Q927020", "Q2011824", "Q1133654", "Q4765703", "Q2290508", "Q215873", "Q154460", "Q154308", "Q60504", "Q2079957", "Q60505", "Q1832646", "Q1241410", "Q969836", "Q9017077", "Q518846", "Q62594", "Q437001", "Q69450", "Q2264967", "Q19943", "Q287441", "Q161389", "Q2545370", "Q2174296", "Q3660058", "Q7729", "Q351149", "Q151500", "Q463728", "Q2581271", "Q5483371", "Q697511", "Q2284846", "Q2344788", "Q921982", "Q944012", "Q479510", "Q318091", "Q2624604", "Q594286", "Q673586", "Q6301364", "Q27357", "Q1262756", "Q586439", "Q506704", "Q32432", "Q160558", "Q130734", "Q3383254", "Q69420", "Q78635", "Q443417", "Q57165", "Q360469", "Q1451244", "Q984423", "Q526743", "Q156048", "Q152428", "Q7184767", "Q8078605", "Q9017270", "Q697609", "Q185551", "Q79019", "Q3427899", "Q2957952", "Q570237", "Q183226", "Q675151", "Q821209", "Q607599", "Q343990", "Q78542", "Q2701191", "Q3133945", "Q2603166", "Q379779", "Q44530", "Q732892", "Q166023", "Q221263", "Q560758", "Q5479509", "Q1947966", "Q2603194", "Q4228448", "Q12976", "Q12974", "Q2833875", "Q12973", "Q376707", "Q12971", "Q651457", "Q150652", "Q1670893", "Q57263", "Q701932", "Q313857", "Q6299799", "Q461630", "Q959518", "Q57180", "Q191974", "Q186256", "Q1357841", "Q1236352", "Q632732", "Q3379568", "Q75817", "Q1542145", "Q63653", "Q156659", "Q66551", "Q4995309", "Q1748721", "Q506521", "Q2959458", "Q675493", "Q2607003", "Q690327", "Q445106", "Q112695", "Q289149", "Q7721", "Q57986", "Q7738", "Q630635", "Q3034228", "Q3619813", "Q312325", "Q1758863", "Q312328"], "coreference_resolved_question": "Which people were awarded with Knight of the Order of the Golden Fleece and are a male?", "s_expression_fn": "(AND (JOIN award_received Knight_of_the_Order_of_the_Golden_Fleece) (JOIN instance_of common_name) (JOIN sex_or_gender male))", "predicted_s_expression_fn": "(AND (JOIN award_received Knight_of_the_Order_of_the_Golden_Fleece) (JOIN sex_or_gender male) (JOIN instance_of common_name))", "predicted_s_expression": "(AND (JOIN P166 Q15117228) (JOIN P21 Q6581097) (JOIN P31 Q502895))", "sparql_attempt_count": 2, "actions": "SELECT ?x WHERE { ?x wdt:P166 wd:Q15117228 . ?x wdt:P21 wd:Q6581097 . ?x wdt:P31 wd:Q502895 . }"}, {"turnID": "82.9.6", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Single_Relation", "question": "Which political territories do chief executive officer or Hog Point belong to ? [CTX]", "answer": "Antigua and Barbuda, Germany", "s_expression": "(OR (AND (JOIN (R P17) Q484876) (JOIN P31 Q1048835)) (AND (JOIN (R P17) Q21052414) (JOIN P31 Q1048835)))", "s_expression_cores": ["(AND (JOIN (R P17) Q484876) (JOIN P31 Q1048835))", "(AND (JOIN (R P17) Q21052414) (JOIN P31 Q1048835))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q484876 wdt:P17 ?x . ?x wdt:P31 wd:Q1048835 .  } UNION { wd:Q21052414 wdt:P17 ?x . ?x wdt:P31 wd:Q1048835 .  } }", "results": ["Q781", "Q183"], "coreference_resolved_question": "Which political territories do chief executive officer or Hog Point belong to?", "s_expression_fn": "(OR (AND (JOIN (R country) chief_executive_officer) (JOIN instance_of political_territorial_entity)) (AND (JOIN (R country) Hog_Point) (JOIN instance_of political_territorial_entity)))", "predicted_s_expression_fn": "(DISTINCT (AND (JOIN (R country) (OR (JOIN instance_of chief_executive_officer) Hog_Point)) (JOIN instance_of political_territorial_entity)))", "predicted_s_expression": "", "sparql_attempt_count": 2, "actions": ""}, {"turnID": "82.9.8", "question_type": "Logical Reasoning (All)", "description": "Logical|Difference|Multiple_Relation", "question": "Which administrative territories holds diplomatic relationship with Germany and are not the countries of citizenship of Kerem G\u00f6rsev ? [CTX]", "answer": "Some of them are Namibia, Bulgaria, Sweden, Gambia, North Korea, Senegal, Jordan, France, Albania, Libya", "s_expression": "(DIFF (AND (JOIN (R P530) Q183) (JOIN P31 Q15617994)) (JOIN (R P27) Q6099704))", "s_expression_cores": ["(AND (JOIN (R P530) Q183) (JOIN P31 Q15617994))", "(JOIN (R P27) Q6099704)"], "sparql_delex": "SELECT ?x WHERE { wd:Q183 wdt:P530 ?x . ?x wdt:P31 wd:Q15617994 .  FILTER NOT EXISTS { wd:Q6099704 wdt:P27 ?x .  } }", "results": ["Q804", "Q801", "Q800", "Q419", "Q668", "Q414", "Q142", "Q55", "Q145", "Q262", "Q148", "Q783", "Q265", "Q833", "Q711", "Q717", "Q252", "Q403", "Q657", "Q258", "Q45", "Q159", "Q41", "Q155", "Q796", "Q794", "Q954", "Q889", "Q884", "Q958", "Q881", "Q739", "Q241", "Q242", "Q811", "Q33", "Q32", "Q31", "Q30", "Q924", "Q36", "Q34", "Q929", "Q39", "Q38", "Q986", "Q423", "Q983", "Q851", "Q733", "Q734", "Q736", "Q730", "Q230", "Q232", "Q233", "Q238", "Q20", "Q1045", "Q1041", "Q27", "Q28", "Q29", "Q1049", "Q189", "Q843", "Q184", "Q1029", "Q1028", "Q786", "Q347", "Q227", "Q225", "Q224", "Q222", "Q96", "Q229", "Q228", "Q17", "Q902", "Q1036", "Q1037", "Q1008", "Q1032", "Q1033", "Q1030", "Q965", "Q967", "Q962", "Q963", "Q298", "Q115", "Q114", "Q117", "Q750", "Q212", "Q213", "Q217", "Q214", "Q215", "Q218", "Q219", "Q912", "Q917", "Q916", "Q1007", "Q1006", "Q1005", "Q1009", "Q974", "Q971", "Q79", "Q77", "Q878", "Q774", "Q948", "Q810", "Q1019", "Q1016", "Q1011", "Q945", "Q869", "Q953"], "coreference_resolved_question": "Which administrative territories hold diplomatic relationship with Germany and are not the countries of citizenship of Kerem G\u00f6rsev?", "s_expression_fn": "(DIFF (AND (JOIN (R diplomatic_relation) Germany) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (JOIN (R country_of_citizenship) Kerem_G\u00f6rsev))", "predicted_s_expression_fn": "(DIFF (AND (JOIN diplomatic_relation Germany) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (AND (JOIN (R country_of_citizenship) Kerem_G\u00f6rsev))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "82.152.5", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Multiple_Relation", "question": "Which sports are associated with the field of occupation association football player and did Wade Barrett participate in ? [CTX]", "answer": "association football", "s_expression": "(AND (JOIN (R P425) Q937857) (JOIN P31 Q349) (JOIN (R P641) Q9299663))", "s_expression_cores": ["(AND (JOIN (R P425) Q937857) (JOIN P31 Q349) (JOIN (R P641) Q9299663))"], "sparql_delex": "SELECT ?x WHERE { wd:Q937857 wdt:P425 ?x . ?x wdt:P31 wd:Q349 .  wd:Q9299663 wdt:P641 ?x .  }", "results": ["Q2736"], "coreference_resolved_question": "Which sports are associated with the field of occupation association football player and did Wade Barrett participate in?", "s_expression_fn": "(AND (JOIN (R field_of_this_occupation) association_football_player) (JOIN instance_of sport) (JOIN (R sport) Wade_Barrett))", "predicted_s_expression_fn": "(AND (JOIN sports_discipline_competed_in Wade_Barrett) (JOIN field_of_this_occupation association_football_player) (JOIN instance_of sport))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "82.8.3", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Single_Relation", "question": "Which administrative territories are Henry Gurke and Emmanuel Chukwudi Eze a civilian of ? [CTX]", "answer": "United States of America", "s_expression": "(AND (JOIN (R P27) Q14967299) (JOIN P31 Q15617994) (JOIN (R P27) Q960067))", "s_expression_cores": ["(AND (JOIN (R P27) Q14967299) (JOIN P31 Q15617994) (JOIN (R P27) Q960067))"], "sparql_delex": "SELECT ?x WHERE { wd:Q14967299 wdt:P27 ?x . ?x wdt:P31 wd:Q15617994 .  wd:Q960067 wdt:P27 ?x .  }", "results": ["Q30"], "coreference_resolved_question": "Which administrative territories are Henry Gurke and Emmanuel Chukwudi Eze a civilian of?", "s_expression_fn": "(AND (JOIN (R country_of_citizenship) Henry_Gurke) (JOIN instance_of designation_for_an_administrative_territorial_entity) (JOIN (R country_of_citizenship) Emmanuel_Chukwudi_Eze))", "predicted_s_expression_fn": "(DISTINCT (AND (JOIN (R country_of_citizenship) (VALUES Henry_Gurke Emmanuel_Chukwudi_Eze)) (JOIN instance_of designation_for_an_administrative_territorial_entity)))", "predicted_s_expression": "(DISTINCT (AND (JOIN (R P27) (VALUES Q14967299 Q960067)) (JOIN P31 Q15617994)))", "sparql_attempt_count": 2, "actions": "SELECT DISTINCT ?x WHERE { VALUES ?x0 { wd:Q14967299 wd:Q960067 } . ?x0 wdt:P27 ?x . ?x wdt:P31 wd:Q15617994 . }"}, {"turnID": "82.21.3", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Single_Relation|Incomplete", "question": "Which occupation is the profession of Maximiliano Calzada ? [SEP] association football player [SEP] Which national association football team is that person a member of ? [SEP] Uruguay Olympic football team [SEP] What is the sex of that person ? [SEP] male [SEP] And also Julius Mermagen [CTX]", "answer": "male", "s_expression": "(AND (JOIN (R P21) Q781726) (JOIN P31 Q290) (JOIN (R P21) Q15665844))", "s_expression_cores": ["(AND (JOIN (R P21) Q781726) (JOIN P31 Q290) (JOIN (R P21) Q15665844))"], "sparql_delex": "SELECT ?x WHERE { wd:Q781726 wdt:P21 ?x . ?x wdt:P31 wd:Q290 .  wd:Q15665844 wdt:P21 ?x .  }", "results": ["Q6581097"], "coreference_resolved_question": "What is the sex of Julius Mermagen?", "s_expression_fn": "(AND (JOIN (R sex_or_gender) Maximiliano_Calzada) (JOIN instance_of sex) (JOIN (R sex_or_gender) Julius_Mermagen))", "predicted_s_expression_fn": "(AND (JOIN (R sex_or_gender) Maximiliano_Calzada) (JOIN instance_of sex) (JOIN (R sex_or_gender) Julius_Mermagen))", "predicted_s_expression": "(AND (JOIN (R P21) Q781726) (JOIN P31 Q290) (JOIN (R P21) Q15665844))", "sparql_attempt_count": 2, "actions": "SELECT ?x WHERE { wd:Q781726 wdt:P21 ?x . ?x wdt:P31 wd:Q290 . wd:Q15665844 wdt:P21 ?x . }"}, {"turnID": "82.75.7", "question_type": "Logical Reasoning (All)", "description": "Logical|Difference|Multiple_Relation", "question": "Which administrative territories have diplomatic relationships with Germany and are not Ch'amakani present in ? [CTX]", "answer": "Some of them are Jordan, Bhutan, Afghanistan, Uzbekistan, Paraguay, Democratic Republic of the Congo, India, France, San Marino, Tanzania", "s_expression": "(DIFF (AND (JOIN (R P530) Q183) (JOIN P31 Q15617994)) (JOIN (R P17) Q19421136))", "s_expression_cores": ["(AND (JOIN (R P530) Q183) (JOIN P31 Q15617994))", "(JOIN (R P17) Q19421136)"], "sparql_delex": "SELECT ?x WHERE { wd:Q183 wdt:P530 ?x . ?x wdt:P31 wd:Q15617994 .  FILTER NOT EXISTS { wd:Q19421136 wdt:P17 ?x .  } }", "results": ["Q804", "Q801", "Q800", "Q668", "Q414", "Q142", "Q55", "Q145", "Q262", "Q148", "Q783", "Q265", "Q833", "Q711", "Q717", "Q252", "Q403", "Q657", "Q258", "Q45", "Q159", "Q43", "Q41", "Q155", "Q796", "Q794", "Q954", "Q889", "Q884", "Q958", "Q881", "Q739", "Q241", "Q242", "Q811", "Q33", "Q32", "Q31", "Q30", "Q924", "Q36", "Q34", "Q929", "Q39", "Q38", "Q986", "Q423", "Q983", "Q851", "Q733", "Q734", "Q736", "Q730", "Q230", "Q232", "Q233", "Q238", "Q20", "Q1045", "Q1041", "Q27", "Q28", "Q29", "Q1049", "Q189", "Q843", "Q184", "Q1029", "Q1028", "Q786", "Q347", "Q227", "Q225", "Q224", "Q222", "Q96", "Q229", "Q228", "Q17", "Q902", "Q1036", "Q1037", "Q1008", "Q1032", "Q1033", "Q1030", "Q965", "Q967", "Q962", "Q963", "Q298", "Q115", "Q114", "Q117", "Q212", "Q213", "Q217", "Q214", "Q215", "Q218", "Q219", "Q912", "Q917", "Q916", "Q1007", "Q1006", "Q1005", "Q1009", "Q974", "Q971", "Q79", "Q77", "Q878", "Q774", "Q948", "Q810", "Q1019", "Q1016", "Q1011", "Q945", "Q869", "Q953"], "coreference_resolved_question": "Which administrative territories have diplomatic relationships with Germany and are not Ch'amakani present in?", "s_expression_fn": "(DIFF (AND (JOIN (R diplomatic_relation) Germany) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (JOIN (R country) Ch'amakani))", "predicted_s_expression_fn": "(DIFF (AND (JOIN diplomatic_relation Germany) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (JOIN (R present_in) Ch'amakani))", "predicted_s_expression": "(DIFF (AND (JOIN P530 Q183) (JOIN P31 Q15617994)) (JOIN (R P1441) Q19421133))", "sparql_attempt_count": 2, "actions": "SELECT ?x WHERE { ?x wdt:P530 wd:Q183 . ?x wdt:P31 wd:Q15617994 . FILTER NOT EXISTS { wd:Q19421133 wdt:P1441 ?x . } }"}, {"turnID": "82.76.7", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Multiple_Relation", "question": "Which people have Gustaf Ribbing as a child and are a male ? [CTX]", "answer": "Lennart Ribbing", "s_expression": "(AND (JOIN P40 Q6070075) (JOIN P31 Q502895) (JOIN P21 Q6581097))", "s_expression_cores": ["(AND (JOIN P40 Q6070075) (JOIN P31 Q502895) (JOIN P21 Q6581097))"], "sparql_delex": "SELECT ?x WHERE { ?x wdt:P40 wd:Q6070075 . ?x wdt:P31 wd:Q502895 .  ?x wdt:P21 wd:Q6581097 .  }", "results": ["Q19842254"], "coreference_resolved_question": "Which people have Gustaf Ribbing as a child and are a male?", "s_expression_fn": "(AND (JOIN child Gustaf_Ribbing) (JOIN instance_of common_name) (JOIN sex_or_gender male))", "predicted_s_expression_fn": "(AND (JOIN child Gustaf_Ribbing) (JOIN sex_or_gender male) (JOIN instance_of common_name))", "predicted_s_expression": "(AND (JOIN P40 Q6070075) (JOIN P21 Q6581097) (JOIN P31 Q502895))", "sparql_attempt_count": 2, "actions": "SELECT ?x WHERE { ?x wdt:P40 wd:Q6070075 . ?x wdt:P21 wd:Q6581097 . ?x wdt:P31 wd:Q502895 . }"}, {"turnID": "82.96.2", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Single_Relation|Incomplete", "question": "Who is appointed as the cinematographer of Se solicitan modelos ? [SEP] Ignacio Torres [SEP] Which administrative territory was that person born in ? [SEP] Mexico City [SEP] Or Funkstar De Luxe? [CTX]", "answer": "Mexico City, Odense", "s_expression": "(OR (AND (JOIN (R P19) Q10380658) (JOIN P31 Q56061)) (AND (JOIN (R P19) Q5509279) (JOIN P31 Q56061)))", "s_expression_cores": ["(AND (JOIN (R P19) Q10380658) (JOIN P31 Q56061))", "(AND (JOIN (R P19) Q5509279) (JOIN P31 Q56061))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q10380658 wdt:P19 ?x . ?x wdt:P31 wd:Q56061 .  } UNION { wd:Q5509279 wdt:P19 ?x . ?x wdt:P31 wd:Q56061 .  } }", "results": ["Q1489", "Q25331"], "coreference_resolved_question": "Which administrative territory was Funkstar De Luxe born in?", "s_expression_fn": "(OR (AND (JOIN (R place_of_birth) Ignacio_Torres) (JOIN instance_of administrative_territorial_entity)) (AND (JOIN (R place_of_birth) Funkstar_De_Luxe) (JOIN instance_of administrative_territorial_entity)))", "predicted_s_expression_fn": "(OR (AND (JOIN (R place_of_birth) Ignacio_Torres) (JOIN instance_of administrative_territorial_entity)) (AND (JOIN (R place_of_birth) Funkstar_De_Luxe) (JOIN instance_of administrative_territorial_entity))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "82.111.9", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Multiple_Relation", "question": "Which administrative territories are 1981 Tour de France a part of or were David Heilbronn born in ? [CTX]", "answer": "France, Oerlinghausen", "s_expression": "(OR (AND (JOIN (R P17) Q840727) (JOIN P31 Q15617994)) (AND (JOIN (R P19) Q1174907) (JOIN P31 Q15617994)))", "s_expression_cores": ["(AND (JOIN (R P17) Q840727) (JOIN P31 Q15617994))", "(AND (JOIN (R P19) Q1174907) (JOIN P31 Q15617994))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q840727 wdt:P17 ?x . ?x wdt:P31 wd:Q15617994 .  } UNION { wd:Q1174907 wdt:P19 ?x . ?x wdt:P31 wd:Q15617994 .  } }", "results": ["Q142", "Q242757"], "coreference_resolved_question": "Which administrative territories are 1981 Tour de France a part of or were David Heilbronn born in?", "s_expression_fn": "(OR (AND (JOIN (R country) 1981_Tour_de_France) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (AND (JOIN (R place_of_birth) David_Heilbronn) (JOIN instance_of designation_for_an_administrative_territorial_entity)))", "predicted_s_expression_fn": "(DISTINCT (OR (AND (JOIN (R part_of) 1981_Tour_de_France) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (AND (JOIN (R place_of_birth) David_Heilbronn) (JOIN instance_of designation_for_an_administrative_territorial_entity))))", "predicted_s_expression": "", "sparql_attempt_count": 1, "actions": ""}, {"turnID": "82.48.4", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Multiple_Relation", "question": "Which people holds the diploma Doktor Nauk in Chemistry and have male as the sex ? [CTX]", "answer": "Some of them are German Mironov, M\u0259mm\u0259d H\u00fcseyn\u0259li o\u011flu V\u0259liyev, Yury Yegorov, Sergey Papkov, Vadim Urusov, Viktoras Kafarovas, Lew Alexandrowitsch Fjodorow, Gustav von Bunge, Nikolay Emanuel, Valery Maystrenko", "s_expression": "(AND (JOIN P512 Q17281079) (JOIN P31 Q502895) (JOIN P21 Q6581097))", "s_expression_cores": ["(AND (JOIN P512 Q17281079) (JOIN P31 Q502895) (JOIN P21 Q6581097))"], "sparql_delex": "SELECT ?x WHERE { ?x wdt:P512 wd:Q17281079 . ?x wdt:P31 wd:Q502895 .  ?x wdt:P21 wd:Q6581097 .  }", "results": ["Q26386", "Q4064776", "Q4477380", "Q62243", "Q3381926", "Q89429", "Q4124715", "Q4413084", "Q4413082", "Q4232384", "Q4077621", "Q4175639", "Q4055262", "Q4279819", "Q4106180", "Q4428089", "Q4124787", "Q4097656", "Q4054277", "Q1384160", "Q156379", "Q4232438", "Q4451073", "Q4196013", "Q4245036", "Q4236744", "Q3821249", "Q4523835", "Q4077392", "Q107405", "Q4089209", "Q16654721", "Q4207545", "Q4170473", "Q4206547", "Q93143", "Q4518102", "Q4175329", "Q738617", "Q4230976", "Q4093275", "Q4296056", "Q4344701", "Q4531582", "Q4077165", "Q129133", "Q4426142", "Q4400256", "Q3804648", "Q1258727", "Q4084983", "Q905015", "Q4188689", "Q4180980", "Q4075871", "Q4171108", "Q77782", "Q4191666", "Q4077158", "Q4420637", "Q4217679", "Q4417091", "Q4294030", "Q4508299", "Q4240365", "Q4301363", "Q4480399", "Q4361199", "Q4297068", "Q4054485", "Q3642600", "Q4207757", "Q4060747", "Q16718791", "Q7911498", "Q4173787", "Q216800", "Q4400210", "Q4360672", "Q4138306", "Q893801", "Q16718996", "Q4246155", "Q2996054", "Q4461375", "Q4151560", "Q4285053", "Q4213498", "Q15070486", "Q4206555", "Q216713", "Q4181291", "Q4308550", "Q2388810", "Q631248", "Q4410117", "Q4160146", "Q4178491", "Q710722", "Q4200142", "Q4275162", "Q4224613", "Q4361788", "Q4404426", "Q1983431", "Q377461", "Q4482096", "Q4234058", "Q4193372", "Q4333522", "Q4527628"], "coreference_resolved_question": "Which people holds the diploma Doktor Nauk in Chemistry and have male as the sex?", "s_expression_fn": "(AND (JOIN academic_degree Doktor_Nauk_in_Chemistry) (JOIN instance_of common_name) (JOIN sex_or_gender male))", "predicted_s_expression_fn": "(AND (JOIN academic_degree Doktor_Nauk) (JOIN field_of_study Chemistry) (JOIN sex_or_gender male) (JOIN instance_of common_name))", "predicted_s_expression": "", "sparql_attempt_count": 8, "actions": ""}, {"turnID": "82.119.7", "question_type": "Logical Reasoning (All)", "description": "Logical|Difference|Single_Relation", "question": "Which works of art originated in Brazil but not United Kingdom ? [CTX]", "answer": "Some of them are Nosso Lar, A Caseira e a Catarina, Perfumed Ball, Mango Yellow, Ervilha da Fantasia, Brazil Year 2000, Entranced Earth, Os Trapalh\u00f5es e o M\u00e1gico de Or\u00f3z, Carioca tigre, Iracema", "s_expression": "(DIFF (AND (JOIN P495 Q155) (JOIN P31 Q838948)) (JOIN P495 Q145))", "s_expression_cores": ["(AND (JOIN P495 Q155) (JOIN P31 Q838948))", "(JOIN P495 Q145)"], "sparql_delex": "SELECT ?x WHERE { ?x wdt:P495 wd:Q155 . ?x wdt:P31 wd:Q838948 .  FILTER NOT EXISTS { ?x wdt:P495 wd:Q145 .  } }", "results": ["Q10339505", "Q17081949", "Q3281276", "Q15533576", "Q18128785", "Q7854768", "Q7237189", "Q4733939", "Q22905675", "Q5682555", "Q16951440", "Q26963238", "Q18708877", "Q657755", "Q3284552", "Q17081889", "Q5468276", "Q3415168", "Q3282926", "Q7880990", "Q4356286", "Q10339344", "Q501801", "Q474006", "Q3281991", "Q6468915", "Q3283824", "Q10339864", "Q4503130", "Q10381392", "Q7749231", "Q26000060", "Q26000061", "Q281809", "Q5256296", "Q22813590", "Q16960487", "Q10318896", "Q4826141", "Q10346070", "Q4633311", "Q14552003", "Q17052504", "Q10348526", "Q7766917", "Q559584", "Q17081651", "Q10339765", "Q7319083", "Q963734", "Q10327416", "Q17053747", "Q10371545", "Q3281295", "Q19635695", "Q10339889", "Q7171249", "Q2346467", "Q24038232", "Q135401", "Q19844858", "Q2698127", "Q4958640", "Q10369829", "Q17053401", "Q9556253", "Q15891845", "Q17082277", "Q15198766", "Q5264843", "Q2895945", "Q10320133", "Q17055259", "Q10304910", "Q617002", "Q7160982", "Q72162", "Q17056603", "Q5055536", "Q7307367", "Q16386869", "Q7754149", "Q10364212", "Q8078785", "Q5460499", "Q6407395", "Q6407391", "Q3284453", "Q6960430", "Q3205045", "Q10302078", "Q4777645", "Q4846388", "Q15052297", "Q4415198", "Q5979231", "Q3414304", "Q7073240", "Q6154094", "Q10388570", "Q4638650", "Q7766908", "Q7745943", "Q16951571", "Q7732928", "Q8078732", "Q17001792", "Q5826620", "Q3283430", "Q220741", "Q17512693", "Q17081759", "Q4958617", "Q2185100", "Q3283344", "Q15639757", "Q3420854", "Q10339649", "Q10340956", "Q19635713", "Q10340406", "Q13475510", "Q15461365", "Q1576347", "Q2435697", "Q16858903", "Q14623630", "Q17168949", "Q4899234", "Q5692149", "Q4661012", "Q9556604", "Q2086595", "Q10387404", "Q1884859", "Q15221574", "Q4658992", "Q5370113", "Q5708374", "Q7812135", "Q142695", "Q10264518", "Q7335125", "Q502258", "Q4759798", "Q4415170", "Q10330320", "Q15041809", "Q16937148", "Q16612966", "Q5316807", "Q9658225", "Q16961618", "Q19999913", "Q2941299", "Q3102024", "Q7658807", "Q17012089", "Q15198730", "Q10271690", "Q2510333", "Q16959768", "Q16487896", "Q16911676", "Q10352009", "Q7406708", "Q834393", "Q838405", "Q4658373", "Q282761", "Q2939523", "Q9698204", "Q10321184", "Q25929200", "Q10037462", "Q10369018", "Q10383844", "Q10344758", "Q1848967", "Q5123703", "Q7755932", "Q5739214", "Q5186379", "Q3284549", "Q3232105", "Q7758592", "Q10337738", "Q12126337", "Q17081793", "Q22672405", "Q7920735", "Q5871218", "Q7560207", "Q10354438", "Q10329343", "Q13627889", "Q15897186", "Q26000062", "Q10339800", "Q7842095", "Q793837", "Q777480", "Q6544972", "Q4729195", "Q10373271", "Q5194726", "Q14956292", "Q4686580", "Q1344968", "Q26000059", "Q10277912", "Q17081669", "Q7237191", "Q24554275", "Q535564", "Q17003055", "Q17040477", "Q5089533", "Q9632688", "Q4406513", "Q7417558", "Q10268911", "Q17027390", "Q3281044", "Q15927316", "Q10312674", "Q19571091", "Q16979999", "Q15052331", "Q2894959", "Q15858284", "Q7716320", "Q17168870", "Q15088267", "Q7740651", "Q1219329", "Q5119488", "Q15042128", "Q9637200", "Q1630404", "Q6816237", "Q10338996", "Q4740871", "Q7992976", "Q7927651", "Q6815283", "Q9632359", "Q10277767", "Q9559282", "Q2456024", "Q7549463", "Q10396004", "Q4829744", "Q3812828", "Q9558645", "Q7758200", "Q4771438", "Q137703", "Q24787997", "Q16386498", "Q5037334", "Q4808366", "Q7718692", "Q16488902", "Q17280305", "Q26884526", "Q1169080", "Q3175919", "Q10339524", "Q10339150", "Q1340043", "Q7754046", "Q8171296", "Q6373185", "Q7105475", "Q7699567", "Q1625927", "Q538266", "Q16962117", "Q3226730", "Q10265719", "Q10356210", "Q3283429", "Q10339739", "Q224836", "Q3701671", "Q9609822", "Q7772806", "Q5119927", "Q3283192", "Q10328587", "Q7458456", "Q282781", "Q2879831", "Q10394429", "Q7105480", "Q5274464", "Q15052312", "Q3283514", "Q4414346", "Q7632510", "Q3427025", "Q16962977", "Q13861278", "Q10262415", "Q10264697", "Q10330296", "Q7713116", "Q16957305", "Q866568", "Q9093111", "Q15905317", "Q16142102", "Q9609317", "Q9557722", "Q16699004", "Q16667390", "Q1592219", "Q16496403", "Q3043358", "Q3414572", "Q16736285", "Q7732101", "Q15525028", "Q7272008", "Q84022", "Q6822609", "Q7748213", "Q3563548", "Q5640332", "Q8960801", "Q10339443", "Q15701565", "Q24905542", "Q7564433", "Q18703886", "Q16708065", "Q10288593", "Q15485665", "Q10274178", "Q16488688", "Q7754647", "Q7549883", "Q18124863", "Q4121268", "Q17060112", "Q7764272", "Q7768416", "Q17052629", "Q17037155", "Q10329335", "Q13424384", "Q24885115", "Q3283849", "Q7571198", "Q19824592", "Q17169009", "Q3429203", "Q7800732", "Q3283009", "Q16681390", "Q7642918", "Q9828656", "Q10394438", "Q10394435", "Q6933987", "Q2192521", "Q17081776", "Q3283322", "Q16951635", "Q7712692", "Q3421359", "Q4803850", "Q1056233", "Q16243202", "Q7908681", "Q1748666", "Q14783869", "Q6470718", "Q7769025", "Q3285635", "Q10342118", "Q19999941", "Q2963408", "Q16845984", "Q6949658", "Q10270242", "Q19999645", "Q7762078", "Q4958370", "Q4753455", "Q17081606", "Q15927938", "Q16143295", "Q6735482", "Q7740482", "Q1609621", "Q302842", "Q4765859", "Q10279161", "Q3280437", "Q17067850", "Q16950635", "Q13655408", "Q22000210", "Q10266072", "Q2200689", "Q26720510", "Q2698642", "Q3427499", "Q657731", "Q6914385", "Q77151", "Q7771604", "Q4655360", "Q5148117", "Q10338974", "Q15052277", "Q16986401", "Q15052278", "Q10394447", "Q10339245", "Q10394445", "Q10339247", "Q5049728", "Q27362", "Q1281944", "Q10394440", "Q1675632", "Q3283448", "Q16938850", "Q10366232", "Q7073268", "Q7073266", "Q21647504", "Q7073264", "Q18043433", "Q19570736", "Q16246692", "Q7712051", "Q2051858", "Q8350925", "Q5978212", "Q20111159", "Q3281803", "Q16962049", "Q10338807", "Q2947120", "Q5474270", "Q17168858", "Q5431829", "Q20974889", "Q1732036", "Q10328608", "Q10328595", "Q10301887", "Q4034626", "Q4631880", "Q15530999", "Q4984290", "Q10279185", "Q15550924", "Q5212756", "Q7768775", "Q1215865", "Q15198789", "Q8254556", "Q17037668", "Q2885509", "Q10339753", "Q4846217", "Q4846213", "Q7642623", "Q10288772", "Q6502807", "Q21646960", "Q20856984", "Q7399047", "Q6825596", "Q6825594", "Q688570", "Q9632452", "Q1962699", "Q16144043", "Q17068560", "Q7558048", "Q10342089", "Q10303529", "Q736916", "Q9559628", "Q10302310", "Q3283017", "Q7439769", "Q232119", "Q7810374", "Q2116986", "Q7561180", "Q7439765", "Q2165131", "Q7073229", "Q10340600", "Q3023628", "Q6462046", "Q7073341", "Q9632199", "Q10276681", "Q7665651", "Q4750512", "Q14332398", "Q18703106", "Q7734154", "Q3509813", "Q7091860", "Q18415331", "Q3490852", "Q3281861", "Q15927905", "Q10371929", "Q8513746", "Q10339275", "Q17053940", "Q15623975", "Q10388683", "Q14481563", "Q83103", "Q7733754", "Q17002803", "Q9661411", "Q1551080", "Q3008425", "Q5655277", "Q7191059", "Q15052340", "Q765206", "Q7168305", "Q10339572", "Q3347771", "Q17056098", "Q6441122", "Q6702741", "Q9043789", "Q5048354", "Q10335546", "Q7713611", "Q4860277", "Q10287994", "Q10287993", "Q1482269", "Q16933043", "Q6121907", "Q7102887", "Q15919614", "Q17000309", "Q6298438", "Q16950545", "Q976815", "Q1910645", "Q16949642", "Q9632380", "Q15062988", "Q6833914", "Q4811468", "Q3282983", "Q5433501", "Q7195032", "Q5037683", "Q1054036", "Q5155127", "Q4711987", "Q16852519", "Q17052199", "Q5943316", "Q10329310", "Q5918531", "Q3421429", "Q16848339", "Q10342113", "Q22000203", "Q9655679", "Q18043331", "Q26720508", "Q26752812", "Q2615028", "Q23833608", "Q10338882", "Q16385120", "Q10361426", "Q18110405", "Q7399842", "Q23899112"], "coreference_resolved_question": "Which works of art originated in Brazil but not United Kingdom?", "s_expression_fn": "(DIFF (AND (JOIN country_of_origin Brazil) (JOIN instance_of work_of_art)) (JOIN country_of_origin United_Kingdom))", "predicted_s_expression_fn": "(DIFF (AND (JOIN (R country_of_origin) Brazil) (JOIN instance_of work_of_art)) (AND (JOIN (R country_of_origin) United_Kingdom) (JOIN instance_of work_of_art))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "82.13.5", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Multiple_Relation", "question": "Which administrative territories are Ruch situated in and are Alexis Gr\u00fcss an inhabitant of ? [CTX]", "answer": "France", "s_expression": "(AND (JOIN (R P17) Q720519) (JOIN P31 Q15617994) (JOIN (R P27) Q2834520))", "s_expression_cores": ["(AND (JOIN (R P17) Q720519) (JOIN P31 Q15617994) (JOIN (R P27) Q2834520))"], "sparql_delex": "SELECT ?x WHERE { wd:Q720519 wdt:P17 ?x . ?x wdt:P31 wd:Q15617994 .  wd:Q2834520 wdt:P27 ?x .  }", "results": ["Q142"], "coreference_resolved_question": "Which administrative territories are Ruch situated in and are Alexis Gr\u00fcss an inhabitant of?", "s_expression_fn": "(AND (JOIN (R country) Ruch) (JOIN instance_of designation_for_an_administrative_territorial_entity) (JOIN (R country_of_citizenship) Alexis_Gr\u00fcss))", "predicted_s_expression_fn": "(AND (JOIN (R country) Ruch) (JOIN (R country_of_citizenship) Alexis_Gr\u00fcss) (JOIN instance_of designation_for_an_administrative_territorial_entity))", "predicted_s_expression": "(AND (JOIN (R P17) Q720519) (JOIN (R P27) Q2834520) (JOIN P31 Q15617994))", "sparql_attempt_count": 2, "actions": "SELECT ?x WHERE { wd:Q720519 wdt:P17 ?x . wd:Q2834520 wdt:P27 ?x . ?x wdt:P31 wd:Q15617994 . }"}, {"turnID": "82.126.6", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Multiple_Relation", "question": "Which political territories do Weitersbach belong to or are adjacent to Rodeiro ? [CTX]", "answer": "Lal\u00edn, Doz\u00f3n, San Cristovo de Cea, Agolada, Germany, Carballedo, Antas de Ulla, Chantada, Taboada, Pi\u00f1or", "s_expression": "(OR (AND (JOIN (R P17) Q563191) (JOIN P31 Q1048835)) (AND (JOIN (R P47) Q1627583) (JOIN P31 Q1048835)))", "s_expression_cores": ["(AND (JOIN (R P17) Q563191) (JOIN P31 Q1048835))", "(AND (JOIN (R P47) Q1627583) (JOIN P31 Q1048835))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q563191 wdt:P17 ?x . ?x wdt:P31 wd:Q1048835 .  } UNION { wd:Q1627583 wdt:P47 ?x . ?x wdt:P31 wd:Q1048835 .  } }", "results": ["Q1374736", "Q1614585", "Q1603760", "Q395225", "Q183", "Q1444347", "Q1368972", "Q1447512", "Q578118", "Q934212"], "coreference_resolved_question": "Which political territories do Weitersbach belong to or are adjacent to Rodeiro?", "s_expression_fn": "(OR (AND (JOIN (R country) Weitersbach) (JOIN instance_of political_territorial_entity)) (AND (JOIN (R shares_border_with) Rodeiro) (JOIN instance_of political_territorial_entity)))", "predicted_s_expression_fn": "(DISTINCT (OR (AND (JOIN (R country) Weitersbach) (JOIN instance_of political_territorial_entity)) (AND (JOIN shares_border_with Rodeiro) (JOIN instance_of political_territorial_entity))))", "predicted_s_expression": "", "sparql_attempt_count": 1, "actions": ""}, {"turnID": "82.115.5", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Multiple_Relation", "question": "Which people expired at Bl\u00e2mont and are a male ? [CTX]", "answer": "Fran\u00e7ois Balthazar Lafrogne", "s_expression": "(AND (JOIN P20 Q457569) (JOIN P31 Q502895) (JOIN P21 Q6581097))", "s_expression_cores": ["(AND (JOIN P20 Q457569) (JOIN P31 Q502895) (JOIN P21 Q6581097))"], "sparql_delex": "SELECT ?x WHERE { ?x wdt:P20 wd:Q457569 . ?x wdt:P31 wd:Q502895 .  ?x wdt:P21 wd:Q6581097 .  }", "results": ["Q24008628"], "coreference_resolved_question": "Which people expired at Bl\u00e2mont and are a male?", "s_expression_fn": "(AND (JOIN place_of_death Bl\u00e2mont) (JOIN instance_of common_name) (JOIN sex_or_gender male))", "predicted_s_expression_fn": "(AND (JOIN place_of_death Bl\u00e2mont) (JOIN sex_or_gender male) (JOIN instance_of common_name))", "predicted_s_expression": "(AND (JOIN P20 Q457569) (JOIN P21 Q6581097) (JOIN P31 Q502895))", "sparql_attempt_count": 2, "actions": "SELECT ?x WHERE { ?x wdt:P20 wd:Q457569 . ?x wdt:P21 wd:Q6581097 . ?x wdt:P31 wd:Q502895 . }"}, {"turnID": "82.42.2", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Multiple_Relation", "question": "Which churches were designed by Augustus Pugin and uses architectural style of Gothic Revival architecture ? [CTX]", "answer": "Northampton Cathedral, St Mary's Cathedral, Newcastle upon Tyne, St George's Cathedral, Southwark, St Mary's Cathedral, Killarney, Nottingham Cathedral, St. Aidan's Cathedral", "s_expression": "(AND (JOIN P84 Q313288) (JOIN P31 Q16970) (JOIN P149 Q186363))", "s_expression_cores": ["(AND (JOIN P84 Q313288) (JOIN P31 Q16970) (JOIN P149 Q186363))"], "sparql_delex": "SELECT ?x WHERE { ?x wdt:P84 wd:Q313288 . ?x wdt:P31 wd:Q16970 .  ?x wdt:P149 wd:Q186363 .  }", "results": ["Q1357895", "Q1638891", "Q1451262", "Q1897809", "Q1545350", "Q1138066"], "coreference_resolved_question": "Which churches were designed by Augustus Pugin and use architectural style of Gothic Revival architecture?", "s_expression_fn": "(AND (JOIN architect Augustus_Pugin) (JOIN instance_of church) (JOIN architectural_style Gothic_Revival_architecture))", "predicted_s_expression_fn": "(AND (JOIN architect Augustus_Pugin) (JOIN architectural_style Gothic_Revival_architecture) (JOIN instance_of church))", "predicted_s_expression": "(AND (JOIN P84 Q313288) (JOIN P149 Q186363) (JOIN P31 Q16970))", "sparql_attempt_count": 2, "actions": "SELECT ?x WHERE { ?x wdt:P84 wd:Q313288 . ?x wdt:P149 wd:Q186363 . ?x wdt:P31 wd:Q16970 . }"}, {"turnID": "82.59.8", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Single_Relation", "question": "Which administrative territories are Avord and Amazon basin located in ? [CTX]", "answer": "France", "s_expression": "(AND (JOIN (R P17) Q688046) (JOIN P31 Q15617994) (JOIN (R P17) Q244451))", "s_expression_cores": ["(AND (JOIN (R P17) Q688046) (JOIN P31 Q15617994) (JOIN (R P17) Q244451))"], "sparql_delex": "SELECT ?x WHERE { wd:Q688046 wdt:P17 ?x . ?x wdt:P31 wd:Q15617994 .  wd:Q244451 wdt:P17 ?x .  }", "results": ["Q142"], "coreference_resolved_question": "Which administrative territories are Avord and Amazon basin located in?", "s_expression_fn": "(AND (JOIN (R country) Avord) (JOIN instance_of designation_for_an_administrative_territorial_entity) (JOIN (R country) Amazon_basin))", "predicted_s_expression_fn": "(DISTINCT (AND (JOIN (R country) (VALUES Avord Amazon_basin)) (JOIN instance_of designation_for_an_administrative_territorial_entity)))", "predicted_s_expression": "(DISTINCT (AND (JOIN (R P17) (VALUES Q688046 Q244451)) (JOIN P31 Q15617994)))", "sparql_attempt_count": 2, "actions": "SELECT DISTINCT ?x WHERE { VALUES ?x0 { wd:Q688046 wd:Q244451 } . ?x0 wdt:P17 ?x . ?x wdt:P31 wd:Q15617994 . }"}, {"turnID": "82.121.2", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Single_Relation|Incomplete", "question": "Which administrative territory is Netvo\u0159ice a part of ? [SEP] Czech Republic [SEP] Which flag is associated with that administrative territory ? [SEP] flag of the Czech Republic [SEP] Or India? [CTX]", "answer": "flag of the Czech Republic, flag of India", "s_expression": "(OR (AND (JOIN (R P163) Q213) (JOIN P31 Q14660)) (AND (JOIN (R P163) Q668) (JOIN P31 Q14660)))", "s_expression_cores": ["(AND (JOIN (R P163) Q213) (JOIN P31 Q14660))", "(AND (JOIN (R P163) Q668) (JOIN P31 Q14660))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q213 wdt:P163 ?x . ?x wdt:P31 wd:Q14660 .  } UNION { wd:Q668 wdt:P163 ?x . ?x wdt:P31 wd:Q14660 .  } }", "results": ["Q127155", "Q41673"], "coreference_resolved_question": "Which flag is associated with India?", "s_expression_fn": "(OR (AND (JOIN (R flag) Czech_Republic) (JOIN instance_of flag)) (AND (JOIN (R flag) India) (JOIN instance_of flag)))", "predicted_s_expression_fn": "(OR (JOIN (R flag) Czech_Republic) (JOIN (R flag) India)", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "82.60.10", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Multiple_Relation", "question": "Which people have the profession of tailor and are a male ? [CTX]", "answer": "Some of them are Peter Shorrocks, John Simmons, Jakob Ammann, Christian Friedrich Mentel, Manuel Pertegaz, Joachim Peter Perlin, Giuseppe Ottaviani, Robert Hill, Imre Mez\u0151, Patrick Kelly", "s_expression": "(AND (JOIN P106 Q242468) (JOIN P31 Q502895) (JOIN P21 Q6581097))", "s_expression_cores": ["(AND (JOIN P106 Q242468) (JOIN P31 Q502895) (JOIN P21 Q6581097))"], "sparql_delex": "SELECT ?x WHERE { ?x wdt:P106 wd:Q242468 . ?x wdt:P31 wd:Q502895 .  ?x wdt:P21 wd:Q6581097 .  }", "results": ["Q16943443", "Q1704708", "Q26449097", "Q10376368", "Q7146930", "Q330752", "Q24264230", "Q21030814", "Q3173181", "Q7792128", "Q21486108", "Q20871024", "Q9139586", "Q3771122", "Q9028045", "Q27089509", "Q19974227", "Q16210035", "Q1079633", "Q19845356", "Q4411860", "Q1459228", "Q1357639", "Q15811961", "Q595291", "Q27117341", "Q18529336", "Q7412064", "Q1699225", "Q26220768", "Q110131", "Q1176477", "Q20888454", "Q363046", "Q2232889", "Q936206", "Q3359235", "Q330009", "Q5331658", "Q112070", "Q6257882", "Q3557728", "Q21903477", "Q104093", "Q3436888", "Q1530772", "Q16607482", "Q19964059", "Q72876", "Q18672179", "Q805616", "Q11934591", "Q5713698", "Q19956451", "Q5906013", "Q2644430", "Q5546925", "Q21043151", "Q19279532", "Q713064", "Q8077873", "Q15812064", "Q27832165", "Q16864282", "Q95520", "Q124060"], "coreference_resolved_question": "Which people have the profession of tailor and are a male?", "s_expression_fn": "(AND (JOIN occupation tailor) (JOIN instance_of common_name) (JOIN sex_or_gender male))", "predicted_s_expression_fn": "(AND (JOIN (R occupation) tailor) (JOIN (R sex_or_gender) male) (JOIN instance_of person))", "predicted_s_expression": "(AND (JOIN P106 Q242468) (JOIN P21 Q6581097) (JOIN P31 Q95074))", "sparql_attempt_count": 5, "actions": "SELECT ?x WHERE { ?x wdt:P106 wd:Q242468 . ?x wdt:P21 wd:Q6581097 . ?x wdt:P31 wd:Q95074 . }"}, {"turnID": "82.32.3", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Multiple_Relation", "question": "Which nutrients are encoded by Bloc1s5 and are found in Mus musculus ? [CTX]", "answer": "Biogenesis of lysosome-related organelles complex 1 subunit 5", "s_expression": "(AND (JOIN P702 Q18252480) (JOIN P31 Q181394) (JOIN P703 Q83310))", "s_expression_cores": ["(AND (JOIN P702 Q18252480) (JOIN P31 Q181394) (JOIN P703 Q83310))"], "sparql_delex": "SELECT ?x WHERE { ?x wdt:P702 wd:Q18252480 . ?x wdt:P31 wd:Q181394 .  ?x wdt:P703 wd:Q83310 .  }", "results": ["Q21497131"], "coreference_resolved_question": "Which nutrients are encoded by Bloc1s5 and are found in Mus musculus?", "s_expression_fn": "(AND (JOIN encoded_by Bloc1s5) (JOIN instance_of nutrient) (JOIN found_in_taxon Mus_musculus))", "predicted_s_expression_fn": "(AND (JOIN encoded_by Bloc1s5) (JOIN found_in_taxon Mus_musculus) (JOIN instance_of nutrient))", "predicted_s_expression": "(AND (JOIN P702 Q18252480) (JOIN P703 Q83310) (JOIN P31 Q181394))", "sparql_attempt_count": 2, "actions": "SELECT ?x WHERE { ?x wdt:P702 wd:Q18252480 . ?x wdt:P703 wd:Q83310 . ?x wdt:P31 wd:Q181394 . }"}, {"turnID": "157.61.3", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Multiple_Relation", "question": "Which sports are associated with the field of occupation association football player and were CFF Clujana a part of ? [CTX]", "answer": "association football", "s_expression": "(AND (JOIN (R P425) Q937857) (JOIN P31 Q349) (JOIN (R P641) Q2931336))", "s_expression_cores": ["(AND (JOIN (R P425) Q937857) (JOIN P31 Q349) (JOIN (R P641) Q2931336))"], "sparql_delex": "SELECT ?x WHERE { wd:Q937857 wdt:P425 ?x . ?x wdt:P31 wd:Q349 .  wd:Q2931336 wdt:P641 ?x .  }", "results": ["Q2736"], "coreference_resolved_question": "Which sports are associated with the field of occupation association football player and were CFF Clujana a part of?", "s_expression_fn": "(AND (JOIN (R field_of_this_occupation) association_football_player) (JOIN instance_of sport) (JOIN (R sport) CFF_Clujana))", "predicted_s_expression_fn": "(AND (JOIN (R sports_discipline_competed_in) CFF_Clujana) (JOIN (R sports_discipline_competed_in) (AND (JOIN (R occupation) association_football_player) (JOIN instance_of sport))))", "predicted_s_expression": "", "sparql_attempt_count": 8, "actions": ""}, {"turnID": "157.127.2", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Single_Relation", "question": "Which nutrients have cytoplasm and late endosome membrane as their cell component ? [CTX]", "answer": "Some of them are Vacuolar protein sorting-associated protein 33B, Charged multivesicular body protein 1b-1, Sorting nexin-16, Sorting nexin-16, Interferon-induced transmembrane protein 3, Mucolipin-1, Vesicle transport through interaction with t-SNAREs homolog 1B, Charged multivesicular body protein 2b, Tumor susceptibility gene 101 protein, Protein LTV1 homolog", "s_expression": "(AND (JOIN P681 Q79899) (JOIN P31 Q181394) (JOIN P681 Q14904869))", "s_expression_cores": ["(AND (JOIN P681 Q79899) (JOIN P31 Q181394) (JOIN P681 Q14904869))"], "sparql_delex": "SELECT ?x WHERE { ?x wdt:P681 wd:Q79899 . ?x wdt:P31 wd:Q181394 .  ?x wdt:P681 wd:Q14904869 .  }", "results": ["Q21497336", "Q21991662", "Q21111503", "Q21111505", "Q21495939", "Q21127354", "Q21494881", "Q21125233", "Q27553166", "Q7187516", "Q21986864", "Q21126656", "Q7923213", "Q4051790", "Q14914273", "Q21991492", "Q21990838", "Q21990839", "Q21125670", "Q21126890", "Q21433441", "Q21433440", "Q27552557", "Q21990939", "Q21097465", "Q21120732", "Q21981473", "Q21981471", "Q21980004", "Q27549797", "Q27549567", "Q21114649", "Q27547485", "Q27551337", "Q21135669", "Q21130574", "Q21123577", "Q21124815", "Q21125652", "Q21988425", "Q21992225", "Q27547495", "Q21991984", "Q21494840", "Q21991745", "Q21133283", "Q21172711", "Q21172715", "Q21992726", "Q21992724", "Q21992722", "Q21992723", "Q21116285", "Q21992729", "Q21114033", "Q14914138", "Q21111414", "Q21987990", "Q6714959", "Q21986291", "Q21154929", "Q14901156", "Q21172707", "Q21992714", "Q14908237", "Q21980052", "Q27549647", "Q21990177", "Q21136431", "Q21985496", "Q21499037", "Q21117653", "Q21136801", "Q21154289", "Q2851537", "Q27547590", "Q21132779", "Q27549392", "Q27552051", "Q21097452", "Q21121782", "Q21497342", "Q21497344", "Q21497345", "Q27551412", "Q21111450", "Q21499040", "Q5205645", "Q21172723", "Q21992570", "Q21172728", "Q22677262", "Q21986364"], "coreference_resolved_question": "Which nutrients have cytoplasm and late endosome membrane as their cell component?", "s_expression_fn": "(AND (JOIN cell_component cytoplasm) (JOIN instance_of nutrient) (JOIN cell_component late_endosome_membrane))", "predicted_s_expression_fn": "(AND (JOIN (R cell_component) cytoplasm) (JOIN (R cell_component) late_endosome_membrane) (JOIN instance_of nutrient))", "predicted_s_expression": "(AND (JOIN P681 Q79899) (JOIN P681 Q14904869) (JOIN P31 Q181394))", "sparql_attempt_count": 5, "actions": "SELECT ?x WHERE { ?x wdt:P681 wd:Q79899 . ?x wdt:P681 wd:Q14904869 . ?x wdt:P31 wd:Q181394 . }"}, {"turnID": "157.107.3", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Single_Relation", "question": "Which people are a citizen of Belgium and Switzerland ? [CTX]", "answer": "Rolf Soiron, Helene Riedel, Jacques Neirynck, Jeanne de Vietinghoff, Jean-Pierre Danthine, Arthur P\u00e9tronio", "s_expression": "(AND (JOIN P27 Q31) (JOIN P31 Q502895) (JOIN P27 Q39))", "s_expression_cores": ["(AND (JOIN P27 Q31) (JOIN P31 Q502895) (JOIN P27 Q39))"], "sparql_delex": "SELECT ?x WHERE { ?x wdt:P27 wd:Q31 . ?x wdt:P31 wd:Q502895 .  ?x wdt:P27 wd:Q39 .  }", "results": ["Q1686368", "Q21396042", "Q119955", "Q117811", "Q1309701", "Q21094940"], "coreference_resolved_question": "Which people are a citizen of Belgium and Switzerland?", "s_expression_fn": "(AND (JOIN country_of_citizenship Belgium) (JOIN instance_of common_name) (JOIN country_of_citizenship Switzerland))", "predicted_s_expression_fn": "(AND (JOIN (R country_of_citizenship) Belgium) (JOIN (R country_of_citizenship) Switzerland) (JOIN instance_of common_name))", "predicted_s_expression": "(AND (JOIN P27 Q31) (JOIN P27 Q39) (JOIN P31 Q502895))", "sparql_attempt_count": 5, "actions": "SELECT ?x WHERE { ?x wdt:P27 wd:Q31 . ?x wdt:P27 wd:Q39 . ?x wdt:P31 wd:Q502895 . }"}, {"turnID": "157.107.8", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Multiple_Relation", "question": "Which people can play harpsichord and have male as the sex ? [CTX]", "answer": "Some of them are Yves Cuenot, Trevor Pinnock, Pascal Dubreuil, Denis B\u00e9dard, Oscar Milani, Francesco Mazzoli, Christophe Rousset, Giovanni Pietro Del Buono, Antonio Palella, Christopher Hogwood", "s_expression": "(AND (JOIN P1303 Q81982) (JOIN P31 Q502895) (JOIN P21 Q6581097))", "s_expression_cores": ["(AND (JOIN P1303 Q81982) (JOIN P31 Q502895) (JOIN P21 Q6581097))"], "sparql_delex": "SELECT ?x WHERE { ?x wdt:P1303 wd:Q81982 . ?x wdt:P31 wd:Q502895 .  ?x wdt:P21 wd:Q6581097 .  }", "results": ["Q3761917", "Q2982659", "Q463998", "Q3725604", "Q963003", "Q435198", "Q571445", "Q289847", "Q254", "Q4979366", "Q3183956", "Q2535808", "Q563321", "Q17648436", "Q590410", "Q376588", "Q2959912", "Q597101", "Q92244", "Q3219532", "Q699207", "Q457010", "Q18642513", "Q314799", "Q3619994", "Q4526398", "Q5112624", "Q2414155", "Q963831", "Q969937", "Q6733079", "Q3106857", "Q551008", "Q3411056", "Q2805699", "Q339929", "Q718398", "Q2462092", "Q2526926", "Q2451955", "Q1682366", "Q700648", "Q3168842", "Q6264882", "Q3147203", "Q3294067", "Q2856990", "Q18889499", "Q3136187", "Q3287715", "Q739019", "Q3293546", "Q3147213", "Q928954", "Q3168308", "Q2898792", "Q3187447", "Q3351094", "Q1682344", "Q3181642", "Q560325", "Q965256", "Q15041700", "Q4133063", "Q319306", "Q697674", "Q2553716", "Q3168042", "Q459715", "Q3452937", "Q1406863", "Q11434081", "Q2034506", "Q2735112", "Q3568609", "Q45909", "Q3524273", "Q76735", "Q3446656", "Q876342", "Q1270605", "Q17630873", "Q3141950", "Q181474", "Q3167320", "Q23001989", "Q3573587", "Q3190862", "Q119189", "Q339128", "Q2848507", "Q96304", "Q2899489", "Q199856", "Q2094389", "Q4497156", "Q1046616", "Q1843799", "Q1348195", "Q378905", "Q2424360", "Q3298708", "Q3350801", "Q3148824", "Q3613839", "Q1339", "Q2958126", "Q434774"], "coreference_resolved_question": "Which people can play harpsichord and have male as the sex?", "s_expression_fn": "(AND (JOIN instrument harpsichord) (JOIN instance_of common_name) (JOIN sex_or_gender male))", "predicted_s_expression_fn": "(AND (JOIN instrument harpsichord) (JOIN sex_or_gender male) (JOIN instance_of common_name))", "predicted_s_expression": "(AND (JOIN P1303 Q81982) (JOIN P21 Q6581097) (JOIN P31 Q502895))", "sparql_attempt_count": 2, "actions": "SELECT ?x WHERE { ?x wdt:P1303 wd:Q81982 . ?x wdt:P21 wd:Q6581097 . ?x wdt:P31 wd:Q502895 . }"}, {"turnID": "157.140.6", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Multiple_Relation", "question": "Which nucleic acid sequences are found in the taxon Aeromonas hydrophila subsp. hydrophila ATCC 7966 and encodes potassium/proton antiporter    AHA_1475 ? [CTX]", "answer": "potassium/proton antiporter    AHA_1475", "s_expression": "(AND (JOIN P703 Q21102944) (JOIN P31 Q863908) (JOIN P688 Q23429161))", "s_expression_cores": ["(AND (JOIN P703 Q21102944) (JOIN P31 Q863908) (JOIN P688 Q23429161))"], "sparql_delex": "SELECT ?x WHERE { ?x wdt:P703 wd:Q21102944 . ?x wdt:P31 wd:Q863908 .  ?x wdt:P688 wd:Q23429161 .  }", "results": ["Q23115776"], "coreference_resolved_question": "Which nucleic acid sequences are found in the taxon Aeromonas hydrophila subsp. hydrophila ATCC 7966 and encodes potassium/proton antiporter AHA_1475?", "s_expression_fn": "(AND (JOIN found_in_taxon Aeromonas_hydrophila_subsp._hydrophila_ATCC_7966) (JOIN instance_of nucleic_acid_sequence) (JOIN encodes potassium/proton_antiporter____AHA_1475))", "predicted_s_expression_fn": "(AND (JOIN (R found_in_taxon) Aeromonas_hydrophila_subsp._hydrophila_ATCC_7966) (JOIN (R encodes) potassium/proton_antiporter____AHA_1475) (JOIN instance_of nucleic_acid_sequence))", "predicted_s_expression": "(AND (JOIN P703 Q21102944) (JOIN P688 Q23429161) (JOIN P31 Q863908))", "sparql_attempt_count": 5, "actions": "SELECT ?x WHERE { ?x wdt:P703 wd:Q21102944 . ?x wdt:P688 wd:Q23429161 . ?x wdt:P31 wd:Q863908 . }"}, {"turnID": "157.99.2", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Multiple_Relation", "question": "Which people have Maurice G\u00e9rard as father and are a male ? [CTX]", "answer": "Fran\u00e7ois G\u00e9rard", "s_expression": "(AND (JOIN P22 Q3300885) (JOIN P31 Q502895) (JOIN P21 Q6581097))", "s_expression_cores": ["(AND (JOIN P22 Q3300885) (JOIN P31 Q502895) (JOIN P21 Q6581097))"], "sparql_delex": "SELECT ?x WHERE { ?x wdt:P22 wd:Q3300885 . ?x wdt:P31 wd:Q502895 .  ?x wdt:P21 wd:Q6581097 .  }", "results": ["Q3084814"], "coreference_resolved_question": "Which people have Maurice G\u00e9rard as father and are a male?", "s_expression_fn": "(AND (JOIN father Maurice_G\u00e9rard) (JOIN instance_of common_name) (JOIN sex_or_gender male))", "predicted_s_expression_fn": "(AND (JOIN father Maurice_G\u00e9rard) (JOIN sex_or_gender male) (JOIN instance_of common_name))", "predicted_s_expression": "(AND (JOIN P22 Q3300885) (JOIN P21 Q6581097) (JOIN P31 Q502895))", "sparql_attempt_count": 2, "actions": "SELECT ?x WHERE { ?x wdt:P22 wd:Q3300885 . ?x wdt:P21 wd:Q6581097 . ?x wdt:P31 wd:Q502895 . }"}, {"turnID": "157.39.2", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Multiple_Relation", "question": "Which administrative territories are American Academy of Arts and Sciences located in and are the countries of citizenship of Carlos Surinach ? [CTX]", "answer": "United States of America", "s_expression": "(AND (JOIN (R P17) Q463303) (JOIN P31 Q15617994) (JOIN (R P27) Q3274367))", "s_expression_cores": ["(AND (JOIN (R P17) Q463303) (JOIN P31 Q15617994) (JOIN (R P27) Q3274367))"], "sparql_delex": "SELECT ?x WHERE { wd:Q463303 wdt:P17 ?x . ?x wdt:P31 wd:Q15617994 .  wd:Q3274367 wdt:P27 ?x .  }", "results": ["Q30"], "coreference_resolved_question": "Which administrative territories are American Academy of Arts and Sciences located in and are the countries of citizenship of Carlos Surinach?", "s_expression_fn": "(AND (JOIN (R country) American_Academy_of_Arts_and_Sciences) (JOIN instance_of designation_for_an_administrative_territorial_entity) (JOIN (R country_of_citizenship) Carlos_Surinach))", "predicted_s_expression_fn": "(AND (JOIN (R headquarters_location) American_Academy_of_Arts_and_Sciences) (JOIN (R country_of_citizenship) Carlos_Surinach) (JOIN instance_of designation_for_an_administrative_territorial_entity))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "157.116.2", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Single_Relation", "question": "Which people have the gender as male and female ? [CTX]", "answer": "Some of them are Jian-Huan Yang, Suzanne Schulting, Elisabeth Ullmann, Ali Nuhu, Jaiyah Saelua, Naima Mora, Miki Matsumoto, Tinne De Caigny, Kim Ju-yeong, Ivan Almeida", "s_expression": "(AND (JOIN P21 Q6581097) (JOIN P31 Q502895) (JOIN P21 Q6581072))", "s_expression_cores": ["(AND (JOIN P21 Q6581097) (JOIN P31 Q502895) (JOIN P21 Q6581072))"], "sparql_delex": "SELECT ?x WHERE { ?x wdt:P21 wd:Q6581097 . ?x wdt:P31 wd:Q502895 .  ?x wdt:P21 wd:Q6581072 .  }", "results": ["Q12966459", "Q17600942", "Q3260705", "Q5874237", "Q21391750", "Q17225819", "Q5972494", "Q16941580", "Q16733519", "Q11622868", "Q6702791", "Q10263785", "Q6571041", "Q16732132", "Q24264223", "Q20401379", "Q20119921", "Q2312612", "Q16164967", "Q242700", "Q6555624", "Q12586819", "Q23698979", "Q17628096", "Q22342662", "Q525066", "Q9544977", "Q503007", "Q22280111", "Q22102078", "Q5482749", "Q21392153", "Q201204", "Q10281088", "Q442804", "Q16767898", "Q22570074", "Q21601127", "Q12403076", "Q14432239", "Q12734885", "Q734662", "Q24500675", "Q24034956", "Q19957341", "Q6258596", "Q22236117", "Q22808784", "Q11379959", "Q6003690", "Q24807469", "Q21857402", "Q21258362", "Q4979792", "Q11449790", "Q22001922", "Q3575012", "Q3764762", "Q7377573", "Q20068820", "Q6031433", "Q21794041", "Q6438624", "Q25768293", "Q19448005", "Q21503040", "Q17148031", "Q11604340", "Q17158335", "Q11815936", "Q17364527", "Q22280435", "Q15934058", "Q18559837", "Q11201210", "Q25748324", "Q459844", "Q2379965", "Q3291942", "Q17621841", "Q20980163", "Q453573", "Q11531266", "Q4255661", "Q22675675", "Q528434", "Q237726", "Q74813", "Q2668396", "Q298423", "Q22073991", "Q503575", "Q23416861", "Q15807938", "Q19357604", "Q18049905", "Q26921704", "Q2882250", "Q18346977", "Q2939204", "Q3809749", "Q12685049", "Q21033490", "Q5856706", "Q16165783", "Q5569499", "Q12613187", "Q7849225", "Q16582167", "Q19543099", "Q16865281", "Q22095108", "Q12872947", "Q15433626"], "coreference_resolved_question": "Which people have the gender as male and female?", "s_expression_fn": "(AND (JOIN sex_or_gender male) (JOIN instance_of common_name) (JOIN sex_or_gender female))", "predicted_s_expression_fn": "(AND (JOIN (R sex_or_gender) male) (JOIN (R sex_or_gender) female) (JOIN instance_of common_name))", "predicted_s_expression": "(AND (JOIN P21 Q6581097) (JOIN P21 Q6581072) (JOIN P31 Q502895))", "sparql_attempt_count": 5, "actions": "SELECT ?x WHERE { ?x wdt:P21 wd:Q6581097 . ?x wdt:P21 wd:Q6581072 . ?x wdt:P31 wd:Q502895 . }"}, {"turnID": "157.101.3", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Single_Relation|Incomplete", "question": "Which political territory is the country of citizenship of Herbert Schachtschneider ? [SEP] Germany [SEP] Which human settlement was that person born at ? [SEP] Olsztyn [SEP] Or Tetsur\u014d Adachi? [CTX]", "answer": "Tait\u014d-ku, Olsztyn", "s_expression": "(OR (AND (JOIN (R P19) Q1609005) (JOIN P31 Q486972)) (AND (JOIN (R P19) Q11451520) (JOIN P31 Q486972)))", "s_expression_cores": ["(AND (JOIN (R P19) Q1609005) (JOIN P31 Q486972))", "(AND (JOIN (R P19) Q11451520) (JOIN P31 Q486972))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q1609005 wdt:P19 ?x . ?x wdt:P31 wd:Q486972 .  } UNION { wd:Q11451520 wdt:P19 ?x . ?x wdt:P31 wd:Q486972 .  } }", "results": ["Q232641", "Q82765"], "coreference_resolved_question": "Which human settlement was Tetsur\u014d Adachi born at?", "s_expression_fn": "(OR (AND (JOIN (R place_of_birth) Herbert_Schachtschneider) (JOIN instance_of human_settlement)) (AND (JOIN (R place_of_birth) Tetsur\u014d_Adachi) (JOIN instance_of human_settlement)))", "predicted_s_expression_fn": "(OR (JOIN (R place_of_birth) Herbert_Schachtschneider) (JOIN (R place_of_birth) Tetsur\u014d_Adachi))", "predicted_s_expression": "(OR (JOIN (R P19) Q1609005) (JOIN (R P19) Q11451520))", "sparql_attempt_count": 1, "actions": "SELECT ?x WHERE { { wd:Q1609005 wdt:P19 ?x . } UNION { wd:Q11451520 wdt:P19 ?x . } }"}, {"turnID": "157.57.5", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Single_Relation", "question": "Which administrative territories are the native countriesof Pierre Chevallier and Hadia Ben Abdelghani ? [CTX]", "answer": "France", "s_expression": "(AND (JOIN (R P27) Q3384423) (JOIN P31 Q15617994) (JOIN (R P27) Q23017763))", "s_expression_cores": ["(AND (JOIN (R P27) Q3384423) (JOIN P31 Q15617994) (JOIN (R P27) Q23017763))"], "sparql_delex": "SELECT ?x WHERE { wd:Q3384423 wdt:P27 ?x . ?x wdt:P31 wd:Q15617994 .  wd:Q23017763 wdt:P27 ?x .  }", "results": ["Q142"], "coreference_resolved_question": "Which administrative territories are the native countries of Pierre Chevallier and Hadia Ben Abdelghani?", "s_expression_fn": "(AND (JOIN (R country_of_citizenship) Pierre_Chevallier) (JOIN instance_of designation_for_an_administrative_territorial_entity) (JOIN (R country_of_citizenship) Hadia_Ben_Abdelghani))", "predicted_s_expression_fn": "(DISTINCT (AND (JOIN (R country_of_citizenship) (VALUES Pierre_Chevallier Hadia_Ben_Abdelghani)) (JOIN instance_of designation_for_an_administrative_territorial_entity)))", "predicted_s_expression": "(DISTINCT (AND (JOIN (R P27) (VALUES Q3384423 Q23017763)) (JOIN P31 Q15617994)))", "sparql_attempt_count": 2, "actions": "SELECT DISTINCT ?x WHERE { VALUES ?x0 { wd:Q3384423 wd:Q23017763 } . ?x0 wdt:P27 ?x . ?x wdt:P31 wd:Q15617994 . }"}, {"turnID": "157.17.3", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Single_Relation|Incomplete", "question": "Which city is the work location of Johann Friedrich M\u00fcller ? [SEP] Dresden [SEP] Who is associated with that person ? [SEP] M\u00fcller [SEP] Which sex does that person belong to ? [SEP] male [SEP] And also Reinhold Wolff [CTX]", "answer": "male", "s_expression": "(AND (JOIN (R P21) Q4310019) (JOIN P31 Q290) (JOIN (R P21) Q2141592))", "s_expression_cores": ["(AND (JOIN (R P21) Q4310019) (JOIN P31 Q290) (JOIN (R P21) Q2141592))"], "sparql_delex": "SELECT ?x WHERE { wd:Q4310019 wdt:P21 ?x . ?x wdt:P31 wd:Q290 .  wd:Q2141592 wdt:P21 ?x .  }", "results": ["Q6581097"], "coreference_resolved_question": "Which sex does Reinhold Wolff belong to?", "s_expression_fn": "(AND (JOIN (R sex_or_gender) Johann_Friedrich_M\u00fcller) (JOIN instance_of sex) (JOIN (R sex_or_gender) Reinhold_Wolff))", "predicted_s_expression_fn": "(AND (JOIN (R sex_or_gender) Reinhold_Wolff) (JOIN instance_of sex))", "predicted_s_expression": "(AND (JOIN (R P21) Q2141592) (JOIN P31 Q290))", "sparql_attempt_count": 2, "actions": "SELECT ?x WHERE { wd:Q2141592 wdt:P21 ?x . ?x wdt:P31 wd:Q290 . }"}, {"turnID": "157.26.4", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Single_Relation|Incomplete", "question": "Which administrative territory does Frank Hovland belong to ? [SEP] Norway [SEP] Or Abdelali Abdelmoula? [CTX]", "answer": "Norway, Morocco", "s_expression": "(OR (AND (JOIN (R P27) Q5487339) (JOIN P31 Q15617994)) (AND (JOIN (R P27) Q2820964) (JOIN P31 Q15617994)))", "s_expression_cores": ["(AND (JOIN (R P27) Q5487339) (JOIN P31 Q15617994))", "(AND (JOIN (R P27) Q2820964) (JOIN P31 Q15617994))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q5487339 wdt:P27 ?x . ?x wdt:P31 wd:Q15617994 .  } UNION { wd:Q2820964 wdt:P27 ?x . ?x wdt:P31 wd:Q15617994 .  } }", "results": ["Q20", "Q1028"], "coreference_resolved_question": "Which administrative territory does Or Abdelali Abdelmoula belong to?", "s_expression_fn": "(OR (AND (JOIN (R country_of_citizenship) Frank_Hovland) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (AND (JOIN (R country_of_citizenship) Abdelali_Abdelmoula) (JOIN instance_of designation_for_an_administrative_territorial_entity)))", "predicted_s_expression_fn": "(AND (JOIN (R country_of_citizenship) Abdelali_Abdelmoula) (JOIN instance_of designation_for_an_administrative_territorial_entity))", "predicted_s_expression": "(AND (JOIN (R P27) Q2820964) (JOIN P31 Q15617994))", "sparql_attempt_count": 2, "actions": "SELECT ?x WHERE { wd:Q2820964 wdt:P27 ?x . ?x wdt:P31 wd:Q15617994 . }"}, {"turnID": "157.92.3", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Single_Relation", "question": "Which political territories are Carl-Heinz Kliemann and Boris Kodjoe a civilian of ? [CTX]", "answer": "Germany", "s_expression": "(AND (JOIN (R P27) Q1036501) (JOIN P31 Q1048835) (JOIN (R P27) Q112167))", "s_expression_cores": ["(AND (JOIN (R P27) Q1036501) (JOIN P31 Q1048835) (JOIN (R P27) Q112167))"], "sparql_delex": "SELECT ?x WHERE { wd:Q1036501 wdt:P27 ?x . ?x wdt:P31 wd:Q1048835 .  wd:Q112167 wdt:P27 ?x .  }", "results": ["Q183"], "coreference_resolved_question": "Which political territories are Carl-Heinz Kliemann and Boris Kodjoe a civilian of?", "s_expression_fn": "(AND (JOIN (R country_of_citizenship) Carl-Heinz_Kliemann) (JOIN instance_of political_territorial_entity) (JOIN (R country_of_citizenship) Boris_Kodjoe))", "predicted_s_expression_fn": "(DISTINCT (AND (JOIN (R country_of_citizenship) (VALUES Carl-Heinz_Kliemann Boris_Kodjoe)) (JOIN instance_of political_territorial_entity))", "predicted_s_expression": "", "sparql_attempt_count": 2, "actions": ""}, {"turnID": "157.84.4", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Multiple_Relation", "question": "What are spoken by Philip Honywood and are considered to be the original language of creation of Mob as tumor suppressor is activated by Hippo kinase for growth inhibition in Drosophila ? [CTX]", "answer": "English", "s_expression": "(AND (JOIN (R P1412) Q7183761) (JOIN P31 Q34770) (JOIN (R P364) Q24670738))", "s_expression_cores": ["(AND (JOIN (R P1412) Q7183761) (JOIN P31 Q34770) (JOIN (R P364) Q24670738))"], "sparql_delex": "SELECT ?x WHERE { wd:Q7183761 wdt:P1412 ?x . ?x wdt:P31 wd:Q34770 .  wd:Q24670738 wdt:P364 ?x .  }", "results": ["Q1860"], "coreference_resolved_question": "What are spoken by Philip Honywood and are considered to be the original language of creation of Mob as tumor suppressor is activated by Hippo kinase for growth inhibition in Drosophila?", "s_expression_fn": "(AND (JOIN (R languages_spoken,_written_or_signed) Philip_Honywood) (JOIN instance_of language) (JOIN (R original_language_of_film_or_TV_show) Mob_as_tumor_suppressor_is_activated_by_Hippo_kinase_for_growth_inhibition_in_Drosophila))", "predicted_s_expression_fn": "(AND (JOIN (R language_of_work_or_name) Philip_Honywood) (JOIN (R original_language_of_film_or_TV_show) Mob_as_tumor_suppressor_is_activated_by_Hippo_kinase_for_growth_inhibition_in_Drosophila))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "157.119.3", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Single_Relation|Incomplete", "question": "What was won by J\u00e9r\u00f4me Esnault ? [SEP] Knight of the Legion of Honour [SEP] Which french administrative division is the birthplace of that person ? [SEP] Falaise [SEP] Or St\u00e9phane Plaza? [CTX]", "answer": "Falaise, Suresnes", "s_expression": "(OR (AND (JOIN (R P19) Q3190891) (JOIN P31 Q20667921)) (AND (JOIN (R P19) Q3502013) (JOIN P31 Q20667921)))", "s_expression_cores": ["(AND (JOIN (R P19) Q3190891) (JOIN P31 Q20667921))", "(AND (JOIN (R P19) Q3502013) (JOIN P31 Q20667921))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q3190891 wdt:P19 ?x . ?x wdt:P31 wd:Q20667921 .  } UNION { wd:Q3502013 wdt:P19 ?x . ?x wdt:P31 wd:Q20667921 .  } }", "results": ["Q193306", "Q193929"], "coreference_resolved_question": "Which french administrative division is the birthplace of St\u00e9phane Plaza?", "s_expression_fn": "(OR (AND (JOIN (R place_of_birth) J\u00e9r\u00f4me_Esnault) (JOIN instance_of type_of_french_administrative_division)) (AND (JOIN (R place_of_birth) St\u00e9phane_Plaza) (JOIN instance_of type_of_french_administrative_division)))", "predicted_s_expression_fn": "(OR (JOIN (R place_of_birth) J\u00e9r\u00f4me_Esnault (JOIN (R place_of_birth) St\u00e9phane_Plaza))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "157.80.11", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Multiple_Relation", "question": "Which administrative territories are the countries of citizenship of Manuel Guti\u00e9rrez de la Concha and can manage SA 315B Lama ? [CTX]", "answer": "Argentina", "s_expression": "(AND (JOIN (R P27) Q325762) (JOIN P31 Q15617994) (JOIN (R P137) Q17374851))", "s_expression_cores": ["(AND (JOIN (R P27) Q325762) (JOIN P31 Q15617994) (JOIN (R P137) Q17374851))"], "sparql_delex": "SELECT ?x WHERE { wd:Q325762 wdt:P27 ?x . ?x wdt:P31 wd:Q15617994 .  wd:Q17374851 wdt:P137 ?x .  }", "results": ["Q414"], "coreference_resolved_question": "Which administrative territories are the countries of citizenship of Manuel Guti\u00e9rrez de la Concha and can manage SA 315B Lama?", "s_expression_fn": "(AND (JOIN (R country_of_citizenship) Manuel_Guti\u00e9rrez_de_la_Concha) (JOIN instance_of designation_for_an_administrative_territorial_entity) (JOIN (R operator) SA_315B_Lama))", "predicted_s_expression_fn": "(AND (JOIN (R country_of_citizenship) Manuel_Guti\u00e9rrez_de_la_Concha) (JOIN (R operator) SA_315B_Lama) (JOIN instance_of designation_for_an_administrative_territorial_entity))", "predicted_s_expression": "(AND (JOIN (R P27) Q325762) (JOIN (R P137) Q17374851) (JOIN P31 Q15617994))", "sparql_attempt_count": 2, "actions": "SELECT ?x WHERE { wd:Q325762 wdt:P27 ?x . wd:Q17374851 wdt:P137 ?x . ?x wdt:P31 wd:Q15617994 . }"}, {"turnID": "157.13.5", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Single_Relation|Incomplete", "question": "Which sex does Nancy Kemp-Arendt possess ? [SEP] female [SEP] And also Mayumi Tsuchiya [CTX]", "answer": "female", "s_expression": "(AND (JOIN (R P21) Q1920283) (JOIN P31 Q290) (JOIN (R P21) Q11423301))", "s_expression_cores": ["(AND (JOIN (R P21) Q1920283) (JOIN P31 Q290) (JOIN (R P21) Q11423301))"], "sparql_delex": "SELECT ?x WHERE { wd:Q1920283 wdt:P21 ?x . ?x wdt:P31 wd:Q290 .  wd:Q11423301 wdt:P21 ?x .  }", "results": ["Q6581072"], "coreference_resolved_question": "Which sex does Mayumi Tsuchiya possess?", "s_expression_fn": "(AND (JOIN (R sex_or_gender) Nancy_Kemp-Arendt) (JOIN instance_of sex) (JOIN (R sex_or_gender) Mayumi_Tsuchiya))", "predicted_s_expression_fn": "(AND (JOIN (R sex_or_gender) Nancy_Kemp-Arendt) (JOIN instance_of sex) (JOIN (R sex_or_gender) Mayumi_Tsuchiya))", "predicted_s_expression": "(AND (JOIN (R P21) Q1920283) (JOIN P31 Q290) (JOIN (R P21) Q11423301))", "sparql_attempt_count": 2, "actions": "SELECT ?x WHERE { wd:Q1920283 wdt:P21 ?x . ?x wdt:P31 wd:Q290 . wd:Q11423301 wdt:P21 ?x . }"}, {"turnID": "157.38.5", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Multiple_Relation", "question": "Which thoroughfares can be described as facility operator of Swedish Transport Administration and have 1435 mm track gauge as the track gauge ? [CTX]", "answer": "Tornio\u2013Haparanda railway, \u00c5dalen Line", "s_expression": "(AND (JOIN P137 Q1677108) (JOIN P31 Q83620) (JOIN P1064 Q1999572))", "s_expression_cores": ["(AND (JOIN P137 Q1677108) (JOIN P31 Q83620) (JOIN P1064 Q1999572))"], "sparql_delex": "SELECT ?x WHERE { ?x wdt:P137 wd:Q1677108 . ?x wdt:P31 wd:Q83620 .  ?x wdt:P1064 wd:Q1999572 .  }", "results": ["Q15744689", "Q1799633"], "coreference_resolved_question": "Which thoroughfares can be described as facility operator of Swedish Transport Administration and have 1435 mm track gauge as the track gauge?", "s_expression_fn": "(AND (JOIN operator Swedish_Transport_Administration) (JOIN instance_of thoroughfare) (JOIN track_gauge 1435_mm_track_gauge))", "predicted_s_expression_fn": "(AND (JOIN facility_operator Swedish_Transport_Administration) (JOIN track_gauge 1435_mm) (JOIN instance_of thoroughfare))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "157.38.6", "question_type": "Logical Reasoning (All)", "description": "Logical|Difference|Multiple_Relation", "question": "Which administrative territories have diplomatic relationships with United States of America and are not the countries of citizenship of Vyacheslav Lopatin ? [CTX]", "answer": "Some of them are Israel, Zambia, Serbia, Cape Verde, Japan, Brazil, Albania, India, Lithuania, Afghanistan", "s_expression": "(DIFF (AND (JOIN (R P530) Q30) (JOIN P31 Q15617994)) (JOIN (R P27) Q4266607))", "s_expression_cores": ["(AND (JOIN (R P530) Q30) (JOIN P31 Q15617994))", "(JOIN (R P27) Q4266607)"], "sparql_delex": "SELECT ?x WHERE { wd:Q30 wdt:P530 ?x . ?x wdt:P31 wd:Q15617994 .  FILTER NOT EXISTS { wd:Q4266607 wdt:P27 ?x .  } }", "results": ["Q805", "Q38", "Q222", "Q801", "Q155", "Q148", "Q1011", "Q889", "Q796", "Q17", "Q37", "Q953", "Q668", "Q403", "Q347", "Q414"], "coreference_resolved_question": "Which administrative territories have diplomatic relationships with United States of America and are not the countries of citizenship of Vyacheslav Lopatin?", "s_expression_fn": "(DIFF (AND (JOIN (R diplomatic_relation) United_States_of_America) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (JOIN (R country_of_citizenship) Vyacheslav_Lopatin))", "predicted_s_expression_fn": "(DIFF (AND (JOIN diplomatic_relation United_States_of_America) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (AND (JOIN (R country_of_citizenship) Vyacheslav_Lopatin) (JOIN instance_of designation_for_an_administrative_territorial_entity)))", "predicted_s_expression": "", "sparql_attempt_count": 1, "actions": ""}, {"turnID": "157.81.3", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Single_Relation|Incomplete", "question": "Where was Antara Biswas educated ? [SEP] University of Calcutta [SEP] Which sex does that person belong to ? [SEP] female [SEP] What is the job of that person ? [SEP] actor [SEP] Or Katie Cole? [CTX]", "answer": "songwriter, pianist, actor, singer", "s_expression": "(OR (AND (JOIN (R P106) Q4770968) (JOIN P31 Q12737077)) (AND (JOIN (R P106) Q16204007) (JOIN P31 Q12737077)))", "s_expression_cores": ["(AND (JOIN (R P106) Q4770968) (JOIN P31 Q12737077))", "(AND (JOIN (R P106) Q16204007) (JOIN P31 Q12737077))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q4770968 wdt:P106 ?x . ?x wdt:P31 wd:Q12737077 .  } UNION { wd:Q16204007 wdt:P106 ?x . ?x wdt:P31 wd:Q12737077 .  } }", "results": ["Q753110", "Q486748", "Q33999", "Q177220"], "coreference_resolved_question": "What is the job of Katie Cole?", "s_expression_fn": "(OR (AND (JOIN (R occupation) Antara_Biswas) (JOIN instance_of occupation)) (AND (JOIN (R occupation) Katie_Cole) (JOIN instance_of occupation)))", "predicted_s_expression_fn": "(OR (AND (JOIN (R occupation) Antara_Biswas) (AND (JOIN (R occupation) Katie_Cole))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "157.105.4", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Multiple_Relation", "question": "Which nucleic acid sequences encode Calcium-activated chloride channel regulator 4 and species belongs to the taxon Homo sapiens ? [CTX]", "answer": "CLCA4", "s_expression": "(AND (JOIN P688 Q21100825) (JOIN P31 Q863908) (JOIN P703 Q15978631))", "s_expression_cores": ["(AND (JOIN P688 Q21100825) (JOIN P31 Q863908) (JOIN P703 Q15978631))"], "sparql_delex": "SELECT ?x WHERE { ?x wdt:P688 wd:Q21100825 . ?x wdt:P31 wd:Q863908 .  ?x wdt:P703 wd:Q15978631 .  }", "results": ["Q18036499"], "coreference_resolved_question": "Which nucleic acid sequences encode Calcium-activated chloride channel regulator 4 and species belongs to the taxon Homo sapiens?", "s_expression_fn": "(AND (JOIN encodes Calcium-activated_chloride_channel_regulator_4) (JOIN instance_of nucleic_acid_sequence) (JOIN found_in_taxon Homo_sapiens))", "predicted_s_expression_fn": "(AND (JOIN encoded_by Calcium-activated_chloride_channel_regulator_4) (JOIN instance_of nucleic_acid_sequence) (JOIN taxon Homo_sapiens))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "157.139.6", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Multiple_Relation", "question": "Which people are an alumni of Harrow School and are a male ? [CTX]", "answer": "Some of them are John Spencer, 5th Earl Spencer, Anthony Trollope, Esme Howard, 1st Baron Howard of Penrith, Allan Heywood Bright, Timothy Royle, Alexander Charles Barclay, George Blenkin, Neville Ford, Guy Jackson, Reginald Talbot", "s_expression": "(AND (JOIN P69 Q1247373) (JOIN P31 Q502895) (JOIN P21 Q6581097))", "s_expression_cores": ["(AND (JOIN P69 Q1247373) (JOIN P31 Q502895) (JOIN P21 Q6581097))"], "sparql_delex": "SELECT ?x WHERE { ?x wdt:P69 wd:Q1247373 . ?x wdt:P31 wd:Q502895 .  ?x wdt:P21 wd:Q6581097 .  }", "results": ["Q963692", "Q6260191", "Q2364372", "Q15994423", "Q5720481", "Q7526224", "Q366142", "Q6679103", "Q14945576", "Q4723524", "Q188929", "Q5549256", "Q1063784", "Q4696679", "Q11279105", "Q7184081", "Q5735013", "Q6259223", "Q15072622", "Q5729188", "Q5538102", "Q5342094", "Q4725272", "Q576195", "Q5499008", "Q5345890", "Q15072626", "Q1329617", "Q5534707", "Q6904060", "Q16239240", "Q6904063", "Q2043615", "Q7328538", "Q3528648", "Q6235642", "Q4718311", "Q5343174", "Q5728208", "Q4730508", "Q8020168", "Q5730138", "Q3306233", "Q5725110", "Q15072588", "Q15072586", "Q5341712", "Q15072585", "Q15072582", "Q5921636", "Q24631", "Q15072616", "Q1680868", "Q8018620", "Q15072615", "Q435216", "Q4821399", "Q5931679", "Q5386045", "Q5082315", "Q469922", "Q15971082", "Q335449", "Q7598653", "Q5077443", "Q732414", "Q1628686", "Q4893221", "Q15999887", "Q4931095", "Q5720505", "Q15989933", "Q7087720", "Q4867241", "Q7964379", "Q7559823", "Q5239654", "Q7069458", "Q5082366", "Q7794360", "Q6230284", "Q13522549", "Q7328612", "Q13529910", "Q5082882", "Q1340936", "Q5083718", "Q5163843", "Q7526772", "Q15429036", "Q13522499", "Q5442158", "Q654213", "Q6135007", "Q5340248", "Q4685934", "Q4741789", "Q8012175", "Q720334", "Q4773176", "Q5498636", "Q5076400", "Q6227493", "Q7356589", "Q5620315", "Q299565", "Q15989796", "Q8003898", "Q5549593", "Q716250", "Q7526880", "Q7596635", "Q6239116", "Q4111755", "Q6128501", "Q16061349", "Q39168", "Q7527552", "Q7346702", "Q5081069", "Q3828136", "Q7526954", "Q7236341", "Q7344679", "Q5542726", "Q5542727", "Q5006825", "Q5726421", "Q7518787", "Q7324334", "Q336307", "Q5932255", "Q5498029", "Q7341450", "Q4772643", "Q1237389", "Q338153", "Q707126", "Q5614408", "Q2159731", "Q3701241", "Q3701242", "Q890109", "Q5717091", "Q6141977", "Q4821445", "Q5546683", "Q166635", "Q7786962", "Q5524369", "Q7346926", "Q4720475", "Q7175198", "Q5262852", "Q5422989", "Q5481746", "Q318399", "Q11259457", "Q706899", "Q5056091", "Q48185", "Q5485881", "Q7527105", "Q6389951", "Q4679288", "Q7349155", "Q2545678", "Q386213", "Q5343123", "Q7527100", "Q6220328", "Q1047", "Q333294", "Q7343580", "Q6239273", "Q6140652", "Q233992", "Q7525997", "Q4800379", "Q4684458", "Q130799", "Q5236588", "Q7529846", "Q7529847", "Q3048121", "Q7004690", "Q5739629", "Q5537237", "Q352725", "Q5660230", "Q5539290", "Q721915", "Q4772387", "Q352836", "Q5537238", "Q8015709", "Q4865231", "Q7345792", "Q3181824", "Q7176225", "Q6122068", "Q7273889", "Q6134804", "Q3088214", "Q5386204", "Q6218761", "Q2483097", "Q7343105", "Q538191", "Q6105456", "Q146906", "Q7326290", "Q7793494", "Q1532902", "Q7343089", "Q16012127", "Q348489", "Q5545156", "Q2544896", "Q5044464", "Q531668", "Q5930622", "Q16861781", "Q5345405", "Q7150405", "Q324028", "Q5480156", "Q5498849", "Q7184480", "Q5480651", "Q7787007", "Q3443364", "Q5725966", "Q5083776", "Q6232754", "Q11802729", "Q4786226", "Q1743249", "Q4708715", "Q5387107", "Q1351047", "Q1675820", "Q4795090", "Q321055", "Q8005084", "Q6504003", "Q5113133", "Q4977200", "Q3530726", "Q7052542", "Q5113138", "Q608103", "Q333121", "Q5622617", "Q7184324", "Q2679435", "Q7615802", "Q8018648", "Q7508994", "Q5416296", "Q7791871", "Q13519830", "Q7350298", "Q2044609", "Q7032381", "Q3075604", "Q3809310", "Q4867100", "Q334633", "Q5076398", "Q7175325", "Q3357504", "Q5342817", "Q333011", "Q1390829", "Q355300", "Q15072623", "Q6181400", "Q13529783", "Q15072627", "Q6390844", "Q538549", "Q4806068", "Q15072628", "Q11703211", "Q973713", "Q181875", "Q553229", "Q4758452", "Q7526146", "Q335513", "Q7527160", "Q8014585", "Q5534765", "Q4865275", "Q3098306", "Q3787726", "Q5482794", "Q14945626", "Q4798258", "Q8005428", "Q6248836", "Q5932481", "Q175969", "Q4171067", "Q15072613", "Q5081405", "Q6119114", "Q6787053", "Q6119110", "Q637459", "Q3814725", "Q4885947", "Q5622371", "Q6140339", "Q6256600", "Q7983024", "Q336729", "Q16023467", "Q3737152", "Q7790328", "Q7788354", "Q4716612", "Q6791359", "Q1544162", "Q7527302", "Q7172971", "Q6253138", "Q733045", "Q1701622", "Q2743474", "Q713468", "Q6229408", "Q5341962", "Q6525519", "Q7527775", "Q338013", "Q5394043", "Q6697616", "Q333573", "Q5480759", "Q768374", "Q5728832", "Q3057215", "Q7525966", "Q15411502", "Q7528925", "Q697096", "Q4385609", "Q8006910", "Q1386779", "Q6835229", "Q372692", "Q8006851", "Q4980085", "Q5497071", "Q5079420", "Q266452", "Q7528250", "Q5540252", "Q8001941", "Q5343469", "Q7526800", "Q5343339", "Q5499113", "Q5498753", "Q7167613", "Q6163277", "Q7620761", "Q15999965", "Q6593713", "Q193656", "Q16031622", "Q7525917", "Q6230463", "Q6128407", "Q18162568", "Q333117", "Q3366354", "Q5174264", "Q4718571", "Q7323773", "Q901039", "Q7184428", "Q7020297", "Q7294930", "Q7172790", "Q12798541", "Q11802276", "Q1655480", "Q7965993", "Q1792629", "Q6679152", "Q333628", "Q5537525", "Q333336", "Q3790100", "Q5343095", "Q14946876", "Q7067829", "Q5321909", "Q8015058", "Q5982417", "Q7575987", "Q5498571", "Q1189353", "Q7528021", "Q11801571", "Q654747", "Q5162620", "Q4821580", "Q1904003", "Q5718593", "Q13530022", "Q4485108", "Q82248", "Q5442790", "Q5301617", "Q12987967", "Q335420", "Q5730708", "Q6847197", "Q6832490", "Q244674", "Q7526055", "Q311093", "Q7327666", "Q5186046", "Q5982526", "Q4895823", "Q1286149", "Q5079208", "Q6525200", "Q6233717", "Q6307688", "Q7350434", "Q3526077", "Q4889131", "Q7793567", "Q6222086", "Q5080266", "Q7689909", "Q4393229", "Q7004578", "Q13529930", "Q7610754", "Q5561017", "Q7349560", "Q5735231", "Q2544868", "Q333808", "Q310012", "Q5667744", "Q5234246", "Q5343505", "Q3441497", "Q6828483", "Q7787385", "Q5541544", "Q473156", "Q7375109", "Q6251768", "Q5343375", "Q337106", "Q4702898", "Q6697588", "Q7965478", "Q5727247", "Q2543810", "Q7324499", "Q15990179", "Q6104731", "Q7526201", "Q14945451", "Q302187", "Q6679043", "Q5584991", "Q5927282", "Q13522548", "Q817438", "Q5497244", "Q6264121", "Q8010084", "Q3040905", "Q4799154", "Q5544214", "Q5739967", "Q6146026", "Q6307142", "Q22667426", "Q6142033", "Q3611538", "Q16750546", "Q75389", "Q5902127", "Q8016", "Q1373357", "Q4823115", "Q518393", "Q5499028", "Q5553487", "Q1562799", "Q5082546", "Q786474", "Q5071249", "Q5486457", "Q7103053", "Q7795282", "Q7411194", "Q267579", "Q7103052", "Q8016968", "Q7525995", "Q1113837", "Q6096846", "Q6144076", "Q5546317", "Q6255110", "Q5339663", "Q5539956", "Q7365303", "Q261718", "Q8008633", "Q6114608", "Q15971120", "Q5482762", "Q7364667", "Q6290241", "Q4722461", "Q5902765", "Q5298118", "Q8012088", "Q5080191", "Q7527933", "Q6500533", "Q5321936", "Q3081745", "Q7032494", "Q7528702", "Q6084189", "Q7576040", "Q6860192", "Q7177008", "Q3528586", "Q4719669", "Q6947702", "Q2607962", "Q5076335", "Q3526984", "Q5668272", "Q5302004", "Q8012594", "Q3246771", "Q5458500", "Q3524854", "Q7183441", "Q6767432", "Q4786190", "Q6969792", "Q6969791", "Q15072605", "Q2837714", "Q7345451", "Q16030413", "Q332347", "Q11171578", "Q1739864", "Q1804453", "Q15072607", "Q7807488", "Q3337821", "Q5342251", "Q5482511", "Q5536981", "Q7526496", "Q5081693", "Q968340", "Q7357031", "Q5719753", "Q5196779", "Q337142", "Q1452891", "Q347381", "Q6969470", "Q8009468", "Q7527380", "Q1477948", "Q7352369", "Q770416", "Q246026", "Q4799771", "Q8016134", "Q8005976", "Q5679", "Q7344985", "Q7344986", "Q469884", "Q13842475", "Q2077068", "Q6829318", "Q1711982", "Q7527637", "Q5339871", "Q4867184", "Q335517", "Q548928", "Q18450", "Q5774989", "Q3568524", "Q7333716", "Q241031", "Q2545470", "Q5314327", "Q6039520", "Q15072603", "Q4786750", "Q13522445", "Q4357724", "Q6108634", "Q6110971", "Q716762", "Q6261921", "Q4722340", "Q7351314", "Q6142091", "Q7183875", "Q14945462", "Q4730689", "Q7899928", "Q4733782", "Q664275", "Q7329959", "Q7527444", "Q861129", "Q5028109", "Q5075875", "Q2153404", "Q5546198", "Q8017644", "Q1724949", "Q7052562", "Q7152730", "Q5622227", "Q15990273", "Q7313339", "Q12988184", "Q1606752", "Q6107323", "Q854922", "Q336580", "Q249816", "Q309980", "Q5537045", "Q6679825", "Q5498541", "Q4154874", "Q7350806", "Q337696", "Q3557201", "Q13582499", "Q6225256", "Q5589832", "Q7103051", "Q8017584", "Q5727573", "Q15072599", "Q7103054", "Q15072595", "Q15072594", "Q15072591", "Q15072590", "Q15072593", "Q13530013", "Q15072609", "Q336421", "Q6742594", "Q333429", "Q332521", "Q15072600", "Q5481380", "Q15072602", "Q7795111", "Q7343011", "Q5719311", "Q7410754", "Q282892", "Q333887", "Q7527964", "Q216723", "Q7527064", "Q6390461", "Q6527341", "Q12696236", "Q5524642", "Q503767", "Q661562", "Q1147508", "Q690708", "Q8005402", "Q930203", "Q5560912", "Q7308782", "Q7989447", "Q1156348", "Q4685014", "Q6866366", "Q1703250", "Q16010521", "Q1217757", "Q914130", "Q5541285", "Q8006770", "Q7344946", "Q427394", "Q967572", "Q4799034", "Q7349678", "Q923032", "Q6831280", "Q934973", "Q315262", "Q15040069", "Q5344870", "Q7526764", "Q13529908", "Q7528447", "Q3525160", "Q5078706", "Q4977230", "Q3376671", "Q4495159", "Q6220252", "Q334984", "Q258963", "Q92948", "Q7347747", "Q1707800", "Q7608874", "Q5075502", "Q6257135", "Q7526897", "Q8006971", "Q7695003", "Q7328362", "Q7791824", "Q7964619", "Q1496455", "Q6222778", "Q7244259", "Q8016988", "Q5549643", "Q5301937", "Q335493", "Q1507845", "Q5536165", "Q1063940", "Q7794636", "Q5542717", "Q18394907", "Q7791416", "Q16749787", "Q5301564", "Q8009758", "Q5084659", "Q689964", "Q4786330", "Q132331", "Q7352635", "Q123273", "Q5081087", "Q1890375", "Q335370", "Q4716803", "Q5056253", "Q7528622", "Q335270", "Q11271679", "Q1191104", "Q5079683", "Q7788382", "Q7686236", "Q6181941", "Q5262796", "Q1399454", "Q5543927", "Q3294113", "Q5131329", "Q5539800", "Q6128872", "Q7167346", "Q8015215", "Q83297", "Q957699", "Q153408", "Q1245728", "Q7184040", "Q6742487", "Q544627", "Q6140199", "Q5723304", "Q2166151", "Q5082448", "Q332995", "Q6138652", "Q6115819", "Q15072578", "Q15072577", "Q5132948", "Q3557561", "Q15990226", "Q3569027", "Q7341839", "Q5719782", "Q5341629", "Q5735554", "Q3403643", "Q7243756", "Q333281", "Q5496801", "Q6240380", "Q7327436", "Q970185", "Q4800004", "Q14945481", "Q4718970", "Q4685113", "Q7350070", "Q7528399", "Q336657", "Q5931959", "Q816608", "Q5733912", "Q13529862", "Q4864839", "Q4798997", "Q333694", "Q24203502", "Q3132669", "Q2612400", "Q5534925", "Q5539063", "Q5644068", "Q982590", "Q8007610", "Q7308622", "Q8002004", "Q1685265", "Q7996455", "Q5341944", "Q5085172", "Q748610", "Q5728825", "Q8019473", "Q5930808", "Q6222084", "Q8017525", "Q6239069", "Q7528945", "Q27032606", "Q7439298", "Q7965705", "Q6769327", "Q7528949", "Q7599747", "Q3526880", "Q5039185", "Q6233948", "Q14945567", "Q532574", "Q7146232", "Q7529487", "Q7526823", "Q6389130", "Q552784", "Q149724", "Q5722444", "Q5723308", "Q1712028", "Q7965794", "Q5548958", "Q2548284", "Q7793539"], "coreference_resolved_question": "Which people are an alumni of Harrow School and are a male?", "s_expression_fn": "(AND (JOIN educated_at Harrow_School) (JOIN instance_of common_name) (JOIN sex_or_gender male))", "predicted_s_expression_fn": "(AND (JOIN (R educated_at) Harrow_School) (JOIN (R sex_or_gender) male) (JOIN instance_of common_name))", "predicted_s_expression": "(AND (JOIN P69 Q1247373) (JOIN P21 Q6581097) (JOIN P31 Q502895))", "sparql_attempt_count": 5, "actions": "SELECT ?x WHERE { ?x wdt:P69 wd:Q1247373 . ?x wdt:P21 wd:Q6581097 . ?x wdt:P31 wd:Q502895 . }"}, {"turnID": "157.122.11", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Single_Relation", "question": "Which international organizations were East Timor and Federated States of Micronesia a member of ? [CTX]", "answer": "Alliance of Small Island States, United Nations, Asian Development Bank, African, Caribbean and Pacific Group of States, Multilateral Investment Guarantee Agency", "s_expression": "(AND (JOIN (R P463) Q574) (JOIN P31 Q484652) (JOIN (R P463) Q702))", "s_expression_cores": ["(AND (JOIN (R P463) Q574) (JOIN P31 Q484652) (JOIN (R P463) Q702))"], "sparql_delex": "SELECT ?x WHERE { wd:Q574 wdt:P463 ?x . ?x wdt:P31 wd:Q484652 .  wd:Q702 wdt:P463 ?x .  }", "results": ["Q496967", "Q1065", "Q188822", "Q294278", "Q1043527"], "coreference_resolved_question": "Which international organizations were East Timor and Federated States of Micronesia a member of?", "s_expression_fn": "(AND (JOIN (R member_of) East_Timor) (JOIN instance_of international_organization) (JOIN (R member_of) Federated_States_of_Micronesia))", "predicted_s_expression_fn": "(DISTINCT (AND (JOIN (R member_of) (VALUES East_Timor Federated_States_of_Micronesia)) (JOIN instance_of international_organization)))", "predicted_s_expression": "(DISTINCT (AND (JOIN (R P463) (VALUES Q574 Q702)) (JOIN P31 Q484652)))", "sparql_attempt_count": 2, "actions": "SELECT DISTINCT ?x WHERE { VALUES ?x0 { wd:Q574 wd:Q702 } . ?x0 wdt:P463 ?x . ?x wdt:P31 wd:Q484652 . }"}, {"turnID": "157.42.4", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Multiple_Relation", "question": "Which nonprofit organizations hold the archives of Francis Schaeffer or were William Herbert Carruth educated ? [CTX]", "answer": "Harvard University, Wheaton College", "s_expression": "(OR (AND (JOIN (R P485) Q958594) (JOIN P31 Q163740)) (AND (JOIN (R P69) Q21664274) (JOIN P31 Q163740)))", "s_expression_cores": ["(AND (JOIN (R P485) Q958594) (JOIN P31 Q163740))", "(AND (JOIN (R P69) Q21664274) (JOIN P31 Q163740))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q958594 wdt:P485 ?x . ?x wdt:P31 wd:Q163740 .  } UNION { wd:Q21664274 wdt:P69 ?x . ?x wdt:P31 wd:Q163740 .  } }", "results": ["Q13371", "Q747179"], "coreference_resolved_question": "Which nonprofit organizations hold the archives of Francis Schaeffer or were William Herbert Carruth educated?", "s_expression_fn": "(OR (AND (JOIN (R archives_at) Francis_Schaeffer) (JOIN instance_of nonprofit_organization)) (AND (JOIN (R educated_at) William_Herbert_Carruth) (JOIN instance_of nonprofit_organization)))", "predicted_s_expression_fn": "(OR (AND (JOIN (R archive) Francis_Schaeffer) (JOIN instance_of nonprofit_organization)) (AND (JOIN (R educated_at) William_Herbert_Carruth) (JOIN instance_of nonprofit_organization)))", "predicted_s_expression": "", "sparql_attempt_count": 1, "actions": ""}, {"turnID": "157.53.6", "question_type": "Logical Reasoning (All)", "description": "Logical|Difference|Single_Relation", "question": "Which cellular components are components of Interleukin-6 receptor subunit beta but not Hemojuvelin ? [CTX]", "answer": "cell body", "s_expression": "(DIFF (AND (JOIN (R P681) Q14907600) (JOIN P31 Q5058355)) (JOIN (R P681) Q151233))", "s_expression_cores": ["(AND (JOIN (R P681) Q14907600) (JOIN P31 Q5058355))", "(JOIN (R P681) Q151233)"], "sparql_delex": "SELECT ?x WHERE { wd:Q14907600 wdt:P681 ?x . ?x wdt:P31 wd:Q5058355 .  FILTER NOT EXISTS { wd:Q151233 wdt:P681 ?x .  } }", "results": ["Q14864866"], "coreference_resolved_question": "Which cellular components are components of Interleukin-6 receptor subunit beta but not Hemojuvelin?", "s_expression_fn": "(DIFF (AND (JOIN (R cell_component) Interleukin-6_receptor_subunit_beta) (JOIN instance_of cellular_component)) (JOIN (R cell_component) Hemojuvelin))", "predicted_s_expression_fn": "(DIFF (AND (JOIN (R cell_component) Interleukin-6_receptor_subunit_beta) (JOIN instance_of part)) (JOIN (R cell_component) Hemojuvelin))", "predicted_s_expression": "(DIFF (AND (JOIN (R P681) Q14907600) (JOIN P31 Q5058355)) (JOIN (R P681) Q151233))", "sparql_attempt_count": 2, "actions": "SELECT ?x WHERE { wd:Q14907600 wdt:P681 ?x . ?x wdt:P31 wd:Q5058355 . FILTER NOT EXISTS { wd:Q151233 wdt:P681 ?x . } }"}, {"turnID": "157.3.10", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Multiple_Relation", "question": "Which administrative territories have diplomatic relationships with Italy and are the countries of citizenship of Fortunato Carranza ? [CTX]", "answer": "Peru", "s_expression": "(AND (JOIN (R P530) Q38) (JOIN P31 Q15617994) (JOIN (R P27) Q5864225))", "s_expression_cores": ["(AND (JOIN (R P530) Q38) (JOIN P31 Q15617994) (JOIN (R P27) Q5864225))"], "sparql_delex": "SELECT ?x WHERE { wd:Q38 wdt:P530 ?x . ?x wdt:P31 wd:Q15617994 .  wd:Q5864225 wdt:P27 ?x .  }", "results": ["Q419"], "coreference_resolved_question": "Which administrative territories have diplomatic relationships with Italy and are the countries of citizenship of Fortunato Carranza?", "s_expression_fn": "(AND (JOIN (R diplomatic_relation) Italy) (JOIN instance_of designation_for_an_administrative_territorial_entity) (JOIN (R country_of_citizenship) Fortunato_Carranza))", "predicted_s_expression_fn": "(AND (JOIN diplomatic_relation Italy) (JOIN country_of_citizenship Fortunato_Carranza) (JOIN instance_of designation_for_an_administrative_territorial_entity))", "predicted_s_expression": "(AND (JOIN P530 Q38) (JOIN (R P27) Q5864225) (JOIN P31 Q15617994))", "sparql_attempt_count": 4, "actions": "SELECT ?x WHERE { ?x wdt:P530 wd:Q38 . wd:Q5864225 wdt:P27 ?x . ?x wdt:P31 wd:Q15617994 . }"}, {"turnID": "1358.86.4", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Single_Relation", "question": "Which people have the gender as male and female ? [CTX]", "answer": "Some of them are Amadeus Serafini, Adolfine Therese Leander-Flodin, Fenedy Masauvakalo, Kim Ju-yeong, Diemut Theato, Lilly Wachowski, Nikola Jakadofsky, Antonio Merayo, Maria Espinalt i Font, Hom Nguyen", "s_expression": "(AND (JOIN P21 Q6581097) (JOIN P31 Q502895) (JOIN P21 Q6581072))", "s_expression_cores": ["(AND (JOIN P21 Q6581097) (JOIN P31 Q502895) (JOIN P21 Q6581072))"], "sparql_delex": "SELECT ?x WHERE { ?x wdt:P21 wd:Q6581097 . ?x wdt:P31 wd:Q502895 .  ?x wdt:P21 wd:Q6581072 .  }", "results": ["Q12966459", "Q17600942", "Q3260705", "Q5874237", "Q21391750", "Q17225819", "Q5972494", "Q16941580", "Q16733519", "Q11622868", "Q6702791", "Q10263785", "Q6571041", "Q16732132", "Q24264223", "Q20401379", "Q20119921", "Q2312612", "Q16164967", "Q242700", "Q6555624", "Q12586819", "Q23698979", "Q17628096", "Q22342662", "Q525066", "Q9544977", "Q503007", "Q22280111", "Q22102078", "Q5482749", "Q21392153", "Q201204", "Q10281088", "Q442804", "Q16767898", "Q22570074", "Q21601127", "Q12403076", "Q14432239", "Q12734885", "Q734662", "Q24500675", "Q24034956", "Q19957341", "Q6258596", "Q22236117", "Q22808784", "Q11379959", "Q6003690", "Q24807469", "Q21857402", "Q21258362", "Q4979792", "Q11449790", "Q22001922", "Q3575012", "Q3764762", "Q7377573", "Q20068820", "Q6031433", "Q21794041", "Q6438624", "Q25768293", "Q19448005", "Q21503040", "Q17148031", "Q11604340", "Q17158335", "Q11815936", "Q17364527", "Q22280435", "Q15934058", "Q18559837", "Q11201210", "Q25748324", "Q459844", "Q2379965", "Q3291942", "Q17621841", "Q20980163", "Q453573", "Q11531266", "Q4255661", "Q22675675", "Q528434", "Q237726", "Q74813", "Q2668396", "Q298423", "Q22073991", "Q503575", "Q23416861", "Q15807938", "Q19357604", "Q18049905", "Q26921704", "Q2882250", "Q18346977", "Q2939204", "Q3809749", "Q12685049", "Q21033490", "Q5856706", "Q16165783", "Q5569499", "Q12613187", "Q7849225", "Q16582167", "Q19543099", "Q16865281", "Q22095108", "Q12872947", "Q15433626"], "coreference_resolved_question": "Which people have the gender as male and female?", "s_expression_fn": "(AND (JOIN sex_or_gender male) (JOIN instance_of common_name) (JOIN sex_or_gender female))", "predicted_s_expression_fn": "(AND (JOIN (R sex_or_gender) male) (JOIN (R sex_or_gender) female) (JOIN instance_of common_name))", "predicted_s_expression": "(AND (JOIN P21 Q6581097) (JOIN P21 Q6581072) (JOIN P31 Q502895))", "sparql_attempt_count": 5, "actions": "SELECT ?x WHERE { ?x wdt:P21 wd:Q6581097 . ?x wdt:P21 wd:Q6581072 . ?x wdt:P31 wd:Q502895 . }"}, {"turnID": "1358.69.2", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Multiple_Relation", "question": "Which people took part in Badminton at the 1970 British Commonwealth Games \u2013 Men's Singles and have the gender as male ? [CTX]", "answer": "Some of them are Max Lawson, Fazal Haq, Peter Moore, Yeo Ah Seng, John J. McCloy, Maurice Montegriffo, Bruce Rollick, Dipu Ghosh, Dave Charron, Jamie Paulson", "s_expression": "(AND (JOIN P1344 Q919070) (JOIN P31 Q502895) (JOIN P21 Q6581097))", "s_expression_cores": ["(AND (JOIN P1344 Q919070) (JOIN P31 Q502895) (JOIN P21 Q6581097))"], "sparql_delex": "SELECT ?x WHERE { ?x wdt:P1344 wd:Q919070 . ?x wdt:P31 wd:Q502895 .  ?x wdt:P21 wd:Q6581097 .  }", "results": ["Q26935769", "Q2118319", "Q2167595", "Q13481869", "Q1648998", "Q1227350", "Q15844590", "Q2368453", "Q1511205", "Q26955605", "Q26955629", "Q1200123", "Q26955609", "Q26955607", "Q26955606", "Q26955623", "Q26955622", "Q26955625", "Q26955624", "Q26955627", "Q13482326", "Q2602252", "Q1451338", "Q2129995", "Q26955621", "Q13445335", "Q991785", "Q1738074", "Q13445357", "Q27567889", "Q27567888", "Q13482408", "Q1284678", "Q2150407", "Q27567887", "Q26955610", "Q1148710", "Q26955613", "Q26955615", "Q26955616", "Q26955617", "Q2158216", "Q26955619", "Q26935697", "Q26955618", "Q958890", "Q179229", "Q1348411"], "coreference_resolved_question": "Which people took part in Badminton at the 1970 British Commonwealth Games \u2013 Men's Singles and have the gender as male?", "s_expression_fn": "(AND (JOIN participant_in Badminton_at_the_1970_British_Commonwealth_Games_\u2013_Men's_Singles) (JOIN instance_of common_name) (JOIN sex_or_gender male))", "predicted_s_expression_fn": "(AND (JOIN participant_in Badminton_at_the_1970_British_Commonwealth_Games___Men's_Singles) (JOIN sex_or_gender male) (JOIN instance_of common_name))", "predicted_s_expression": "(AND (JOIN P1344 Q919070) (JOIN P21 Q6581097) (JOIN P31 Q502895))", "sparql_attempt_count": 2, "actions": "SELECT ?x WHERE { ?x wdt:P1344 wd:Q919070 . ?x wdt:P21 wd:Q6581097 . ?x wdt:P31 wd:Q502895 . }"}, {"turnID": "345.55.2", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Multiple_Relation", "question": "Which works of art did Steve Sekely do the screenwriting for and have romance film as their type ? [CTX]", "answer": "Hyppolit, the Butler", "s_expression": "(AND (JOIN P58 Q549626) (JOIN P31 Q838948) (JOIN P136 Q1054574))", "s_expression_cores": ["(AND (JOIN P58 Q549626) (JOIN P31 Q838948) (JOIN P136 Q1054574))"], "sparql_delex": "SELECT ?x WHERE { ?x wdt:P58 wd:Q549626 . ?x wdt:P31 wd:Q838948 .  ?x wdt:P136 wd:Q1054574 .  }", "results": ["Q1056849"], "coreference_resolved_question": "Which works of art did Steve Sekely do the screenwriting for and have romance film as their type?", "s_expression_fn": "(AND (JOIN screenwriter Steve_Sekely) (JOIN instance_of work_of_art) (JOIN genre romance_film))", "predicted_s_expression_fn": "(AND (JOIN screenwriter Steve_Sekely) (JOIN instance_of work_of_art) (JOIN genre romance_film))", "predicted_s_expression": "(AND (JOIN P58 Q549626) (JOIN P31 Q838948) (JOIN P136 Q1054574))", "sparql_attempt_count": 2, "actions": "SELECT ?x WHERE { ?x wdt:P58 wd:Q549626 . ?x wdt:P31 wd:Q838948 . ?x wdt:P136 wd:Q1054574 . }"}, {"turnID": "345.21.2", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Multiple_Relation", "question": "Which nucleic acid sequences are found in the taxon Mus musculus and are LGI3 an orthlogous gene of ? [CTX]", "answer": "Lgi3", "s_expression": "(AND (JOIN P703 Q83310) (JOIN P31 Q863908) (JOIN P684 Q18053274))", "s_expression_cores": ["(AND (JOIN P703 Q83310) (JOIN P31 Q863908) (JOIN P684 Q18053274))"], "sparql_delex": "SELECT ?x WHERE { ?x wdt:P703 wd:Q83310 . ?x wdt:P31 wd:Q863908 .  ?x wdt:P684 wd:Q18053274 .  }", "results": ["Q18296463"], "coreference_resolved_question": "Which nucleic acid sequences are found in the taxon Mus musculus and are LGI3 an orthologous gene of?", "s_expression_fn": "(AND (JOIN found_in_taxon Mus_musculus) (JOIN instance_of nucleic_acid_sequence) (JOIN ortholog LGI3))", "predicted_s_expression_fn": "(AND (JOIN (R found_in_taxon) Mus_musculus) (JOIN (R orthologous_gene) LGI3) (JOIN instance_of nucleic_acid_sequence))", "predicted_s_expression": "(AND (JOIN P703 Q83310) (JOIN (R P684) Q18053274) (JOIN P31 Q863908))", "sparql_attempt_count": 3, "actions": "SELECT ?x WHERE { ?x wdt:P703 wd:Q83310 . wd:Q18053274 wdt:P684 ?x . ?x wdt:P31 wd:Q863908 . }"}, {"turnID": "345.21.7", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Single_Relation", "question": "Which nutrients are encoded by Lgi3 or hypothetical protein    EAE_19830 ? [CTX]", "answer": "hypothetical protein    EAE_19830, Leucine-rich repeat LGI family member 3", "s_expression": "(OR (AND (JOIN (R P688) Q18296463) (JOIN P31 Q181394)) (AND (JOIN (R P688) Q23074589) (JOIN P31 Q181394)))", "s_expression_cores": ["(AND (JOIN (R P688) Q18296463) (JOIN P31 Q181394))", "(AND (JOIN (R P688) Q23074589) (JOIN P31 Q181394))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q18296463 wdt:P688 ?x . ?x wdt:P31 wd:Q181394 .  } UNION { wd:Q23074589 wdt:P688 ?x . ?x wdt:P31 wd:Q181394 .  } }", "results": ["Q24126756", "Q21984634"], "coreference_resolved_question": "Which nutrients are encoded by Lgi3 or hypothetical protein EAE_19830?", "s_expression_fn": "(OR (AND (JOIN (R encodes) Lgi3) (JOIN instance_of nutrient)) (AND (JOIN (R encodes) hypothetical_protein____EAE_19830) (JOIN instance_of nutrient)))", "predicted_s_expression_fn": "(AND (JOIN encoded_by (VALUES Lgi3 hypothetical_protein____EAE_19830)) (JOIN instance_of nutrient))", "predicted_s_expression": "(AND (JOIN P702 (VALUES Q18296463 Q23074589)) (JOIN P31 Q181394))", "sparql_attempt_count": 2, "actions": "SELECT ?x WHERE { VALUES ?x0 { wd:Q18296463 wd:Q23074589 } . ?x wdt:P702 ?x0 . ?x wdt:P31 wd:Q181394 . }"}, {"turnID": "345.79.3", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Single_Relation", "question": "Which political territories do B\u00fcnzau and Ruppertsh\u00fctten belong to ? [CTX]", "answer": "Germany", "s_expression": "(AND (JOIN (R P17) Q1020921) (JOIN P31 Q1048835) (JOIN (R P17) Q1530858))", "s_expression_cores": ["(AND (JOIN (R P17) Q1020921) (JOIN P31 Q1048835) (JOIN (R P17) Q1530858))"], "sparql_delex": "SELECT ?x WHERE { wd:Q1020921 wdt:P17 ?x . ?x wdt:P31 wd:Q1048835 .  wd:Q1530858 wdt:P17 ?x .  }", "results": ["Q183"], "coreference_resolved_question": "Which political territories do B\u00fcnzau and Ruppertsh\u00fctten belong to?", "s_expression_fn": "(AND (JOIN (R country) B\u00fcnzau) (JOIN instance_of political_territorial_entity) (JOIN (R country) Ruppertsh\u00fctten))", "predicted_s_expression_fn": "(DISTINCT (AND (JOIN (R country) (VALUES B\u00fcnzau Ruppertsh\u00fctten)) (JOIN instance_of political_territorial_entity)))", "predicted_s_expression": "(DISTINCT (AND (JOIN (R P17) (VALUES Q1020921 Q1530858)) (JOIN P31 Q1048835)))", "sparql_attempt_count": 2, "actions": "SELECT DISTINCT ?x WHERE { VALUES ?x0 { wd:Q1020921 wd:Q1530858 } . ?x0 wdt:P17 ?x . ?x wdt:P31 wd:Q1048835 . }"}, {"turnID": "345.131.2", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Single_Relation|Incomplete", "question": "What is the genre of Paul Heaton ? [SEP] pop music [SEP] Where was that person educated ? [SEP] King Edward VII School [SEP] Or Ingmar Aldenhov? [CTX]", "answer": "Konstfack, King Edward VII School, Royal Danish Academy of Fine Arts", "s_expression": "(OR (AND (JOIN (R P69) Q1938749) (JOIN P31 Q3914)) (AND (JOIN (R P69) Q5545839) (JOIN P31 Q3914)))", "s_expression_cores": ["(AND (JOIN (R P69) Q1938749) (JOIN P31 Q3914))", "(AND (JOIN (R P69) Q5545839) (JOIN P31 Q3914))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q1938749 wdt:P69 ?x . ?x wdt:P31 wd:Q3914 .  } UNION { wd:Q5545839 wdt:P69 ?x . ?x wdt:P31 wd:Q3914 .  } }", "results": ["Q1782926", "Q6411505", "Q1641001"], "coreference_resolved_question": "Where was Ingmar Aldenhov educated?", "s_expression_fn": "(OR (AND (JOIN (R educated_at) Paul_Heaton) (JOIN instance_of school)) (AND (JOIN (R educated_at) Ingmar_Aldenhov) (JOIN instance_of school)))", "predicted_s_expression_fn": "(OR (JOIN (R educated_at) Paul_Heaton) (JOIN (R educated_at) Ingmar_Aldenhov))", "predicted_s_expression": "(OR (JOIN (R P69) Q1938749) (JOIN (R P69) Q5545839))", "sparql_attempt_count": 1, "actions": "SELECT ?x WHERE { { wd:Q1938749 wdt:P69 ?x . } UNION { wd:Q5545839 wdt:P69 ?x . } }"}, {"turnID": "345.33.3", "question_type": "Logical Reasoning (All)", "description": "Logical|Difference|Multiple_Relation", "question": "Which administrative territories have diplomatic relationships with India and are not Governor Leslie Jensen House present in ? [CTX]", "answer": "Brazil, Italy, Russia, Israel", "s_expression": "(DIFF (AND (JOIN (R P530) Q668) (JOIN P31 Q15617994)) (JOIN (R P17) Q5589594))", "s_expression_cores": ["(AND (JOIN (R P530) Q668) (JOIN P31 Q15617994))", "(JOIN (R P17) Q5589594)"], "sparql_delex": "SELECT ?x WHERE { wd:Q668 wdt:P530 ?x . ?x wdt:P31 wd:Q15617994 .  FILTER NOT EXISTS { wd:Q5589594 wdt:P17 ?x .  } }", "results": ["Q155", "Q38", "Q159", "Q801"], "coreference_resolved_question": "Which administrative territories have diplomatic relationships with India and are not Leslie Jensen House present in?", "s_expression_fn": "(DIFF (AND (JOIN (R diplomatic_relation) India) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (JOIN (R country) Governor_Leslie_Jensen_House))", "predicted_s_expression_fn": "(DIFF (AND (JOIN diplomatic_relation India) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (AND (JOIN (R present_in_work) Governor_Leslie_Jensen_House) (JOIN instance_of designation_for_an_administrative_territorial_entity)))", "predicted_s_expression": "", "sparql_attempt_count": 1, "actions": ""}, {"turnID": "345.28.9", "question_type": "Logical Reasoning (All)", "description": "Logical|Difference|Single_Relation", "question": "Which administrative territories do Antonio Moreno but not Janette Ahrens belong to ? [CTX]", "answer": "Spain", "s_expression": "(DIFF (AND (JOIN (R P27) Q291228) (JOIN P31 Q15617994)) (JOIN (R P27) Q6153680))", "s_expression_cores": ["(AND (JOIN (R P27) Q291228) (JOIN P31 Q15617994))", "(JOIN (R P27) Q6153680)"], "sparql_delex": "SELECT ?x WHERE { wd:Q291228 wdt:P27 ?x . ?x wdt:P31 wd:Q15617994 .  FILTER NOT EXISTS { wd:Q6153680 wdt:P27 ?x .  } }", "results": ["Q29"], "coreference_resolved_question": "Which administrative territories do Antonio Moreno but not Janette Ahrens belong to?", "s_expression_fn": "(DIFF (AND (JOIN (R country_of_citizenship) Antonio_Moreno) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (JOIN (R country_of_citizenship) Janette_Ahrens))", "predicted_s_expression_fn": "(DIFF (AND (JOIN (R country_of_citizenship) Antonio_Moreno) (AND (JOIN (R country_of_citizenship) Janette_Ahrens)))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "345.18.4", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Single_Relation", "question": "Which sports were association football club and Jos\u00e9 Ramos Delgado a part of ? [CTX]", "answer": "association football", "s_expression": "(AND (JOIN (R P641) Q476028) (JOIN P31 Q349) (JOIN (R P641) Q923302))", "s_expression_cores": ["(AND (JOIN (R P641) Q476028) (JOIN P31 Q349) (JOIN (R P641) Q923302))"], "sparql_delex": "SELECT ?x WHERE { wd:Q476028 wdt:P641 ?x . ?x wdt:P31 wd:Q349 .  wd:Q923302 wdt:P641 ?x .  }", "results": ["Q2736"], "coreference_resolved_question": "Which sports were association football club and Jos\u00e9 Ramos Delgado a part of?", "s_expression_fn": "(AND (JOIN (R sport) association_football_club) (JOIN instance_of sport) (JOIN (R sport) Jos\u00e9_Ramos_Delgado))", "predicted_s_expression_fn": "(DISTINCT (AND (JOIN (R sports_discipline_competed_in) (VALUES association_football_club Jos\u00e9_Ramos_Delgado)) (JOIN instance_of sport))", "predicted_s_expression": "", "sparql_attempt_count": 2, "actions": ""}, {"turnID": "345.97.5", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Multiple_Relation", "question": "What are associated with the field of occupation novelist and are the genre for Shroud of Shadow ? [CTX]", "answer": "novel", "s_expression": "(AND (JOIN (R P425) Q6625963) (JOIN P31 Q1792379) (JOIN (R P136) Q7504302))", "s_expression_cores": ["(AND (JOIN (R P425) Q6625963) (JOIN P31 Q1792379) (JOIN (R P136) Q7504302))"], "sparql_delex": "SELECT ?x WHERE { wd:Q6625963 wdt:P425 ?x . ?x wdt:P31 wd:Q1792379 .  wd:Q7504302 wdt:P136 ?x .  }", "results": ["Q8261"], "coreference_resolved_question": "What are associated with the field of occupation novelist and are the genre for Shroud of Shadow?", "s_expression_fn": "(AND (JOIN (R field_of_this_occupation) novelist) (JOIN instance_of art_genre) (JOIN (R genre) Shroud_of_Shadow))", "predicted_s_expression_fn": "(AND (JOIN (R field_of_occupation) novelist) (JOIN (R genre) Shroud_of_Shadow))", "predicted_s_expression": "(AND (JOIN (R P425) Q6625963) (JOIN (R P136) Q7504302))", "sparql_attempt_count": 1, "actions": "SELECT ?x WHERE { wd:Q6625963 wdt:P425 ?x . wd:Q7504302 wdt:P136 ?x . }"}, {"turnID": "345.13.2", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Single_Relation|Incomplete", "question": "What is the job of Mario Masla\u0107 ? [SEP] association football player [SEP] Or Richard Wagamese? [CTX]", "answer": "association football player, biographer", "s_expression": "(OR (AND (JOIN (R P106) Q6764790) (JOIN P31 Q12737077)) (AND (JOIN (R P106) Q7329740) (JOIN P31 Q12737077)))", "s_expression_cores": ["(AND (JOIN (R P106) Q6764790) (JOIN P31 Q12737077))", "(AND (JOIN (R P106) Q7329740) (JOIN P31 Q12737077))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q6764790 wdt:P106 ?x . ?x wdt:P31 wd:Q12737077 .  } UNION { wd:Q7329740 wdt:P106 ?x . ?x wdt:P31 wd:Q12737077 .  } }", "results": ["Q937857", "Q864380"], "coreference_resolved_question": "What is the job of Richard Wagamese?", "s_expression_fn": "(OR (AND (JOIN (R occupation) Mario_Masla\u0107) (JOIN instance_of occupation)) (AND (JOIN (R occupation) Richard_Wagamese) (JOIN instance_of occupation)))", "predicted_s_expression_fn": "(AND (JOIN (R occupation) Mario_Masla\u0107) (JOIN (R occupation) Richard_Wagamese) (JOIN instance_of occupation))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "345.126.2", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Single_Relation|Incomplete", "question": "Which sport did J\u00f3zsef Becsei participate in ? [SEP] association football [SEP] Which release has that sport as its recording sponsor ? [SEP] Yeovil True [SEP] Or Planet Mu? [CTX]", "answer": "Some of them are Huge Chrome Cylinder Box Unfolding, Cavalcade of Glee and Dadaist Happy Hardcore Pom Poms, Oneiric, Winter in the Belly of a Snake, Detrimentalist, Special Forces, 1961, Duntisbourne Abbots Soulmate Devastation Technique, Glyphic, Arecibo Message", "s_expression": "(OR (AND (JOIN P264 Q2736) (JOIN P31 Q2031291)) (AND (JOIN P264 Q2091609) (JOIN P31 Q2031291)))", "s_expression_cores": ["(AND (JOIN P264 Q2736) (JOIN P31 Q2031291))", "(AND (JOIN P264 Q2091609) (JOIN P31 Q2031291))"], "sparql_delex": "SELECT ?x WHERE { { ?x wdt:P264 wd:Q2736 . ?x wdt:P31 wd:Q2031291 .  } UNION { ?x wdt:P264 wd:Q2091609 . ?x wdt:P31 wd:Q2031291 .  } }", "results": ["Q5573031", "Q2963276", "Q8026386", "Q7369946", "Q5265817", "Q6083368", "Q5151238", "Q3041379", "Q7561328", "Q4570258", "Q5508148", "Q15427826", "Q859123", "Q3264302", "Q938132", "Q16944497", "Q6739630", "Q4788721", "Q7887312", "Q2887302", "Q1180233", "Q17027526", "Q7093692", "Q8052504", "Q7111116", "Q5754321", "Q7722613", "Q7574562", "Q6946408", "Q9005255", "Q2606033", "Q5535514", "Q7915759", "Q6804162", "Q1648450", "Q5449250"], "coreference_resolved_question": "Which release has association football as its recording sponsor, Yeovil True or Planet Mu?", "s_expression_fn": "(OR (AND (JOIN record_label association_football) (JOIN instance_of release)) (AND (JOIN record_label Planet_Mu) (JOIN instance_of release)))", "predicted_s_expression_fn": "(OR (AND (JOIN recording_sponsor association_football) (JOIN instance_of release) (VALUES Yeovil_True)) (AND (JOIN recording_sponsor association_football) (JOIN instance_of release) (VALUES Planet_Mu)))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "345.118.2", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Multiple_Relation", "question": "Which people have Princess Anne Th\u00e9r\u00e8se of Savoy as their sibling and have the gender as male ? [CTX]", "answer": "Louis Victor, Prince of Carignano", "s_expression": "(AND (JOIN P9 Q1996040) (JOIN P31 Q502895) (JOIN P21 Q6581097))", "s_expression_cores": ["(AND (JOIN P9 Q1996040) (JOIN P31 Q502895) (JOIN P21 Q6581097))"], "sparql_delex": "SELECT ?x WHERE { ?x wdt:P9 wd:Q1996040 . ?x wdt:P31 wd:Q502895 .  ?x wdt:P21 wd:Q6581097 .  }", "results": ["Q2431176"], "coreference_resolved_question": "Which people have Princess Anne Th\u00e9r\u00e8se of Savoy as their sibling and have the gender as male?", "s_expression_fn": "(AND (JOIN sister Princess_Anne_Th\u00e9r\u00e8se_of_Savoy) (JOIN instance_of common_name) (JOIN sex_or_gender male))", "predicted_s_expression_fn": "(AND (JOIN sibling Princess_Anne_Th\u00e9r\u00e8se_of_Savoy) (JOIN sex_or_gender male) (JOIN instance_of common_name))", "predicted_s_expression": "(AND (JOIN (R P7) Q1996040) (JOIN P21 Q6581097) (JOIN P31 Q502895))", "sparql_attempt_count": 3, "actions": "SELECT ?x WHERE { wd:Q1996040 wdt:P7 ?x . ?x wdt:P21 wd:Q6581097 . ?x wdt:P31 wd:Q502895 . }"}, {"turnID": "345.125.3", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Single_Relation|Incomplete", "question": "Which administrative territory is the country of citizenship of Gerald Horne ? [SEP] United States of America [SEP] Which people does that person have as his/her race ? [SEP] African Americans [SEP] Which nonprofit organization was that person educated at ? [SEP] Columbia University [SEP] Or Cosmas Zachos? [CTX]", "answer": "California Institute of Technology, Columbia University, Princeton University", "s_expression": "(OR (AND (JOIN (R P69) Q5549253) (JOIN P31 Q163740)) (AND (JOIN (R P69) Q5173982) (JOIN P31 Q163740)))", "s_expression_cores": ["(AND (JOIN (R P69) Q5549253) (JOIN P31 Q163740))", "(AND (JOIN (R P69) Q5173982) (JOIN P31 Q163740))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q5549253 wdt:P69 ?x . ?x wdt:P31 wd:Q163740 .  } UNION { wd:Q5173982 wdt:P69 ?x . ?x wdt:P31 wd:Q163740 .  } }", "results": ["Q161562", "Q49088", "Q21578"], "coreference_resolved_question": "Which nonprofit organization was Cosmas Zachos educated at?", "s_expression_fn": "(OR (AND (JOIN (R educated_at) Gerald_Horne) (JOIN instance_of nonprofit_organization)) (AND (JOIN (R educated_at) Cosmas_Zachos) (JOIN instance_of nonprofit_organization)))", "predicted_s_expression_fn": "(OR (AND (JOIN (R educated_at) Gerald_Horne) (JOIN instance_of nonprofit_organization)) (AND (JOIN (R educated_at) Cosmas_Zachos) (JOIN instance_of nonprofit_organization))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "345.139.5", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Multiple_Relation", "question": "Which sports have association football player as thier associated field of occupation and were Manolo Jim\u00e9nez a part of ? [CTX]", "answer": "association football", "s_expression": "(AND (JOIN (R P425) Q937857) (JOIN P31 Q349) (JOIN (R P641) Q1373075))", "s_expression_cores": ["(AND (JOIN (R P425) Q937857) (JOIN P31 Q349) (JOIN (R P641) Q1373075))"], "sparql_delex": "SELECT ?x WHERE { wd:Q937857 wdt:P425 ?x . ?x wdt:P31 wd:Q349 .  wd:Q1373075 wdt:P641 ?x .  }", "results": ["Q2736"], "coreference_resolved_question": "Which sports have association football player as their associated field of occupation and were Manolo Jim\u00e9nez a part of?", "s_expression_fn": "(AND (JOIN (R field_of_this_occupation) association_football_player) (JOIN instance_of sport) (JOIN (R sport) Manolo_Jim\u00e9nez))", "predicted_s_expression_fn": "(AND (JOIN associated_field_of_occupation association_football_player) (JOIN (R sports_discipline_competed_in) Manolo_Jim\u00e9nez) (JOIN instance_of sport))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "345.70.4", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Single_Relation", "question": "Which people are a citizen of United States of America and France ? [CTX]", "answer": "Some of them are David Ren\u00e9 de Rothschild, Jean van Heijenoort, Betsy Drake, Felix Zandman, Yo-Yo Ma, Dorothea Klumpke, Dane Rudhyar, Michael Brooks, Benoit Mandelbrot, Patrick Tatopoulos", "s_expression": "(AND (JOIN P27 Q30) (JOIN P31 Q502895) (JOIN P27 Q142))", "s_expression_cores": ["(AND (JOIN P27 Q30) (JOIN P31 Q502895) (JOIN P27 Q142))"], "sparql_delex": "SELECT ?x WHERE { ?x wdt:P27 wd:Q30 . ?x wdt:P31 wd:Q502895 .  ?x wdt:P27 wd:Q142 .  }", "results": ["Q105158", "Q274900", "Q1563129", "Q1927797", "Q2848807", "Q24475355", "Q126462", "Q2050301", "Q2861209", "Q2620846", "Q939813", "Q3336604", "Q886469", "Q293078", "Q5874237", "Q6729624", "Q5202472", "Q234891", "Q171561", "Q464853", "Q3179926", "Q271757", "Q2925458", "Q3181933", "Q2559571", "Q326551", "Q3323546", "Q15291152", "Q267581", "Q1766077", "Q1187647", "Q256928", "Q1558970", "Q2735846", "Q1495586", "Q373897", "Q749495", "Q3188933", "Q526876", "Q284722", "Q182882", "Q7368987", "Q4085031", "Q20803756", "Q1448687", "Q1676997", "Q949682", "Q2966610", "Q314969", "Q450927", "Q442549", "Q4102611", "Q264764", "Q449711", "Q239293", "Q3194155", "Q152524", "Q328825", "Q7509188", "Q20065149", "Q3133197", "Q15982507", "Q1399240", "Q15870276", "Q458503", "Q1949264", "Q380426", "Q20670730", "Q1308188", "Q5912", "Q1773508", "Q712889", "Q311533", "Q284731", "Q940298", "Q21404557", "Q453908", "Q1134374", "Q311735", "Q2634313", "Q4077308", "Q1717331", "Q6902537", "Q3579803", "Q15073356", "Q284360", "Q1550593", "Q242387", "Q459912", "Q242169", "Q3309116", "Q2568788", "Q983653", "Q270660", "Q3131631", "Q3242428", "Q2622253", "Q2610341", "Q16885517", "Q5396005", "Q450619", "Q1974190", "Q879453", "Q1116409", "Q1066419", "Q18278048", "Q20872764", "Q1493812", "Q110462", "Q3376679", "Q376588", "Q601374", "Q186351", "Q2424052", "Q3124136", "Q1238364", "Q1380534", "Q1117481", "Q3164747", "Q1871592", "Q3173604", "Q699701", "Q22917723", "Q462310", "Q1381689", "Q453288", "Q3156144", "Q22920409", "Q3170532", "Q303599", "Q3023139", "Q6780531", "Q445083", "Q726671", "Q1176310", "Q7641073", "Q593715", "Q115730", "Q1268373", "Q1337597", "Q1443629", "Q472837", "Q2851016", "Q372777", "Q1159454", "Q213957", "Q3499156", "Q23112360", "Q3571723", "Q3608080", "Q1928930", "Q1237718", "Q3666575", "Q1502145", "Q1706711", "Q1771229", "Q2618080", "Q693156", "Q1712278", "Q3265381", "Q722607", "Q465695", "Q16024986", "Q1681848", "Q272943", "Q924883", "Q515374", "Q559378", "Q434971", "Q544644", "Q5200736", "Q262614", "Q540665", "Q21531812", "Q3133020", "Q18633969", "Q2833399", "Q1900516", "Q203819", "Q276324", "Q28636", "Q101740", "Q22670562", "Q240274", "Q163118", "Q327021", "Q1688122", "Q159409", "Q92635", "Q3287657", "Q647498", "Q2396810", "Q5671301", "Q3573455", "Q3172150", "Q435509", "Q1349886", "Q565344", "Q903124", "Q2580510", "Q4163485", "Q5337345", "Q3166560", "Q712449", "Q230023", "Q3297386", "Q328944", "Q3154645", "Q1329343", "Q708648", "Q2853667", "Q7650831", "Q336024", "Q230068", "Q5578715", "Q289035", "Q3229373", "Q3725330", "Q45928", "Q2966653", "Q674082", "Q2420592", "Q270735", "Q365708", "Q371948", "Q17007321", "Q291731", "Q1605966", "Q2833307", "Q7314", "Q16728383", "Q15407246", "Q1064513", "Q234509", "Q10329486", "Q16598364", "Q1711767", "Q634850", "Q94016", "Q19958491", "Q2926117", "Q1298287", "Q3201145", "Q373034", "Q1699205", "Q13485774", "Q434205", "Q3262724", "Q21804519", "Q3052793", "Q16916392", "Q1703212", "Q2037671", "Q553132", "Q7106160", "Q3236719", "Q3371228", "Q6380137", "Q1871657", "Q1351565", "Q440423", "Q3219548", "Q7294034", "Q23773998", "Q289257", "Q3185617", "Q7177900", "Q364062", "Q706147", "Q15407142", "Q1897284", "Q3041947", "Q3369141", "Q1849302", "Q21033649", "Q1351482", "Q5560807", "Q266881", "Q15502557", "Q497186", "Q363869", "Q1893041", "Q2096960", "Q154842", "Q237690", "Q1273067", "Q331227", "Q1112776", "Q1685654", "Q1635526", "Q654181", "Q238140", "Q2087557", "Q261294", "Q2996846", "Q15077437", "Q1685853", "Q21288845", "Q2522256", "Q561234", "Q742900", "Q457600", "Q1489605", "Q143506", "Q32426", "Q126164", "Q19866719", "Q151972", "Q13562657", "Q21328748", "Q2966650", "Q981340", "Q15406941", "Q367973", "Q4017634", "Q747185", "Q164720", "Q2636058", "Q1685410", "Q21005247", "Q692265", "Q387830", "Q1343117", "Q200890", "Q3069174", "Q2093916", "Q19250900", "Q434679", "Q982186", "Q712946", "Q15520837", "Q551683", "Q1582222", "Q1352043", "Q1396649", "Q1912674", "Q517549"], "coreference_resolved_question": "Which people are a citizen of United States of America and France?", "s_expression_fn": "(AND (JOIN country_of_citizenship United_States_of_America) (JOIN instance_of common_name) (JOIN country_of_citizenship France))", "predicted_s_expression_fn": "(AND (JOIN (R country_of_citizenship) United_States_of_America) (JOIN (R country_of_citizenship) France) (JOIN instance_of common_name))", "predicted_s_expression": "(AND (JOIN P27 Q30) (JOIN P27 Q142) (JOIN P31 Q502895))", "sparql_attempt_count": 5, "actions": "SELECT ?x WHERE { ?x wdt:P27 wd:Q30 . ?x wdt:P27 wd:Q142 . ?x wdt:P31 wd:Q502895 . }"}, {"turnID": "345.89.2", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Single_Relation", "question": "Which sports did Jamie Thomas and Sergei Kuznetsov participate in ? [CTX]", "answer": "association football", "s_expression": "(AND (JOIN (R P641) Q6147564) (JOIN P31 Q349) (JOIN (R P641) Q4245070))", "s_expression_cores": ["(AND (JOIN (R P641) Q6147564) (JOIN P31 Q349) (JOIN (R P641) Q4245070))"], "sparql_delex": "SELECT ?x WHERE { wd:Q6147564 wdt:P641 ?x . ?x wdt:P31 wd:Q349 .  wd:Q4245070 wdt:P641 ?x .  }", "results": ["Q2736"], "coreference_resolved_question": "Which sports did Jamie Thomas and Sergei Kuznetsov participate in?", "s_expression_fn": "(AND (JOIN (R sport) Jamie_Thomas) (JOIN instance_of sport) (JOIN (R sport) Sergei_Kuznetsov))", "predicted_s_expression_fn": "(DISTINCT (AND (JOIN (R sports_discipline_competed_in) (VALUES Jamie_Thomas Sergei_Kuznetsov)) (JOIN instance_of sport)))", "predicted_s_expression": "", "sparql_attempt_count": 2, "actions": ""}, {"turnID": "345.133.5", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Single_Relation", "question": "Which people have politician and photographer as his/her means of employment ? [CTX]", "answer": "Some of them are Emili Juncadella, Carl Giers, John Wallace Jones, Simon Wing, Pavel He\u0159man, Henry Buehman, Alexander Hessler, John Hall-Edwards, Marie-Claude Vaillant-Couturier, Barry Goldwater", "s_expression": "(AND (JOIN P106 Q82955) (JOIN P31 Q502895) (JOIN P106 Q33231))", "s_expression_cores": ["(AND (JOIN P106 Q82955) (JOIN P31 Q502895) (JOIN P106 Q33231))"], "sparql_delex": "SELECT ?x WHERE { ?x wdt:P106 wd:Q82955 . ?x wdt:P31 wd:Q502895 .  ?x wdt:P106 wd:Q33231 .  }", "results": ["Q299565", "Q6262795", "Q15859270", "Q16837764", "Q16300626", "Q57437", "Q20154450", "Q596961", "Q5396693", "Q8062783", "Q1634452", "Q72292", "Q2624119", "Q5958697", "Q1085046", "Q9618954", "Q3592114", "Q5673053", "Q24091081", "Q23530", "Q7916652", "Q4982770", "Q6221537", "Q121855", "Q5503793", "Q20631671", "Q7520068", "Q5560519", "Q4719134", "Q3309084", "Q7349427", "Q3174004", "Q5983351", "Q12038001", "Q27340492", "Q5902774", "Q122217", "Q11919151", "Q3131954", "Q344153", "Q6515779", "Q3157912", "Q335260", "Q3052197", "Q21123533", "Q274267", "Q6261962", "Q17423451", "Q16214306", "Q1744168", "Q3078580", "Q1481132", "Q717391", "Q22893959", "Q12044066", "Q1969763", "Q706363", "Q319962", "Q12885263", "Q128126", "Q3431542", "Q6211215", "Q2688016", "Q319129", "Q709881", "Q10817464", "Q2900135", "Q3066875", "Q3057257", "Q1684668", "Q6948632", "Q7816123", "Q2084349", "Q15088244", "Q361295", "Q380347", "Q16760780", "Q467911", "Q5659157"], "coreference_resolved_question": "Which people have politician and photographer as his/her means of employment?", "s_expression_fn": "(AND (JOIN occupation politician) (JOIN instance_of common_name) (JOIN occupation photographer))", "predicted_s_expression_fn": "(AND (JOIN (R occupation) politician) (JOIN (R occupation) photographer) (JOIN instance_of common_name))", "predicted_s_expression": "(AND (JOIN P106 Q82955) (JOIN P106 Q33231) (JOIN P31 Q502895))", "sparql_attempt_count": 5, "actions": "SELECT ?x WHERE { ?x wdt:P106 wd:Q82955 . ?x wdt:P106 wd:Q33231 . ?x wdt:P31 wd:Q502895 . }"}, {"turnID": "345.130.4", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Multiple_Relation", "question": "Which people have birthplace at Corbeil-Essonnes and are a male ? [CTX]", "answer": "Some of them are Victor Place, Loic Bobillier, Christophe Dauphin, Maurice Hauchard, Demba Diagouraga, Andr\u00e9 Petit, Jean-Claude Mignon, Eug\u00e8ne-Napol\u00e9on Bey, Hoalid Regragui, Plaisir Bahamboula", "s_expression": "(AND (JOIN P19 Q208812) (JOIN P31 Q502895) (JOIN P21 Q6581097))", "s_expression_cores": ["(AND (JOIN P19 Q208812) (JOIN P31 Q502895) (JOIN P21 Q6581097))"], "sparql_delex": "SELECT ?x WHERE { ?x wdt:P19 wd:Q208812 . ?x wdt:P31 wd:Q502895 .  ?x wdt:P21 wd:Q6581097 .  }", "results": ["Q3264917", "Q20011597", "Q17305645", "Q3164276", "Q3300897", "Q360937", "Q19606733", "Q5212483", "Q1188660", "Q3168386", "Q3085665", "Q3719422", "Q12312502", "Q766119", "Q31443", "Q2939324", "Q2848426", "Q3258640", "Q5255110", "Q3383737", "Q1641715", "Q1096611", "Q5616067", "Q1363509", "Q2848228", "Q2449027", "Q514145", "Q3843423", "Q1684643", "Q3052128", "Q16026916", "Q3573029", "Q2966180", "Q5353", "Q13368668", "Q934568"], "coreference_resolved_question": "Which people have birthplace at Corbeil-Essonnes and are a male?", "s_expression_fn": "(AND (JOIN place_of_birth Corbeil-Essonnes) (JOIN instance_of common_name) (JOIN sex_or_gender male))", "predicted_s_expression_fn": "(AND (JOIN place_of_birth Corbeil-Essonnes) (JOIN sex_or_gender male) (JOIN instance_of common_name))", "predicted_s_expression": "(AND (JOIN P19 Q208812) (JOIN P21 Q6581097) (JOIN P31 Q502895))", "sparql_attempt_count": 2, "actions": "SELECT ?x WHERE { ?x wdt:P19 wd:Q208812 . ?x wdt:P21 wd:Q6581097 . ?x wdt:P31 wd:Q502895 . }"}, {"turnID": "507.82.4", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Single_Relation", "question": "Which administrative territories are John Davis Larkins, Jr. and Lora Reinbold an inhabitant of ? [CTX]", "answer": "United States of America", "s_expression": "(AND (JOIN (R P27) Q6228838) (JOIN P31 Q15617994) (JOIN (R P27) Q16735113))", "s_expression_cores": ["(AND (JOIN (R P27) Q6228838) (JOIN P31 Q15617994) (JOIN (R P27) Q16735113))"], "sparql_delex": "SELECT ?x WHERE { wd:Q6228838 wdt:P27 ?x . ?x wdt:P31 wd:Q15617994 .  wd:Q16735113 wdt:P27 ?x .  }", "results": ["Q30"], "coreference_resolved_question": "Which administrative territories are John Davis Larkins, Jr. and Lora Reinbold an inhabitant of?", "s_expression_fn": "(AND (JOIN (R country_of_citizenship) John_Davis_Larkins,_Jr) (JOIN instance_of designation_for_an_administrative_territorial_entity) (JOIN (R country_of_citizenship) Lora_Reinbold))", "predicted_s_expression_fn": "(DISTINCT (AND (JOIN (R place_of_residence) (VALUES John_Davis_Larkins,_Jr. Lora_Reinbold)) (JOIN instance_of designation_for_an_administrative_territorial_entity)))", "predicted_s_expression": "", "sparql_attempt_count": 2, "actions": ""}, {"turnID": "507.51.6", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Single_Relation", "question": "Which occupations have Washington Hunt and Tom Tvedt as his/her as a career ? [CTX]", "answer": "politician", "s_expression": "(AND (JOIN (R P106) Q444158) (JOIN P31 Q12737077) (JOIN (R P106) Q4572548))", "s_expression_cores": ["(AND (JOIN (R P106) Q444158) (JOIN P31 Q12737077) (JOIN (R P106) Q4572548))"], "sparql_delex": "SELECT ?x WHERE { wd:Q444158 wdt:P106 ?x . ?x wdt:P31 wd:Q12737077 .  wd:Q4572548 wdt:P106 ?x .  }", "results": ["Q82955"], "coreference_resolved_question": "Which occupations have Washington Hunt and Tom Tvedt as their careers?", "s_expression_fn": "(AND (JOIN (R occupation) Washington_Hunt) (JOIN instance_of occupation) (JOIN (R occupation) Tom_Tvedt))", "predicted_s_expression_fn": "(DISTINCT (AND (JOIN (R occupation) (VALUES Washington_Hunt Tom_Tvedt)) (JOIN instance_of occupation))", "predicted_s_expression": "", "sparql_attempt_count": 2, "actions": ""}, {"turnID": "507.53.3", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Single_Relation", "question": "Which organizations are Yasumasa Hane and Kaku Takagawa affiliated to ? [CTX]", "answer": "Nihon Ki-in", "s_expression": "(AND (JOIN (R P1416) Q3108850) (JOIN P31 Q43229) (JOIN (R P1416) Q643530))", "s_expression_cores": ["(AND (JOIN (R P1416) Q3108850) (JOIN P31 Q43229) (JOIN (R P1416) Q643530))"], "sparql_delex": "SELECT ?x WHERE { wd:Q3108850 wdt:P1416 ?x . ?x wdt:P31 wd:Q43229 .  wd:Q643530 wdt:P1416 ?x .  }", "results": ["Q1634097"], "coreference_resolved_question": "Which organizations are Yasumasa Hane and Kaku Takagawa affiliated to?", "s_expression_fn": "(AND (JOIN (R affiliation) Yasumasa_Hane) (JOIN instance_of organization) (JOIN (R affiliation) Kaku_Takagawa))", "predicted_s_expression_fn": "(DISTINCT (AND (JOIN (R member_of) (VALUES Yasumasa_Hane Kaku_Takagawa)) (JOIN instance_of organization)))", "predicted_s_expression": "", "sparql_attempt_count": 2, "actions": ""}, {"turnID": "625.40.2", "question_type": "Logical Reasoning (All)", "description": "Logical|Difference|Single_Relation", "question": "Which nucleic acid sequences have genetic relation with amyotrophic lateral sclerosis but not lymphoblastic leukemia ? [CTX]", "answer": "Some of them are OLFM4, TSPAN9, SLC39A11, MACROD2, RGS6, CNOT2, NEDD4L, SYNPO2, RBM19, ST3GAL3", "s_expression": "(DIFF (AND (JOIN (R P2293) Q206901) (JOIN P31 Q863908)) (JOIN (R P2293) Q18553852))", "s_expression_cores": ["(AND (JOIN (R P2293) Q206901) (JOIN P31 Q863908))", "(JOIN (R P2293) Q18553852)"], "sparql_delex": "SELECT ?x WHERE { wd:Q206901 wdt:P2293 ?x . ?x wdt:P31 wd:Q863908 .  FILTER NOT EXISTS { wd:Q18553852 wdt:P2293 ?x .  } }", "results": ["Q18052184", "Q18028022", "Q14905515", "Q18030391", "Q18031952", "Q18034654", "Q18030942", "Q18036594", "Q18034504", "Q18034442", "Q18047482", "Q18034037", "Q18031501", "Q18053214", "Q18037219", "Q18037094", "Q17917202", "Q18052989", "Q18030423", "Q18051591", "Q18030180", "Q18034867", "Q18033893", "Q18028444", "Q18027662", "Q18035471", "Q18028076", "Q18035901", "Q14908148", "Q17914420", "Q18047241", "Q18028441", "Q18042006", "Q18033452", "Q17826316", "Q18034007", "Q18030071", "Q18036734", "Q18027222", "Q18036664", "Q17833354", "Q18035486", "Q18033146", "Q18045667", "Q18030033", "Q14901671", "Q18050827", "Q15324395", "Q18047674", "Q18028510", "Q18049070", "Q18042565", "Q18050033", "Q14905312", "Q3944470", "Q18049268", "Q17911616", "Q18050946", "Q18036502", "Q18048815", "Q17912302"], "coreference_resolved_question": "Which nucleic acid sequences have genetic relation with amyotrophic lateral sclerosis but not lymphoblastic leukemia?", "s_expression_fn": "(DIFF (AND (JOIN (R genetic_association) amyotrophic_lateral_sclerosis) (JOIN instance_of nucleic_acid_sequence)) (JOIN (R genetic_association) lymphoblastic_leukemia))", "predicted_s_expression_fn": "(DIFF (AND (JOIN (R genetic_association) amyotrophic_lateral_sclerosis) (JOIN instance_of nucleic_acid_sequence)) (AND (JOIN (R genetic_association) lymphoblastic_leukemia) (JOIN instance_of nucleic_acid_sequence))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "625.102.2", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Single_Relation|Incomplete", "question": "What is the sex of Erik Almgren ? [SEP] male [SEP] Or Didier Herrmann? [CTX]", "answer": "male", "s_expression": "(OR (AND (JOIN (R P21) Q937989) (JOIN P31 Q290)) (AND (JOIN (R P21) Q3027042) (JOIN P31 Q290)))", "s_expression_cores": ["(AND (JOIN (R P21) Q937989) (JOIN P31 Q290))", "(AND (JOIN (R P21) Q3027042) (JOIN P31 Q290))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q937989 wdt:P21 ?x . ?x wdt:P31 wd:Q290 .  } UNION { wd:Q3027042 wdt:P21 ?x . ?x wdt:P31 wd:Q290 .  } }", "results": ["Q6581097"], "coreference_resolved_question": "What is the sex of Didier Herrmann?", "s_expression_fn": "(OR (AND (JOIN (R sex_or_gender) Erik_Almgren) (JOIN instance_of sex)) (AND (JOIN (R sex_or_gender) Didier_Herrmann) (JOIN instance_of sex)))", "predicted_s_expression_fn": "(AND (JOIN (R sex_or_gender) Erik_Almgren) (JOIN (R sex_or_gender) Didier_Herrmann) (JOIN instance_of sex))", "predicted_s_expression": "(AND (JOIN (R P21) Q937989) (JOIN (R P21) Q3027042) (JOIN P31 Q290))", "sparql_attempt_count": 2, "actions": "SELECT ?x WHERE { wd:Q937989 wdt:P21 ?x . wd:Q3027042 wdt:P21 ?x . ?x wdt:P31 wd:Q290 . }"}, {"turnID": "625.118.6", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Single_Relation", "question": "Which cities are sister towns of Leipzig and Beirut ? [CTX]", "answer": "Lyon", "s_expression": "(AND (JOIN (R P190) Q2079) (JOIN P31 Q515) (JOIN (R P190) Q3820))", "s_expression_cores": ["(AND (JOIN (R P190) Q2079) (JOIN P31 Q515) (JOIN (R P190) Q3820))"], "sparql_delex": "SELECT ?x WHERE { wd:Q2079 wdt:P190 ?x . ?x wdt:P31 wd:Q515 .  wd:Q3820 wdt:P190 ?x .  }", "results": ["Q456"], "coreference_resolved_question": "Which cities are sister towns of Leipzig and Beirut?", "s_expression_fn": "(AND (JOIN (R twinned_administrative_body) Leipzig) (JOIN instance_of city) (JOIN (R twinned_administrative_body) Beirut))", "predicted_s_expression_fn": "(DISTINCT (AND (JOIN (R twinned_administrative_body) (VALUES Leipzig Beirut)) (JOIN instance_of city))", "predicted_s_expression": "", "sparql_attempt_count": 2, "actions": ""}, {"turnID": "1545.83.3", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Single_Relation|Incomplete", "question": "What was the war that Antoni Wereszczy\u0144ski took part in [SEP] World War II [SEP] And also Aubrey Ellis Williams [CTX]", "answer": "World War II", "s_expression": "(AND (JOIN (R P607) Q4776214) (JOIN P31 Q198) (JOIN (R P607) Q19937812))", "s_expression_cores": ["(AND (JOIN (R P607) Q4776214) (JOIN P31 Q198) (JOIN (R P607) Q19937812))"], "sparql_delex": "SELECT ?x WHERE { wd:Q4776214 wdt:P607 ?x . ?x wdt:P31 wd:Q198 .  wd:Q19937812 wdt:P607 ?x .  }", "results": ["Q362"], "coreference_resolved_question": "What was the war that Aubrey Ellis Williams took part in?", "s_expression_fn": "(AND (JOIN (R conflict) Antoni_Wereszczy\u0144ski) (JOIN instance_of war) (JOIN (R conflict) Aubrey_Ellis_Williams))", "predicted_s_expression_fn": "(AND (JOIN (R conflict) Antoni_Wereszczy\u0144ski) (JOIN (R conflict) Aubrey_Ellis_Williams) (JOIN instance_of war))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "1545.95.4", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Single_Relation", "question": "Which zoological nomenclatures are the taxonomic types of Homo sapiens and Homo sapiens sapiens ? [CTX]", "answer": "Carl Linnaeus", "s_expression": "(AND (JOIN (R P427) Q15978631) (JOIN P31 Q3343211) (JOIN (R P427) Q3238275))", "s_expression_cores": ["(AND (JOIN (R P427) Q15978631) (JOIN P31 Q3343211) (JOIN (R P427) Q3238275))"], "sparql_delex": "SELECT ?x WHERE { wd:Q15978631 wdt:P427 ?x . ?x wdt:P31 wd:Q3343211 .  wd:Q3238275 wdt:P427 ?x .  }", "results": ["Q1043"], "coreference_resolved_question": "Which zoological nomenclatures are the taxonomic types of Homo sapiens and Homo sapiens sapiens?", "s_expression_fn": "(AND (JOIN (R taxonomic_type) Homo_sapiens) (JOIN instance_of zoological_nomenclature) (JOIN (R taxonomic_type) Homo_sapiens_sapiens))", "predicted_s_expression_fn": "(DISTINCT (AND (JOIN (R type_species) (VALUES Homo_sapiens Homo_sapiens_sapiens)) (JOIN instance_of zoological_nomenclature)))", "predicted_s_expression": "(DISTINCT (AND (JOIN (R P427) (VALUES Q15978631 Q3238275)) (JOIN P31 Q3343211)))", "sparql_attempt_count": 2, "actions": "SELECT DISTINCT ?x WHERE { VALUES ?x0 { wd:Q15978631 wd:Q3238275 } . ?x0 wdt:P427 ?x . ?x wdt:P31 wd:Q3343211 . }"}, {"turnID": "1545.112.6", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Single_Relation", "question": "Which visual artss are Granny Smith and Spike a character of ? [CTX]", "answer": "Magic Duel, The Cutie Pox, Pinkie Apple Pie, Sisterhooves Social", "s_expression": "(AND (JOIN P674 Q15711517) (JOIN P31 Q36649) (JOIN P674 Q3966728))", "s_expression_cores": ["(AND (JOIN P674 Q15711517) (JOIN P31 Q36649) (JOIN P674 Q3966728))"], "sparql_delex": "SELECT ?x WHERE { ?x wdt:P674 wd:Q15711517 . ?x wdt:P31 wd:Q36649 .  ?x wdt:P674 wd:Q3966728 .  }", "results": ["Q15723614", "Q15711669", "Q15720754", "Q15711645"], "coreference_resolved_question": "Which visual arts are Granny Smith and Spike a character of?", "s_expression_fn": "(AND (JOIN characters Granny_Smith) (JOIN instance_of visual_arts) (JOIN characters Spike))", "predicted_s_expression_fn": "(AND (JOIN (R character) (VALUES Granny_Smith Spike)) (JOIN instance_of visual_art))", "predicted_s_expression": "(AND (JOIN P674 (VALUES Q15711517 Q3966728)) (JOIN P31 Q36649))", "sparql_attempt_count": 3, "actions": "SELECT ?x WHERE { VALUES ?x0 { wd:Q15711517 wd:Q3966728 } . ?x wdt:P674 ?x0 . ?x wdt:P31 wd:Q36649 . }"}, {"turnID": "1545.14.2", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Single_Relation|Incomplete", "question": "Where is Low-density lipoprotein receptor-related protein 10 found ? [SEP] Homo sapiens [SEP] Which metabolic process is that nutrient involved in ? [SEP] lipid metabolic process [SEP] Or bll8239    bll8239? [CTX]", "answer": "lipid metabolic process, transposition, DNA-mediated", "s_expression": "(OR (AND (JOIN (R P682) Q21132312) (JOIN P31 Q1057)) (AND (JOIN (R P682) Q24226517) (JOIN P31 Q1057)))", "s_expression_cores": ["(AND (JOIN (R P682) Q21132312) (JOIN P31 Q1057))", "(AND (JOIN (R P682) Q24226517) (JOIN P31 Q1057))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q21132312 wdt:P682 ?x . ?x wdt:P31 wd:Q1057 .  } UNION { wd:Q24226517 wdt:P682 ?x . ?x wdt:P31 wd:Q1057 .  } }", "results": ["Q14349667", "Q21124620"], "coreference_resolved_question": "Which metabolic process is bll8239 involved in?", "s_expression_fn": "(OR (AND (JOIN (R biological_process) Low-density_lipoprotein_receptor-related_protein_10) (JOIN instance_of metabolic_process)) (AND (JOIN (R biological_process) bll8239____bll8239) (JOIN instance_of metabolic_process)))", "predicted_s_expression_fn": "(OR (AND (JOIN involved_in lipid_metabolic_process) (JOIN instance_of nutrient)) (AND (JOIN involved_in bll8239____bll8239) (JOIN instance_of nutrient)))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "1099.29.4", "question_type": "Logical Reasoning (All)", "description": "Logical|Difference|Single_Relation", "question": "Which television programs originated in Japan but not United States of America ? [CTX]", "answer": "Some of them are Sakura Kara no Tegami, Urusei Yatsura, Hassh\u016b Mawari Kuwayama J\u016bbei, Denshi Sentai Denziman, Hana Yori Dango Returns, Ganbare, Kickers!, Specialist, Mobile Suit Gundam: Iron-Blooded Orphans, Aishiteiru to Itte Kure, Hyakujuu Sentai Gaoranger", "s_expression": "(DIFF (AND (JOIN P495 Q17) (JOIN P31 Q15416)) (JOIN P495 Q30))", "s_expression_cores": ["(AND (JOIN P495 Q17) (JOIN P31 Q15416))", "(JOIN P495 Q30)"], "sparql_delex": "SELECT ?x WHERE { ?x wdt:P495 wd:Q17 . ?x wdt:P31 wd:Q15416 .  FILTER NOT EXISTS { ?x wdt:P495 wd:Q30 .  } }", "results": ["Q6912844", "Q2812534", "Q4033646", "Q1224664", "Q400096", "Q615648", "Q2981166", "Q1200102", "Q1058534", "Q1138953", "Q239937", "Q31039", "Q1536948", "Q1195326", "Q697135", "Q5052117", "Q890657", "Q714031", "Q2663963", "Q1359537", "Q1617715", "Q17506785", "Q764897", "Q14936043", "Q768981", "Q651849", "Q1192800", "Q1284240", "Q6844095", "Q2477539", "Q5523724", "Q4185886", "Q1191227", "Q483106", "Q12962308", "Q11271368", "Q17215605", "Q21191019", "Q528175", "Q2912551", "Q11225861", "Q210819", "Q18392373", "Q11258634", "Q11326400", "Q1149954", "Q1314180", "Q11579238", "Q11277884", "Q11344274", "Q10913555", "Q1141930", "Q1151166", "Q18611586", "Q179102", "Q1982608", "Q2631624", "Q3391085", "Q11639199", "Q2758389", "Q772381", "Q11639927", "Q1353486", "Q902256", "Q928809", "Q12964504", "Q2087538", "Q3275479", "Q18579178", "Q182056", "Q3236972", "Q705344", "Q1156862", "Q2773983", "Q169576", "Q937293", "Q2560435", "Q11124801", "Q626947", "Q80873", "Q3699788", "Q2531879", "Q14834452", "Q11615613", "Q1254966", "Q696310", "Q617251", "Q790441", "Q785951", "Q1677312", "Q4183763", "Q16951734", "Q21692491", "Q24871933", "Q2403328", "Q4185799", "Q871823", "Q1193356", "Q4184075", "Q18280664", "Q582851", "Q11249901", "Q832098", "Q2003423", "Q2437612", "Q1072208", "Q5356912", "Q706097", "Q21706898", "Q428130", "Q8069776", "Q962161", "Q11632392", "Q6872401", "Q3751976", "Q2296189", "Q6148809", "Q192015", "Q2628504", "Q17227667", "Q947799", "Q1150946", "Q20579377", "Q452374", "Q3273747", "Q11320614", "Q712498", "Q15980655", "Q1150933", "Q45035", "Q5206006", "Q4250469", "Q1280574", "Q135245", "Q1492841", "Q18459444", "Q2734205", "Q847725", "Q715723", "Q1135343", "Q616817", "Q23719210", "Q707001", "Q665817", "Q18786712", "Q11310485", "Q11257944", "Q18335712", "Q997470", "Q15633150", "Q1093054", "Q15912080", "Q1121828", "Q11292901", "Q2246039", "Q7053569", "Q977634", "Q11390444", "Q845452", "Q1052859", "Q7537343", "Q649385", "Q483943", "Q11326319", "Q1041541", "Q2541387", "Q17502389", "Q1631247", "Q1152081", "Q696346", "Q4922365", "Q1190616", "Q700969", "Q702023", "Q2184097", "Q1193496", "Q7753483", "Q1361413", "Q650264", "Q1147094", "Q1193499", "Q4184122", "Q6415085", "Q6402941", "Q948087", "Q17903715", "Q2409765", "Q970006", "Q2344307", "Q1338812", "Q11326670", "Q2666318", "Q20669175", "Q11276369", "Q20579444", "Q11635277", "Q3276352", "Q21427031", "Q11635279", "Q1078566", "Q601213", "Q2377106", "Q924383", "Q1324584", "Q3782890", "Q136643", "Q6579725", "Q2017815", "Q1201321", "Q1069002", "Q1156870", "Q17212744", "Q11397786", "Q26203725", "Q899764", "Q617849", "Q11324796", "Q591029", "Q11497823", "Q698301", "Q3797372", "Q1074509", "Q1721391", "Q20687831", "Q11390886", "Q714520", "Q9196134", "Q11318676", "Q7078047", "Q577752", "Q8011772", "Q865335", "Q12969700", "Q1349108", "Q2862129", "Q20655866", "Q17530737", "Q10921722", "Q2149697", "Q900953", "Q5363863", "Q482482", "Q5597803", "Q1154476", "Q3110705", "Q1669352", "Q11362204", "Q701189", "Q696236", "Q11661471", "Q15015744", "Q573892", "Q702071", "Q11648377", "Q1372163", "Q375062", "Q11547241", "Q20572016", "Q1060124", "Q1190971", "Q1190975", "Q930562", "Q1005412", "Q689114", "Q909574", "Q702388", "Q711139", "Q1151438", "Q1204069", "Q1142076", "Q1191398", "Q837181", "Q786638", "Q11351949", "Q3279965", "Q2601803", "Q17216592", "Q1054175", "Q711257", "Q18642281", "Q715718", "Q3940838", "Q11550987", "Q272015", "Q874075", "Q3275620", "Q932962", "Q10826784", "Q1440610", "Q586491", "Q1368978", "Q1328971", "Q630860", "Q605856", "Q2699816", "Q930003", "Q11188114", "Q710021", "Q599951", "Q14493917", "Q4699175", "Q2318517", "Q14258203", "Q3050823", "Q7203333", "Q1201909", "Q3241344", "Q1253963", "Q2063214", "Q1198546", "Q1193877", "Q4184202", "Q1315951", "Q1148833", "Q11605445", "Q21072514", "Q838313", "Q1022078", "Q12961352", "Q963199", "Q11659027", "Q1211572", "Q1188422", "Q514043", "Q20045337", "Q958544", "Q702039", "Q7737795", "Q679623", "Q703915", "Q3273305", "Q713277", "Q11265791", "Q1857269", "Q3666893", "Q216204", "Q7940810", "Q1195683", "Q527316", "Q15548228", "Q11375645", "Q1861992", "Q1046959", "Q2839801", "Q18008936", "Q2278068", "Q2480884", "Q1260373", "Q11410679", "Q1191373", "Q1186977", "Q2648165", "Q698394", "Q4183843", "Q1377015", "Q2454313", "Q1364951", "Q1209815", "Q11320631", "Q1150791", "Q16164379", "Q1196705", "Q775743", "Q2262296", "Q858387", "Q7497843", "Q5930943", "Q836752", "Q1200891", "Q2758181", "Q4773554", "Q713889", "Q1054879", "Q3792565", "Q974290", "Q2777601", "Q597424", "Q1156849", "Q11615455", "Q2455599", "Q5358778", "Q18692527", "Q811002", "Q21671792", "Q11626881", "Q11415350", "Q22442709", "Q1318230", "Q901021", "Q11524345", "Q704644", "Q477928", "Q132471", "Q311940", "Q1092074", "Q5113528", "Q626515", "Q21715184", "Q1816132", "Q7883762", "Q11392504", "Q232246", "Q4185879", "Q11278305", "Q10854562", "Q4921022", "Q1068865", "Q702046", "Q666833", "Q1190630", "Q2732941", "Q1192644", "Q3697688", "Q20668445", "Q15908149", "Q18628934", "Q20571649", "Q5368367", "Q1054760", "Q708513", "Q21705946", "Q3127177", "Q3547706", "Q2096030", "Q11415351", "Q11391265", "Q1745049", "Q1974834", "Q17280460", "Q1343566", "Q3273316", "Q19688552", "Q4384067", "Q12124784", "Q2032573", "Q1813828", "Q1564651", "Q3045315", "Q8164617", "Q1505050", "Q11257962", "Q2022612", "Q11325984", "Q11275374", "Q11275379", "Q943798", "Q1156866", "Q777898", "Q1193889", "Q3275494", "Q18128641", "Q645130", "Q1152075", "Q2080026", "Q5963660", "Q120300", "Q641767", "Q4189694", "Q2092998", "Q1479392", "Q3714066", "Q957889", "Q3100965", "Q1200024", "Q617266", "Q902496", "Q699643", "Q699760", "Q4833118", "Q322613", "Q18712381", "Q7401205", "Q423722", "Q4022577", "Q597380", "Q20579519", "Q1197213", "Q1207421", "Q11514929", "Q11187970", "Q661731", "Q278185", "Q900991", "Q3226409", "Q2535197", "Q12019559", "Q24040673", "Q787328", "Q633806", "Q706714", "Q11626745", "Q2164494", "Q1193466", "Q5750462", "Q1317932", "Q700282", "Q740339", "Q702559", "Q951901", "Q1430313", "Q602452", "Q4183773", "Q715731", "Q1156853", "Q1193512", "Q2072877", "Q1140154", "Q1203502", "Q16138249", "Q12964447", "Q16952017", "Q219610", "Q3016271", "Q11636042"], "coreference_resolved_question": "Which television programs originated in Japan but not United States of America?", "s_expression_fn": "(DIFF (AND (JOIN country_of_origin Japan) (JOIN instance_of television_program)) (JOIN country_of_origin United_States_of_America))", "predicted_s_expression_fn": "(DIFF (AND (JOIN (R country_of_origin) Japan) (JOIN instance_of television_program)) (AND (JOIN (R country_of_origin) United_States_of_America) (JOIN instance_of television_program)))", "predicted_s_expression": "", "sparql_attempt_count": 2, "actions": ""}, {"turnID": "1099.118.2", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Single_Relation|Incomplete", "question": "Who is the employer of Th\u00e9ophile Rudolphe Studer ? [SEP] University of Bern [SEP] Which sex does that person belong to ? [SEP] male [SEP] Or Daniel A. Maher? [CTX]", "answer": "male", "s_expression": "(OR (AND (JOIN (R P21) Q122600) (JOIN P31 Q290)) (AND (JOIN (R P21) Q5216333) (JOIN P31 Q290)))", "s_expression_cores": ["(AND (JOIN (R P21) Q122600) (JOIN P31 Q290))", "(AND (JOIN (R P21) Q5216333) (JOIN P31 Q290))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q122600 wdt:P21 ?x . ?x wdt:P31 wd:Q290 .  } UNION { wd:Q5216333 wdt:P21 ?x . ?x wdt:P31 wd:Q290 .  } }", "results": ["Q6581097"], "coreference_resolved_question": "Which sex does Daniel A. Maher belong to?", "s_expression_fn": "(OR (AND (JOIN (R sex_or_gender) Th\u00e9ophile_Rudolphe_Studer) (JOIN instance_of sex)) (AND (JOIN (R sex_or_gender) Daniel_A._Maher) (JOIN instance_of sex)))", "predicted_s_expression_fn": "(AND (JOIN (R sex_or_gender) Th\u00e9ophile_Rudolphe_Studer) (JOIN instance_of sex) (JOIN (R sex_or_gender) Daniel_A._Maher))", "predicted_s_expression": "(AND (JOIN (R P21) Q122600) (JOIN P31 Q290) (JOIN (R P21) Q5216333))", "sparql_attempt_count": 2, "actions": "SELECT ?x WHERE { wd:Q122600 wdt:P21 ?x . ?x wdt:P31 wd:Q290 . wd:Q5216333 wdt:P21 ?x . }"}, {"turnID": "1099.122.6", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Single_Relation", "question": "Which people play association football and ice hockey ? [CTX]", "answer": "Some of them are Karel Ko\u017eeluh, Lev Yashin, Boris Mayorov, Jind\u0159ich Baumruk, Anatoli Tarasov, Wilhelm Peters\u00e9n, Sergei Solovyov, Boris Afanasiev, Vlastimil Bubn\u00edk, Erik Persson", "s_expression": "(AND (JOIN P641 Q2736) (JOIN P31 Q502895) (JOIN P641 Q41466))", "s_expression_cores": ["(AND (JOIN P641 Q2736) (JOIN P31 Q502895) (JOIN P641 Q41466))"], "sparql_delex": "SELECT ?x WHERE { ?x wdt:P641 wd:Q2736 . ?x wdt:P31 wd:Q502895 .  ?x wdt:P641 wd:Q41466 .  }", "results": ["Q167828", "Q27031006", "Q264127", "Q48355", "Q3446713", "Q893608", "Q1379090", "Q15879282", "Q2368457", "Q82378", "Q1628763", "Q970159", "Q3808457", "Q3561789", "Q1607493", "Q723088", "Q3420191", "Q954668", "Q1145971", "Q1444796", "Q4412785", "Q697996", "Q920380", "Q2363825"], "coreference_resolved_question": "Which people play association football and ice hockey?", "s_expression_fn": "(AND (JOIN sport association_football) (JOIN instance_of common_name) (JOIN sport ice_hockey))", "predicted_s_expression_fn": "(AND (JOIN sports_discipline_competed_in association_football) (JOIN sports_discipline_competed_in ice_hockey) (JOIN instance_of common_name))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "348.50.2", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Single_Relation|Incomplete", "question": "Which nucleic acid sequence encodes Aldehyde dehydrogenase family 16 member A1 ? [SEP] Aldh16a1 [SEP] Or NADH dehydrogenase [ubiquinone] 1 alpha subcomplex assembly factor 4? [CTX]", "answer": "NDUFAF4, Aldh16a1", "s_expression": "(OR (AND (JOIN (R P702) Q21494750) (JOIN P31 Q863908)) (AND (JOIN (R P702) Q21123065) (JOIN P31 Q863908)))", "s_expression_cores": ["(AND (JOIN (R P702) Q21494750) (JOIN P31 Q863908))", "(AND (JOIN (R P702) Q21123065) (JOIN P31 Q863908))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q21494750 wdt:P702 ?x . ?x wdt:P31 wd:Q863908 .  } UNION { wd:Q21123065 wdt:P702 ?x . ?x wdt:P31 wd:Q863908 .  } }", "results": ["Q18039575", "Q18263918"], "coreference_resolved_question": "Which nucleic acid sequence encodes NADH dehydrogenase [ubiquinone] 1 alpha subcomplex assembly factor 4?", "s_expression_fn": "(OR (AND (JOIN (R encoded_by) Aldehyde_dehydrogenase_family_16_member_A1) (JOIN instance_of nucleic_acid_sequence)) (AND (JOIN (R encoded_by) NADH_dehydrogenase_[ubiquinone]_1_alpha_subcomplex_assembly_factor_4) (JOIN instance_of nucleic_acid_sequence)))", "predicted_s_expression_fn": "(OR (AND (JOIN encoded_by Aldh16a1) (JOIN instance_of nucleic_acid_sequence)) (AND (JOIN encoded_by NADH_dehydrogenase_[ubiquinone]_1_alpha_subcomplex_assembly_factor_4) (JOIN instance_of nucleic_acid_sequence)))", "predicted_s_expression": "", "sparql_attempt_count": 1, "actions": ""}, {"turnID": "348.88.4", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Single_Relation|Incomplete", "question": "Which administrative territory is Jaap van Hattum a civilian of ? [SEP] Kingdom of the Netherlands [SEP] Which occupations have that person as his/her 's career ? [SEP] poet, writer [SEP] Or Heidi Kivel\u00e4? [CTX]", "answer": "writer, poet, association football player", "s_expression": "(OR (AND (JOIN (R P106) Q2227171) (JOIN P31 Q12737077)) (AND (JOIN (R P106) Q10555430) (JOIN P31 Q12737077)))", "s_expression_cores": ["(AND (JOIN (R P106) Q2227171) (JOIN P31 Q12737077))", "(AND (JOIN (R P106) Q10555430) (JOIN P31 Q12737077))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q2227171 wdt:P106 ?x . ?x wdt:P31 wd:Q12737077 .  } UNION { wd:Q10555430 wdt:P106 ?x . ?x wdt:P31 wd:Q12737077 .  } }", "results": ["Q36180", "Q49757", "Q937857"], "coreference_resolved_question": "Which occupations have Heidi Kivel\u00e4 as his/her career?", "s_expression_fn": "(OR (AND (JOIN (R occupation) Jaap_van_Hattum) (JOIN instance_of occupation)) (AND (JOIN (R occupation) Heidi_Kivel\u00e4) (JOIN instance_of occupation)))", "predicted_s_expression_fn": "(AND (JOIN (R occupation) Jaap_van_Hattum) (JOIN instance_of occupation) (JOIN (R occupation) Heidi_Kivel\u00e4))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "348.39.5", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Single_Relation", "question": "Which industries have music executive and record producer as thier associated field of occupation ? [CTX]", "answer": "music production", "s_expression": "(AND (JOIN (R P425) Q3089940) (JOIN P31 Q8148) (JOIN (R P425) Q183945))", "s_expression_cores": ["(AND (JOIN (R P425) Q3089940) (JOIN P31 Q8148) (JOIN (R P425) Q183945))"], "sparql_delex": "SELECT ?x WHERE { wd:Q3089940 wdt:P425 ?x . ?x wdt:P31 wd:Q8148 .  wd:Q183945 wdt:P425 ?x .  }", "results": ["Q959049"], "coreference_resolved_question": "Which industries have music executive and record producer as their associated field of occupation?", "s_expression_fn": "(AND (JOIN (R field_of_this_occupation) music_executive) (JOIN instance_of industry) (JOIN (R field_of_this_occupation) record_producer))", "predicted_s_expression_fn": "(AND (JOIN (R field_of_work) (VALUES music_executive record_producer)) (JOIN instance_of industry))", "predicted_s_expression": "", "sparql_attempt_count": 2, "actions": ""}, {"turnID": "348.98.2", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Single_Relation|Incomplete", "question": "Which sporting event did M\u00e1ria Gul\u00e1csy compete in ? [SEP] Fencing at the 1968 Summer Olympics \u2013 Women's team foil [SEP] Which sport was that sporting event a part of ? [SEP] fencing [SEP] Or Artyom Rogotnev? [CTX]", "answer": "fencing, association football", "s_expression": "(OR (AND (JOIN (R P641) Q5443101) (JOIN P31 Q349)) (AND (JOIN (R P641) Q4801916) (JOIN P31 Q349)))", "s_expression_cores": ["(AND (JOIN (R P641) Q5443101) (JOIN P31 Q349))", "(AND (JOIN (R P641) Q4801916) (JOIN P31 Q349))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q5443101 wdt:P641 ?x . ?x wdt:P31 wd:Q349 .  } UNION { wd:Q4801916 wdt:P641 ?x . ?x wdt:P31 wd:Q349 .  } }", "results": ["Q12100", "Q2736"], "coreference_resolved_question": "Which sport did Artyom Rogotnev compete in?", "s_expression_fn": "(OR (AND (JOIN (R sport) Fencing_at_the_1968_Summer_Olympics_\u2013_Women's_team_foil) (JOIN instance_of sport)) (AND (JOIN (R sport) Artyom_Rogotnev) (JOIN instance_of sport)))", "predicted_s_expression_fn": "(AND (JOIN (R sports_discipline_competed_in) Artyom_Rogotnev) (JOIN instance_of sporting_event))", "predicted_s_expression": "", "sparql_attempt_count": 2, "actions": ""}, {"turnID": "348.84.5", "question_type": "Logical Reasoning (All)", "description": "Logical|Difference|Multiple_Relation", "question": "Which administrative territories have diplomatic relationships with Germany and are not the countries of citizenship of Igor Cherevchenko ? [CTX]", "answer": "Some of them are Egypt, Republic of Moldova, North Korea, Togo, Madagascar, Dominican Republic, Peru, Argentina, Somalia, People's Republic of China", "s_expression": "(DIFF (AND (JOIN (R P530) Q183) (JOIN P31 Q15617994)) (JOIN (R P27) Q4512643))", "s_expression_cores": ["(AND (JOIN (R P530) Q183) (JOIN P31 Q15617994))", "(JOIN (R P27) Q4512643)"], "sparql_delex": "SELECT ?x WHERE { wd:Q183 wdt:P530 ?x . ?x wdt:P31 wd:Q15617994 .  FILTER NOT EXISTS { wd:Q4512643 wdt:P27 ?x .  } }", "results": ["Q804", "Q801", "Q800", "Q419", "Q668", "Q414", "Q142", "Q55", "Q145", "Q262", "Q148", "Q783", "Q265", "Q833", "Q711", "Q717", "Q252", "Q403", "Q657", "Q258", "Q45", "Q43", "Q41", "Q155", "Q796", "Q794", "Q954", "Q889", "Q884", "Q958", "Q881", "Q739", "Q241", "Q242", "Q811", "Q33", "Q32", "Q31", "Q30", "Q924", "Q36", "Q34", "Q929", "Q39", "Q38", "Q986", "Q423", "Q983", "Q851", "Q733", "Q734", "Q736", "Q730", "Q230", "Q232", "Q233", "Q238", "Q20", "Q1045", "Q1041", "Q27", "Q28", "Q29", "Q1049", "Q189", "Q843", "Q184", "Q1029", "Q1028", "Q786", "Q347", "Q227", "Q225", "Q224", "Q222", "Q96", "Q229", "Q228", "Q17", "Q902", "Q1036", "Q1037", "Q1008", "Q1032", "Q1033", "Q1030", "Q965", "Q967", "Q962", "Q963", "Q298", "Q115", "Q114", "Q117", "Q750", "Q212", "Q213", "Q217", "Q214", "Q215", "Q218", "Q219", "Q912", "Q917", "Q916", "Q1007", "Q1006", "Q1005", "Q1009", "Q974", "Q971", "Q79", "Q77", "Q878", "Q774", "Q948", "Q810", "Q1019", "Q1016", "Q1011", "Q945", "Q869", "Q953"], "coreference_resolved_question": "Which administrative territories have diplomatic relationships with Germany and are not the countries of citizenship of Igor Cherevchenko?", "s_expression_fn": "(DIFF (AND (JOIN (R diplomatic_relation) Germany) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (JOIN (R country_of_citizenship) Igor_Cherevchenko))", "predicted_s_expression_fn": "(DIFF (AND (JOIN diplomatic_relation Germany) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (AND (JOIN country_of_citizenship Igor_Cherevchenko) (JOIN instance_of designation_for_an_administrative_territorial_entity))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "348.67.6", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Multiple_Relation", "question": "Which administrative territories did The Grand originate or are Awad Zakka a civilian of ? [CTX]", "answer": "Libya, United States of America", "s_expression": "(OR (AND (JOIN (R P495) Q280006) (JOIN P31 Q15617994)) (AND (JOIN (R P27) Q20031145) (JOIN P31 Q15617994)))", "s_expression_cores": ["(AND (JOIN (R P495) Q280006) (JOIN P31 Q15617994))", "(AND (JOIN (R P27) Q20031145) (JOIN P31 Q15617994))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q280006 wdt:P495 ?x . ?x wdt:P31 wd:Q15617994 .  } UNION { wd:Q20031145 wdt:P27 ?x . ?x wdt:P31 wd:Q15617994 .  } }", "results": ["Q1016", "Q30"], "coreference_resolved_question": "Which administrative territories did Awad Zakka originate or are Awad Zakka a civilian of?", "s_expression_fn": "(OR (AND (JOIN (R country_of_origin) The_Grand) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (AND (JOIN (R country_of_citizenship) Awad_Zakka) (JOIN instance_of designation_for_an_administrative_territorial_entity)))", "predicted_s_expression_fn": "(DISTINCT (OR (AND (JOIN (R place_of_origin) The_Grand) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (AND (JOIN (R country_of_citizenship) Awad_Zakka) (JOIN instance_of designation_for_an_administrative_territorial_entity))))", "predicted_s_expression": "", "sparql_attempt_count": 1, "actions": ""}, {"turnID": "348.20.9", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Single_Relation", "question": "Which international organizations were Netherlands and Belarus a member of ? [CTX]", "answer": "Organization for Security and Co-operation in Europe, Multilateral Investment Guarantee Agency", "s_expression": "(AND (JOIN (R P463) Q55) (JOIN P31 Q484652) (JOIN (R P463) Q184))", "s_expression_cores": ["(AND (JOIN (R P463) Q55) (JOIN P31 Q484652) (JOIN (R P463) Q184))"], "sparql_delex": "SELECT ?x WHERE { wd:Q55 wdt:P463 ?x . ?x wdt:P31 wd:Q484652 .  wd:Q184 wdt:P463 ?x .  }", "results": ["Q81299", "Q1043527"], "coreference_resolved_question": "Which international organizations were Netherlands and Belarus a member of?", "s_expression_fn": "(AND (JOIN (R member_of) Netherlands) (JOIN instance_of international_organization) (JOIN (R member_of) Belarus))", "predicted_s_expression_fn": "(DISTINCT (AND (JOIN (R member_of) (VALUES Netherlands Belarus)) (JOIN instance_of international_organization))", "predicted_s_expression": "", "sparql_attempt_count": 2, "actions": ""}, {"turnID": "348.20.11", "question_type": "Logical Reasoning (All)", "description": "Logical|Difference|Multiple_Relation", "question": "Which people have George Soros as father and do not have gender of female ? [CTX]", "answer": "Alexander Soros, Gregory Soros, Jonathan Soros, Robert Soros", "s_expression": "(DIFF (AND (JOIN P22 Q12908) (JOIN P31 Q502895)) (JOIN P21 Q6581072))", "s_expression_cores": ["(AND (JOIN P22 Q12908) (JOIN P31 Q502895))", "(JOIN P21 Q6581072)"], "sparql_delex": "SELECT ?x WHERE { ?x wdt:P22 wd:Q12908 . ?x wdt:P31 wd:Q502895 .  FILTER NOT EXISTS { ?x wdt:P21 wd:Q6581072 .  } }", "results": ["Q4720120", "Q22244478", "Q19874733", "Q22244492"], "coreference_resolved_question": "Which people have George Soros as father and do not have gender of female?", "s_expression_fn": "(DIFF (AND (JOIN father George_Soros) (JOIN instance_of common_name)) (JOIN sex_or_gender female))", "predicted_s_expression_fn": "(DIFF (AND (JOIN father George_Soros) (JOIN instance_of common_name)) (AND (JOIN (R sex_or_gender) (JOIN instance_of female)))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "348.38.9", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Multiple_Relation", "question": "Which health problems caused the death of Jim Backus and do Bob Montgomery suffer from ? [CTX]", "answer": "Parkinson's disease", "s_expression": "(AND (JOIN (R P509) Q1236412) (JOIN P31 Q2057971) (JOIN (R P1050) Q4933435))", "s_expression_cores": ["(AND (JOIN (R P509) Q1236412) (JOIN P31 Q2057971) (JOIN (R P1050) Q4933435))"], "sparql_delex": "SELECT ?x WHERE { wd:Q1236412 wdt:P509 ?x . ?x wdt:P31 wd:Q2057971 .  wd:Q4933435 wdt:P1050 ?x .  }", "results": ["Q11085"], "coreference_resolved_question": "Which health problems caused the death of Jim Backus and does Bob Montgomery suffer from?", "s_expression_fn": "(AND (JOIN (R cause_of_death) Jim_Backus) (JOIN instance_of health_problem) (JOIN (R medical_condition) Bob_Montgomery))", "predicted_s_expression_fn": "(INTERSECTION (AND (JOIN (R cause_of_death) Jim_Backus) (JOIN instance_of disease)) (AND (JOIN (R medical_condition) Bob_Montgomery) (JOIN instance_of disease)))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "348.5.6", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Single_Relation", "question": "Which people are associated with playing association football and athletics ? [CTX]", "answer": "Some of them are Val\u00e9ry Sedoc, Charles Grimshaw, Barend van Hemert, Willem Hesselink, Wim Roosen, Rudolf Spaander, Issa Hayatou, Isabelino Grad\u00edn, Faisal Faisal, Apostolos Nikolaidis", "s_expression": "(AND (JOIN P641 Q2736) (JOIN P31 Q502895) (JOIN P641 Q542))", "s_expression_cores": ["(AND (JOIN P641 Q2736) (JOIN P31 Q502895) (JOIN P641 Q542))"], "sparql_delex": "SELECT ?x WHERE { ?x wdt:P641 wd:Q2736 . ?x wdt:P31 wd:Q502895 .  ?x wdt:P641 wd:Q542 .  }", "results": ["Q250557", "Q2326617", "Q1586429", "Q313443", "Q18221554", "Q314131", "Q176479", "Q2939295", "Q1389937", "Q250005", "Q2440937", "Q21131654", "Q2423103", "Q100725", "Q3564965", "Q2701223", "Q4846455", "Q18637568", "Q15879282", "Q331223", "Q1356677", "Q715331", "Q456600", "Q2179088", "Q1384801", "Q1159566", "Q1460792", "Q3498145", "Q19519353", "Q1035032", "Q919648", "Q11718279", "Q2355792", "Q489047", "Q11779642", "Q1989888", "Q1682410", "Q2491603", "Q303795", "Q11729330", "Q301677", "Q3266827", "Q1810317", "Q312662", "Q18758295", "Q11613383", "Q1393494", "Q2756677", "Q870676", "Q11754531", "Q2206273"], "coreference_resolved_question": "Which people are associated with playing association football and athletics?", "s_expression_fn": "(AND (JOIN sport association_football) (JOIN instance_of common_name) (JOIN sport athletics))", "predicted_s_expression_fn": "(AND (JOIN sports_discipline_competed_in association_football) (JOIN sports_discipline_competed_in athletics) (JOIN instance_of common_name))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "348.64.7", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Single_Relation", "question": "Which recurring events did Germany national football team and Nuno Valente take part in ? [CTX]", "answer": "2006 FIFA World Cup", "s_expression": "(AND (JOIN (R P1344) Q43310) (JOIN P31 Q15275719) (JOIN (R P1344) Q311968))", "s_expression_cores": ["(AND (JOIN (R P1344) Q43310) (JOIN P31 Q15275719) (JOIN (R P1344) Q311968))"], "sparql_delex": "SELECT ?x WHERE { wd:Q43310 wdt:P1344 ?x . ?x wdt:P31 wd:Q15275719 .  wd:Q311968 wdt:P1344 ?x .  }", "results": ["Q37285"], "coreference_resolved_question": "Which recurring events did Germany national football team and Nuno Valente take part in?", "s_expression_fn": "(AND (JOIN (R participant_in) Germany_national_football_team) (JOIN instance_of recurring_event) (JOIN (R participant_in) Nuno_Valente))", "predicted_s_expression_fn": "(DISTINCT (AND (JOIN (R participant) (VALUES Germany_national_football_team Nuno_Valente)) (JOIN instance_of recurring_event)))", "predicted_s_expression": "(DISTINCT (AND (JOIN P710 (VALUES Q43310 Q311968)) (JOIN P31 Q1190554)))", "sparql_attempt_count": 3, "actions": "SELECT DISTINCT ?x WHERE { VALUES ?x0 { wd:Q43310 wd:Q311968 } . ?x wdt:P710 ?x0 . ?x wdt:P31 wd:Q1190554 . }"}, {"turnID": "348.54.2", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Single_Relation|Incomplete", "question": "Who has Jussi Paatela as their brother ? [SEP] Toivo Paatela [SEP] Where was that person born ? [SEP] Vantaa [SEP] Or Gustave Julien? [CTX]", "answer": "Vantaa, Toulouse", "s_expression": "(OR (AND (JOIN (R P19) Q11897941) (JOIN P31 Q56061)) (AND (JOIN (R P19) Q19630753) (JOIN P31 Q56061)))", "s_expression_cores": ["(AND (JOIN (R P19) Q11897941) (JOIN P31 Q56061))", "(AND (JOIN (R P19) Q19630753) (JOIN P31 Q56061))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q11897941 wdt:P19 ?x . ?x wdt:P31 wd:Q56061 .  } UNION { wd:Q19630753 wdt:P19 ?x . ?x wdt:P31 wd:Q56061 .  } }", "results": ["Q127623", "Q7880"], "coreference_resolved_question": "Where was Gustave Julien born?", "s_expression_fn": "(OR (AND (JOIN (R place_of_birth) Toivo_Paatela) (JOIN instance_of administrative_territorial_entity)) (AND (JOIN (R place_of_birth) Gustave_Julien) (JOIN instance_of administrative_territorial_entity)))", "predicted_s_expression_fn": "(OR (JOIN (R place_of_birth) Toivo_Paatela (JOIN (R place_of_birth) Gustave_Julien)", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "348.60.6", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Single_Relation", "question": "Which people talks in English and Latin ? [CTX]", "answer": "Some of them are Edith Eccles, John Quincy Adams, Leonard Cox, Andreas Graeber, Heide Frielinghaus, James Madison, Francis de Zulueta, Marc Boone, Dieter Salzmann, B\u00e4rbel Morstadt", "s_expression": "(AND (JOIN P1412 Q1860) (JOIN P31 Q502895) (JOIN P1412 Q397))", "s_expression_cores": ["(AND (JOIN P1412 Q1860) (JOIN P31 Q502895) (JOIN P1412 Q397))"], "sparql_delex": "SELECT ?x WHERE { ?x wdt:P1412 wd:Q1860 . ?x wdt:P31 wd:Q502895 .  ?x wdt:P1412 wd:Q397 .  }", "results": ["Q96028", "Q26849152", "Q1763673", "Q3309269", "Q37388", "Q21544228", "Q1322600", "Q120981", "Q553900", "Q1821799", "Q26926299", "Q35236", "Q1249649", "Q25201577", "Q12238301", "Q11881", "Q1478736", "Q26839510", "Q2366692", "Q333481", "Q2847505", "Q254", "Q26913604", "Q79759", "Q11869", "Q3525572", "Q73314", "Q1275676", "Q4530036", "Q42544", "Q208359", "Q1703552", "Q47434", "Q155764", "Q1469192", "Q26727497", "Q455618", "Q789770", "Q378629", "Q26863601", "Q1526959", "Q957174", "Q24716557", "Q18215092", "Q132537", "Q1294089", "Q3888783", "Q4820864", "Q21064904", "Q116003", "Q1215530", "Q156774", "Q817600", "Q233669", "Q2375310", "Q1268371", "Q354612", "Q26162501", "Q157501", "Q37621", "Q807098", "Q486886", "Q1113837", "Q173893", "Q26646814", "Q117763", "Q26706969", "Q656317", "Q645138", "Q2512005", "Q935", "Q1736643", "Q12407488", "Q3571438", "Q3810279", "Q7412249", "Q45838", "Q1618852", "Q1163753", "Q26839360", "Q4419165", "Q783318", "Q2053636", "Q820328", "Q11812", "Q23583654", "Q201484", "Q21993525", "Q6286234", "Q1335413", "Q2343886", "Q13814259", "Q215644", "Q34597", "Q472071", "Q1331491", "Q12325", "Q3084947", "Q374118", "Q9353", "Q21253959", "Q26736154", "Q23765769", "Q8011973", "Q5482925", "Q1593895", "Q206384", "Q18910558", "Q2475124", "Q364264", "Q11816", "Q1222747", "Q84403", "Q11813", "Q555575", "Q132065", "Q673718", "Q57106", "Q200397", "Q35498", "Q19959384", "Q1895389", "Q1328787", "Q553892", "Q17322522", "Q23449974", "Q3181405", "Q166234", "Q559213", "Q328969", "Q35686", "Q2706259", "Q316556", "Q369366", "Q1895924", "Q213754", "Q11806", "Q497560", "Q1231843", "Q6525197", "Q13060206", "Q471406", "Q395340", "Q23967602", "Q1532157", "Q3112766", "Q1201342", "Q793107", "Q599839", "Q17455", "Q6226423", "Q4887795", "Q11891", "Q2579794"], "coreference_resolved_question": "Which people talk in English and Latin?", "s_expression_fn": "(AND (JOIN languages_spoken,_written_or_signed English) (JOIN instance_of common_name) (JOIN languages_spoken,_written_or_signed Latin))", "predicted_s_expression_fn": "(AND (JOIN (R language_spoken) English) (JOIN (R language_spoken) Latin) (JOIN instance_of common_name))", "predicted_s_expression": "(AND (JOIN P1412 Q1860) (JOIN P1412 Q397) (JOIN P31 Q502895))", "sparql_attempt_count": 5, "actions": "SELECT ?x WHERE { ?x wdt:P1412 wd:Q1860 . ?x wdt:P1412 wd:Q397 . ?x wdt:P31 wd:Q502895 . }"}, {"turnID": "1566.72.2", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Single_Relation|Incomplete", "question": "Where was Daryl Johnston educated ? [SEP] Syracuse University [SEP] What are the name of people who works for that nonprofit organization ? [SEP] Delmore Schwartz, Jaime Ferran, Jonathan Bennett [SEP] Or Preston North End F.C.? [CTX]", "answer": "Some of them are Jim Boeheim, Jonathan Bennett, Michael Echeruo, Boyce Watkins, Bettye Caldwell, Delmore Schwartz, Brian Wood, Jaime Ferran, William Berwald, Michael Barkun", "s_expression": "(OR (AND (JOIN P108 Q617433) (JOIN P31 Q502895)) (AND (JOIN P108 Q19612) (JOIN P31 Q502895)))", "s_expression_cores": ["(AND (JOIN P108 Q617433) (JOIN P31 Q502895))", "(AND (JOIN P108 Q19612) (JOIN P31 Q502895))"], "sparql_delex": "SELECT ?x WHERE { { ?x wdt:P108 wd:Q617433 . ?x wdt:P31 wd:Q502895 .  } UNION { ?x wdt:P108 wd:Q19612 . ?x wdt:P31 wd:Q502895 .  } }", "results": ["Q6788321", "Q6830067", "Q4977552", "Q4952259", "Q8005498", "Q24416292", "Q16942146", "Q4965679", "Q23926397", "Q3738153", "Q1234195", "Q258929", "Q530705", "Q1184545"], "coreference_resolved_question": "What are the names of people who work for Preston North End F.C.?", "s_expression_fn": "(OR (AND (JOIN employer Syracuse_University) (JOIN instance_of common_name)) (AND (JOIN employer Preston_North_End_F.C) (JOIN instance_of common_name)))", "predicted_s_expression_fn": "(AND (JOIN (R employer) Preston_North_End_F.C.) (JOIN instance_of common_name))", "predicted_s_expression": "(AND (JOIN P108 Q19612) (JOIN P31 Q502895))", "sparql_attempt_count": 3, "actions": "SELECT ?x WHERE { ?x wdt:P108 wd:Q19612 . ?x wdt:P31 wd:Q502895 . }"}, {"turnID": "1566.19.4", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Single_Relation", "question": "Which national sports teams have Milen Gamakov and Antoni Zdravkov as their member ? [CTX]", "answer": "Bulgaria national football team", "s_expression": "(AND (JOIN (R P54) Q14199500) (JOIN P31 Q1194951) (JOIN (R P54) Q4776218))", "s_expression_cores": ["(AND (JOIN (R P54) Q14199500) (JOIN P31 Q1194951) (JOIN (R P54) Q4776218))"], "sparql_delex": "SELECT ?x WHERE { wd:Q14199500 wdt:P54 ?x . ?x wdt:P31 wd:Q1194951 .  wd:Q4776218 wdt:P54 ?x .  }", "results": ["Q180845"], "coreference_resolved_question": "Which national sports teams have Milen Gamakov and Antoni Zdravkov as their member?", "s_expression_fn": "(AND (JOIN (R member_of_sports_team) Milen_Gamakov) (JOIN instance_of national_sports_team) (JOIN (R member_of_sports_team) Antoni_Zdravkov))", "predicted_s_expression_fn": "(AND (JOIN member_of_sports_team Milen_Gamakov) (JOIN member_of_sports_team Antoni_Zdravkov) (JOIN instance_of national_sports_team))", "predicted_s_expression": "(AND (JOIN (R P54) Q14199500) (JOIN (R P54) Q4776218) (JOIN P31 Q1194951))", "sparql_attempt_count": 5, "actions": "SELECT ?x WHERE { wd:Q14199500 wdt:P54 ?x . wd:Q4776218 wdt:P54 ?x . ?x wdt:P31 wd:Q1194951 . }"}, {"turnID": "1566.113.2", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Single_Relation|Incomplete", "question": "What did Christian Hansen participate in ? [SEP] artistic gymnastics [SEP] What is the sex of that person ? [SEP] male [SEP] And also Alan Dargin [CTX]", "answer": "male", "s_expression": "(AND (JOIN (R P21) Q5109674) (JOIN P31 Q290) (JOIN (R P21) Q2623428))", "s_expression_cores": ["(AND (JOIN (R P21) Q5109674) (JOIN P31 Q290) (JOIN (R P21) Q2623428))"], "sparql_delex": "SELECT ?x WHERE { wd:Q5109674 wdt:P21 ?x . ?x wdt:P31 wd:Q290 .  wd:Q2623428 wdt:P21 ?x .  }", "results": ["Q6581097"], "coreference_resolved_question": "What is the sex of Alan Dargin?", "s_expression_fn": "(AND (JOIN (R sex_or_gender) Christian_Hansen) (JOIN instance_of sex) (JOIN (R sex_or_gender) Alan_Dargin))", "predicted_s_expression_fn": "(AND (JOIN (R sex_or_gender) Christian_Hansen) (JOIN instance_of sex) (JOIN (R sex_or_gender) Alan_Dargin))", "predicted_s_expression": "(AND (JOIN (R P21) Q18620036) (JOIN P31 Q290) (JOIN (R P21) Q2623428))", "sparql_attempt_count": 2, "actions": "SELECT ?x WHERE { wd:Q18620036 wdt:P21 ?x . ?x wdt:P31 wd:Q290 . wd:Q2623428 wdt:P21 ?x . }"}, {"turnID": "1566.105.2", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Single_Relation|Incomplete", "question": "Who is associated with Daiki Hattori ? [SEP] Hattori [SEP] What is the job of that person ? [SEP] association football player [SEP] Or My Tam? [CTX]", "answer": "musician, association football player, actor, singer", "s_expression": "(OR (AND (JOIN (R P106) Q11516904) (JOIN P31 Q12737077)) (AND (JOIN (R P106) Q1993589) (JOIN P31 Q12737077)))", "s_expression_cores": ["(AND (JOIN (R P106) Q11516904) (JOIN P31 Q12737077))", "(AND (JOIN (R P106) Q1993589) (JOIN P31 Q12737077))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q11516904 wdt:P106 ?x . ?x wdt:P31 wd:Q12737077 .  } UNION { wd:Q1993589 wdt:P106 ?x . ?x wdt:P31 wd:Q12737077 .  } }", "results": ["Q639669", "Q937857", "Q33999", "Q177220"], "coreference_resolved_question": "What is the job of Or My Tam?", "s_expression_fn": "(OR (AND (JOIN (R occupation) Daiki_Hattori) (JOIN instance_of occupation)) (AND (JOIN (R occupation) My_Tam) (JOIN instance_of occupation)))", "predicted_s_expression_fn": "(AND (JOIN (R occupation) My_Tam) (JOIN instance_of association_football_player)", "predicted_s_expression": "", "sparql_attempt_count": 2, "actions": ""}, {"turnID": "1566.3.4", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Single_Relation", "question": "Which works of art originated in Canada and India ? [CTX]", "answer": "Siddharth, Breakaway, Namumkin, Fire, Water, Earth", "s_expression": "(AND (JOIN P495 Q16) (JOIN P31 Q838948) (JOIN P495 Q668))", "s_expression_cores": ["(AND (JOIN P495 Q16) (JOIN P31 Q838948) (JOIN P495 Q668))"], "sparql_delex": "SELECT ?x WHERE { ?x wdt:P495 wd:Q16 . ?x wdt:P31 wd:Q838948 .  ?x wdt:P495 wd:Q668 .  }", "results": ["Q16254249", "Q4959370", "Q6962121", "Q1418833", "Q617395", "Q2561440"], "coreference_resolved_question": "Which works of art originated in Canada and India?", "s_expression_fn": "(AND (JOIN country_of_origin Canada) (JOIN instance_of work_of_art) (JOIN country_of_origin India))", "predicted_s_expression_fn": "(AND (JOIN (R country_of_origin) Canada) (JOIN (R country_of_origin) India) (JOIN instance_of work_of_art))", "predicted_s_expression": "(AND (JOIN P495 Q16) (JOIN P495 Q668) (JOIN P31 Q838948))", "sparql_attempt_count": 5, "actions": "SELECT ?x WHERE { ?x wdt:P495 wd:Q16 . ?x wdt:P495 wd:Q668 . ?x wdt:P31 wd:Q838948 . }"}, {"turnID": "1458.61.2", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Single_Relation|Incomplete", "question": "What is the taxon to which UDP-N-acetylenolpyruvoylglucosamine reductase    LBA0708 belongs to ? [SEP] Lactobacillus acidophilus NCFM [SEP] Which metabolic process is that nutrient involved in ? [SEP] oxidation-reduction process [SEP] And also malate dehydrogenase    SE0461 [CTX]", "answer": "oxidation-reduction process", "s_expression": "(AND (JOIN (R P682) Q22257449) (JOIN P31 Q1057) (JOIN (R P682) Q23481563))", "s_expression_cores": ["(AND (JOIN (R P682) Q22257449) (JOIN P31 Q1057) (JOIN (R P682) Q23481563))"], "sparql_delex": "SELECT ?x WHERE { wd:Q22257449 wdt:P682 ?x . ?x wdt:P31 wd:Q1057 .  wd:Q23481563 wdt:P682 ?x .  }", "results": ["Q14349764"], "coreference_resolved_question": "The target question is: \"Which metabolic process is malate dehydrogenase SE0461 involved in?\"\n\nHowever, I notice that the entity list doesn't include \"malate dehydrogenase SE0461\" - the closest entity is \"UDP-N-acetylenolpyruvoylglucosamine reductase LBA0708\". \n\nSince the question refers to \"malate dehydrogenase SE0461\" but this entity isn't listed, I cannot properly resolve this coreference. The output would be incomplete without the correct entity information. \n\nThe most complete question I can generate based on available entities is:\nWhich metabolic process is UDP-N-acetylenolpyruvoylglucosamine reductase LBA0708 involved in?\n\nBut this doesn't match the intended question about malate dehydrogenase. The entity list appears to be missing the required information.", "s_expression_fn": "(AND (JOIN (R biological_process) UDP-N-acetylenolpyruvoylglucosamine_reductase____LBA0708) (JOIN instance_of metabolic_process) (JOIN (R biological_process) malate_dehydrogenase____SE0461))", "predicted_s_expression_fn": "(AND (JOIN (R involved_in) malate_dehydrogenase____SE0461) (JOIN instance_of metabolic_process))", "predicted_s_expression": "", "sparql_attempt_count": 2, "actions": ""}, {"turnID": "1458.6.6", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Single_Relation", "question": "Which museums are Portrait of a Young Man and Love as Folly preserved in ? [CTX]", "answer": "National Gallery of Art, Washington", "s_expression": "(AND (JOIN (R P195) Q20020115) (JOIN P31 Q33506) (JOIN (R P195) Q20178593))", "s_expression_cores": ["(AND (JOIN (R P195) Q20020115) (JOIN P31 Q33506) (JOIN (R P195) Q20178593))"], "sparql_delex": "SELECT ?x WHERE { wd:Q20020115 wdt:P195 ?x . ?x wdt:P31 wd:Q33506 .  wd:Q20178593 wdt:P195 ?x .  }", "results": ["Q214867"], "coreference_resolved_question": "Which museums are Portrait of a Young Man and Love as Folly preserved in?", "s_expression_fn": "(AND (JOIN (R collection) Portrait_of_a_Young_Man) (JOIN instance_of museum) (JOIN (R collection) Love_as_Folly))", "predicted_s_expression_fn": "(DISTINCT (AND (JOIN (R location) (VALUES Portrait_of_a_Young_Man Love_as_Folly)) (JOIN instance_of museum)))", "predicted_s_expression": "(DISTINCT (AND (JOIN (R P276) (VALUES Q20020115 Q20178605)) (JOIN P31 Q33506)))", "sparql_attempt_count": 2, "actions": "SELECT DISTINCT ?x WHERE { VALUES ?x0 { wd:Q20020115 wd:Q20178605 } . ?x0 wdt:P276 ?x . ?x wdt:P31 wd:Q33506 . }"}, {"turnID": "864.152.3", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Single_Relation|Incomplete", "question": "Which administrative territory was Marc Rzatkowski born in ? [SEP] Bochum [SEP] Which geographic location is that administrative territory situated in ? [SEP] Eurasia [SEP] And also Iberia [CTX]", "answer": "Eurasia", "s_expression": "(AND (JOIN (R P30) Q2103) (JOIN P31 Q2221906) (JOIN (R P30) Q19083))", "s_expression_cores": ["(AND (JOIN (R P30) Q2103) (JOIN P31 Q2221906) (JOIN (R P30) Q19083))"], "sparql_delex": "SELECT ?x WHERE { wd:Q2103 wdt:P30 ?x . ?x wdt:P31 wd:Q2221906 .  wd:Q19083 wdt:P30 ?x .  }", "results": ["Q5401"], "coreference_resolved_question": "Which geographic location is Iberia situated in?", "s_expression_fn": "(AND (JOIN (R continent) Bochum) (JOIN instance_of geographic_location) (JOIN (R continent) Iberia))", "predicted_s_expression_fn": "(AND (JOIN (R continent) Bochum) (JOIN instance_of geographic_location) (JOIN (R continent) Iberia))", "predicted_s_expression": "(AND (JOIN (R P30) Q2103) (JOIN P31 Q2221906) (JOIN (R P30) Q19083))", "sparql_attempt_count": 2, "actions": "SELECT ?x WHERE { wd:Q2103 wdt:P30 ?x . ?x wdt:P31 wd:Q2221906 . wd:Q19083 wdt:P30 ?x . }"}, {"turnID": "864.87.5", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Single_Relation", "question": "Which administrative territories are the native countriesof Jimmy Sabater, Sr. and Joe Gaetjens ? [CTX]", "answer": "United States of America", "s_expression": "(AND (JOIN (R P27) Q1689430) (JOIN P31 Q15617994) (JOIN (R P27) Q711269))", "s_expression_cores": ["(AND (JOIN (R P27) Q1689430) (JOIN P31 Q15617994) (JOIN (R P27) Q711269))"], "sparql_delex": "SELECT ?x WHERE { wd:Q1689430 wdt:P27 ?x . ?x wdt:P31 wd:Q15617994 .  wd:Q711269 wdt:P27 ?x .  }", "results": ["Q30"], "coreference_resolved_question": "Which administrative territories are the native countries of Jimmy Sabater, Sr. and Joe Gaetjens?", "s_expression_fn": "(AND (JOIN (R country_of_citizenship) Jimmy_Sabater,_Sr) (JOIN instance_of designation_for_an_administrative_territorial_entity) (JOIN (R country_of_citizenship) Joe_Gaetjens))", "predicted_s_expression_fn": "(DISTINCT (AND (JOIN (R country_of_citizenship) (VALUES Jimmy_Sabater,_Sr. Joe_Gaetjens)) (JOIN instance_of designation_for_an_administrative_territorial_entity))", "predicted_s_expression": "", "sparql_attempt_count": 2, "actions": ""}, {"turnID": "864.149.2", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Single_Relation", "question": "Which nonprofit organizations are Grace Alele-Williams and Jaime Rexach Ben\u00edtez an alumni of ? [CTX]", "answer": "University of Chicago", "s_expression": "(AND (JOIN (R P69) Q5590971) (JOIN P31 Q163740) (JOIN (R P69) Q1862978))", "s_expression_cores": ["(AND (JOIN (R P69) Q5590971) (JOIN P31 Q163740) (JOIN (R P69) Q1862978))"], "sparql_delex": "SELECT ?x WHERE { wd:Q5590971 wdt:P69 ?x . ?x wdt:P31 wd:Q163740 .  wd:Q1862978 wdt:P69 ?x .  }", "results": ["Q131252"], "coreference_resolved_question": "Which nonprofit organizations are Grace Alele-Williams and Jaime Rexach Ben\u00edtez an alumni of?", "s_expression_fn": "(AND (JOIN (R educated_at) Grace_Alele-Williams) (JOIN instance_of nonprofit_organization) (JOIN (R educated_at) Jaime_Rexach_Ben\u00edtez))", "predicted_s_expression_fn": "(DISTINCT (AND (JOIN (R alumni) (VALUES Grace_Alele-Williams Jaime_Rexach_Ben\u00edtez)) (JOIN instance_of nonprofit_organization))", "predicted_s_expression": "", "sparql_attempt_count": 2, "actions": ""}, {"turnID": "864.103.9", "question_type": "Logical Reasoning (All)", "description": "Logical|Difference|Multiple_Relation", "question": "Which political territories have diplomatic relationships with Italy and are not the countries of citizenship of Vals\u00f8 Holm ? [CTX]", "answer": "New Zealand, Canada, Australia, Germany, Austria", "s_expression": "(DIFF (AND (JOIN (R P530) Q38) (JOIN P31 Q1048835)) (JOIN (R P27) Q5810678))", "s_expression_cores": ["(AND (JOIN (R P530) Q38) (JOIN P31 Q1048835))", "(JOIN (R P27) Q5810678)"], "sparql_delex": "SELECT ?x WHERE { wd:Q38 wdt:P530 ?x . ?x wdt:P31 wd:Q1048835 .  FILTER NOT EXISTS { wd:Q5810678 wdt:P27 ?x .  } }", "results": ["Q664", "Q16", "Q408", "Q183", "Q40"], "coreference_resolved_question": "Which political territories have diplomatic relationships with Italy and are not the countries of citizenship of Vals\u00f8 Holm?", "s_expression_fn": "(DIFF (AND (JOIN (R diplomatic_relation) Italy) (JOIN instance_of political_territorial_entity)) (JOIN (R country_of_citizenship) Vals\u00f8_Holm))", "predicted_s_expression_fn": "(DIFF (AND (JOIN diplomatic_relation Italy) (JOIN instance_of political_territorial_entity)) (AND (JOIN country_of_citizenship Vals\u00f8_Holm) (JOIN instance_of political_territorial_entity)))", "predicted_s_expression": "", "sparql_attempt_count": 1, "actions": ""}, {"turnID": "864.19.3", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Single_Relation|Incomplete", "question": "Where was Vasile Chiroiu born ? [SEP] Comlo\u0219u Mare [SEP] Or Franz Nieke? [CTX]", "answer": "Berlin, Comlo\u0219u Mare", "s_expression": "(OR (AND (JOIN (R P19) Q1377677) (JOIN P31 Q56061)) (AND (JOIN (R P19) Q1448400) (JOIN P31 Q56061)))", "s_expression_cores": ["(AND (JOIN (R P19) Q1377677) (JOIN P31 Q56061))", "(AND (JOIN (R P19) Q1448400) (JOIN P31 Q56061))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q1377677 wdt:P19 ?x . ?x wdt:P31 wd:Q56061 .  } UNION { wd:Q1448400 wdt:P19 ?x . ?x wdt:P31 wd:Q56061 .  } }", "results": ["Q64", "Q535485"], "coreference_resolved_question": "Where was Franz Nieke born?", "s_expression_fn": "(OR (AND (JOIN (R place_of_birth) Vasile_Chiroiu) (JOIN instance_of administrative_territorial_entity)) (AND (JOIN (R place_of_birth) Franz_Nieke) (JOIN instance_of administrative_territorial_entity)))", "predicted_s_expression_fn": "(AND (JOIN (R place_of_birth) Vasile_Chiroiu) (JOIN (R place_of_birth) Franz_Nieke))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "864.57.3", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Single_Relation|Incomplete", "question": "Which nucleic acid sequence encodes CTP synthetase    YPO3377 ? [SEP] CTP synthetase    YPO3377 [SEP] What is the gene that encodes that nutrient ? [SEP] CTP synthetase    YPO3377 [SEP] Or carbon storage regulator    lpg0781? [CTX]", "answer": "CTP synthetase    YPO3377, carbon storage regulator    lpg0781", "s_expression": "(OR (AND (JOIN (R P702) Q22575169) (JOIN P31 Q863908)) (AND (JOIN (R P702) Q22334765) (JOIN P31 Q863908)))", "s_expression_cores": ["(AND (JOIN (R P702) Q22575169) (JOIN P31 Q863908))", "(AND (JOIN (R P702) Q22334765) (JOIN P31 Q863908))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q22575169 wdt:P702 ?x . ?x wdt:P31 wd:Q863908 .  } UNION { wd:Q22334765 wdt:P702 ?x . ?x wdt:P31 wd:Q863908 .  } }", "results": ["Q22567829", "Q22331683"], "coreference_resolved_question": "What is the gene that encodes carbon storage regulator lpg0781?", "s_expression_fn": "(OR (AND (JOIN (R encoded_by) CTP_synthetase____YPO3377) (JOIN instance_of nucleic_acid_sequence)) (AND (JOIN (R encoded_by) carbon_storage_regulator____lpg0781) (JOIN instance_of nucleic_acid_sequence)))", "predicted_s_expression_fn": "(OR (AND (JOIN encoded_by CTP_synthetase____YPO3377) (JOIN instance_of nucleic_acid_sequence)) (AND (JOIN encoded_by carbon_storage_regulator____lpg0781) (JOIN instance_of nucleic_acid_sequence)))", "predicted_s_expression": "", "sparql_attempt_count": 1, "actions": ""}, {"turnID": "864.111.6", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Multiple_Relation", "question": "Which people speaks Old Church Slavonic and have a job as author ? [CTX]", "answer": "Gregory Tsamblak", "s_expression": "(AND (JOIN P1412 Q35499) (JOIN P31 Q502895) (JOIN P106 Q482980))", "s_expression_cores": ["(AND (JOIN P1412 Q35499) (JOIN P31 Q502895) (JOIN P106 Q482980))"], "sparql_delex": "SELECT ?x WHERE { ?x wdt:P1412 wd:Q35499 . ?x wdt:P31 wd:Q502895 .  ?x wdt:P106 wd:Q482980 .  }", "results": ["Q723304"], "coreference_resolved_question": "Which people speaks Old Church Slavonic and have a job as author?", "s_expression_fn": "(AND (JOIN languages_spoken,_written_or_signed Old_Church_Slavonic) (JOIN instance_of common_name) (JOIN occupation author))", "predicted_s_expression_fn": "(AND (JOIN (R language_spoken) Old_Church_Slavonic) (JOIN (R occupation) author) (JOIN instance_of common_name))", "predicted_s_expression": "(AND (JOIN P1412 Q35499) (JOIN P106 Q482980) (JOIN P31 Q502895))", "sparql_attempt_count": 5, "actions": "SELECT ?x WHERE { ?x wdt:P1412 wd:Q35499 . ?x wdt:P106 wd:Q482980 . ?x wdt:P31 wd:Q502895 . }"}, {"turnID": "864.111.9", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Single_Relation|Incomplete", "question": "Which people speaks Old Church Slavonic and have a job as author ? [SEP] Gregory Tsamblak [SEP] Does that person have Kyiv and Victoria as the location of death ? [SEP] YES and NO respectively [SEP] What is the sex of that person ? [SEP] male [SEP] Or Rodil de Ara\u00fajo Jr? [CTX]", "answer": "male", "s_expression": "(OR (AND (JOIN (R P21) Q723304) (JOIN P31 Q290)) (AND (JOIN (R P21) Q10363668) (JOIN P31 Q290)))", "s_expression_cores": ["(AND (JOIN (R P21) Q723304) (JOIN P31 Q290))", "(AND (JOIN (R P21) Q10363668) (JOIN P31 Q290))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q723304 wdt:P21 ?x . ?x wdt:P31 wd:Q290 .  } UNION { wd:Q10363668 wdt:P21 ?x . ?x wdt:P31 wd:Q290 .  } }", "results": ["Q6581097"], "coreference_resolved_question": "What is the sex of Rodil de Ara\u00fajo Jr?", "s_expression_fn": "(OR (AND (JOIN (R sex_or_gender) Gregory_Tsamblak) (JOIN instance_of sex)) (AND (JOIN (R sex_or_gender) Rodil_de_Ara\u00fajo_Jr) (JOIN instance_of sex)))", "predicted_s_expression_fn": "(OR (AND (JOIN (R sex_or_gender) Gregory_Tsamblak) (JOIN instance_of sex)) (AND (JOIN (R sex_or_gender) Rodil_de_Ara\u00fajo_Jr) (JOIN instance_of sex)))", "predicted_s_expression": "", "sparql_attempt_count": 1, "actions": ""}, {"turnID": "864.11.9", "question_type": "Logical Reasoning (All)", "description": "Logical|Difference|Single_Relation", "question": "Which Badminton World Championshipss did Rikke Olsen but not Lars Paaske participate in ? [CTX]", "answer": "1999 Badminton World Championships \u2013 Mixed Doubles, 1995 Badminton World Championships \u2013 Women's Doubles, 2001 Badminton World Championships \u2013 Women's Doubles, 2003 Badminton World Championships \u2013 Women's Doubles, 1997 Badminton World Championships \u2013 Mixed Doubles", "s_expression": "(DIFF (AND (JOIN (R P1344) Q530753) (JOIN P31 Q799469)) (JOIN (R P1344) Q650343))", "s_expression_cores": ["(AND (JOIN (R P1344) Q530753) (JOIN P31 Q799469))", "(JOIN (R P1344) Q650343)"], "sparql_delex": "SELECT ?x WHERE { wd:Q530753 wdt:P1344 ?x . ?x wdt:P31 wd:Q799469 .  FILTER NOT EXISTS { wd:Q650343 wdt:P1344 ?x .  } }", "results": ["Q799522", "Q799504", "Q799524", "Q799533", "Q799516"], "coreference_resolved_question": "Which Badminton World Championships did Rikke Olsen but not Lars Paaske participate in?", "s_expression_fn": "(DIFF (AND (JOIN (R participant_in) Rikke_Olsen) (JOIN instance_of Badminton_World_Championships)) (JOIN (R participant_in) Lars_Paaske))", "predicted_s_expression_fn": "(DIFF (AND (JOIN (R participant) Rikke_Olsen) (JOIN instance_of Badminton_World_Championships)) (AND (JOIN (R participant) Lars_Paaske) (JOIN instance_of Badminton_World_Championships))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "864.141.2", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Single_Relation|Incomplete", "question": "Which sex does Ernst von Meding possess ? [SEP] male [SEP] And also Jack Fournier [CTX]", "answer": "male", "s_expression": "(AND (JOIN (R P21) Q1312591) (JOIN P31 Q290) (JOIN (R P21) Q6112566))", "s_expression_cores": ["(AND (JOIN (R P21) Q1312591) (JOIN P31 Q290) (JOIN (R P21) Q6112566))"], "sparql_delex": "SELECT ?x WHERE { wd:Q1312591 wdt:P21 ?x . ?x wdt:P31 wd:Q290 .  wd:Q6112566 wdt:P21 ?x .  }", "results": ["Q6581097"], "coreference_resolved_question": "Which sex does Jack Fournier possess?", "s_expression_fn": "(AND (JOIN (R sex_or_gender) Ernst_von_Meding) (JOIN instance_of sex) (JOIN (R sex_or_gender) Jack_Fournier))", "predicted_s_expression_fn": "(AND (JOIN (R sex_or_gender) Ernst_von_Meding) (JOIN instance_of sex) (JOIN (R sex_or_gender) Jack_Fournier))", "predicted_s_expression": "(AND (JOIN (R P21) Q1312591) (JOIN P31 Q290) (JOIN (R P21) Q3157181))", "sparql_attempt_count": 2, "actions": "SELECT ?x WHERE { wd:Q1312591 wdt:P21 ?x . ?x wdt:P31 wd:Q290 . wd:Q3157181 wdt:P21 ?x . }"}, {"turnID": "864.141.3", "question_type": "Logical Reasoning (All)", "description": "Logical|Difference|Single_Relation", "question": "Which people are a citizen of German Empire but not Germany ? [CTX]", "answer": "Some of them are Ferdinand Hinsch, Hugo de Senger, August Heinrich Diedrich B\u00fcnte, Hans Oberl\u00e4nder, Fritz B\u00f6hm, Ernst von Meding, Friedrich Ulmer, Albert Hendschel, Otto Weerth, Hermann Knauer", "s_expression": "(DIFF (AND (JOIN P27 Q1206012) (JOIN P31 Q502895)) (JOIN P27 Q183))", "s_expression_cores": ["(AND (JOIN P27 Q1206012) (JOIN P31 Q502895))", "(JOIN P27 Q183)"], "sparql_delex": "SELECT ?x WHERE { ?x wdt:P27 wd:Q1206012 . ?x wdt:P31 wd:Q502895 .  FILTER NOT EXISTS { ?x wdt:P27 wd:Q183 .  } }", "results": ["Q19721168", "Q18625800", "Q17325636", "Q2060761", "Q2650654", "Q16738169", "Q15456552", "Q1713009", "Q594577", "Q18222227", "Q17521566", "Q3083122", "Q1610445", "Q18402103", "Q2343375", "Q1405525", "Q18029152", "Q4519417", "Q155794", "Q98649", "Q1446586", "Q15449477", "Q18020136", "Q19953509", "Q6248114", "Q19721047", "Q1678932", "Q3134146", "Q17442424", "Q18221886", "Q186549", "Q19546637", "Q1545014", "Q18341383", "Q7344487", "Q1612628", "Q19502077", "Q19502070", "Q19279976", "Q1290271", "Q19258855", "Q18658552", "Q19841951", "Q2650511", "Q1546304", "Q1443363", "Q19311697", "Q18625164", "Q19279372", "Q2575181", "Q1331595", "Q1730244", "Q18222347", "Q1040332", "Q1387049", "Q17590907", "Q1458913", "Q1460872", "Q17591500", "Q63948", "Q1539694", "Q15791305", "Q2588731", "Q761038", "Q1336055", "Q19502354", "Q18729131", "Q714456", "Q18223966", "Q1793704", "Q2215018", "Q1544907", "Q19297782", "Q17521905", "Q667952", "Q573139", "Q5550666", "Q19275106", "Q1549262", "Q1358518", "Q18202309", "Q18669843", "Q19968221", "Q2283480", "Q18026570", "Q657137", "Q19288579", "Q1466275", "Q20242761", "Q18611778", "Q19959360", "Q1598920", "Q441251", "Q1290513", "Q18020903", "Q18628821", "Q18624235", "Q1372799", "Q18624333", "Q18624332", "Q19845813", "Q1426916", "Q24255334", "Q18026624", "Q1464704", "Q15092617", "Q766973", "Q658364", "Q19513449", "Q19513322", "Q19965638", "Q18626743", "Q19287686", "Q1038173", "Q19631272", "Q24255440", "Q1556444", "Q10712084", "Q19284815", "Q19959746", "Q18223980", "Q19275147", "Q563740", "Q1565984", "Q1593420", "Q16295359", "Q1543272", "Q19960280", "Q761778", "Q17747977", "Q1704204", "Q17418045", "Q18620786", "Q20667770", "Q16628731", "Q1449889", "Q1336664", "Q18616472", "Q19287676", "Q19959323", "Q76504", "Q2573925", "Q2641969", "Q19666043", "Q9263487", "Q18957721", "Q19965417", "Q1657512", "Q1678719", "Q1504969", "Q15446925", "Q18026704", "Q19502337", "Q2650216", "Q18612998", "Q1507864", "Q18508213", "Q1520973", "Q19279263", "Q19309161", "Q18654343", "Q6098076", "Q18020839", "Q1405652", "Q19279559", "Q1694275", "Q19030290", "Q1375475", "Q1704721", "Q2173158", "Q18578624", "Q19758168", "Q1094837", "Q19311673", "Q1287645", "Q1539535", "Q1306524", "Q18182248", "Q2734979", "Q18412692", "Q16215692", "Q1698111", "Q764241", "Q361748", "Q19971762", "Q19285840", "Q5919322", "Q1677695", "Q19287734", "Q1698661", "Q18333415", "Q1731500", "Q4239975", "Q17479626", "Q19287241", "Q1609203", "Q555409", "Q19859350", "Q19502011", "Q7965372", "Q2884980", "Q2040912", "Q1677629", "Q15429199", "Q19236821", "Q1731348", "Q2284820", "Q19513528", "Q17747720", "Q19631161", "Q19946387", "Q1612924", "Q2174214", "Q74389", "Q19820113", "Q1337337", "Q993491", "Q649601", "Q5746561", "Q19299116", "Q1462924", "Q24306567", "Q19720963", "Q1158451", "Q18508719", "Q1564935", "Q111344", "Q2959377", "Q1289827", "Q18625915", "Q23060711", "Q825286", "Q19502270", "Q19502271", "Q24040340", "Q2422184", "Q1462953", "Q19834356", "Q215630", "Q1912659", "Q57123", "Q2584224", "Q18628271", "Q19834279", "Q18411808", "Q18910368", "Q17418052", "Q18279528", "Q17418054", "Q20241108", "Q19311863", "Q177769", "Q434063", "Q5985687", "Q16219251", "Q1346802", "Q18629723", "Q1611395", "Q19962759", "Q19287111", "Q19279980", "Q1360810", "Q4723509", "Q1037141", "Q1360200", "Q879152", "Q19279219", "Q19965472", "Q17121614", "Q109738", "Q1713082", "Q2638114", "Q20172210", "Q18222106", "Q1297720", "Q19502234", "Q1358586", "Q1461524", "Q17310717", "Q19299120", "Q18169564", "Q19502331", "Q15774152", "Q17427743", "Q1730644", "Q19513868", "Q18223949", "Q303930", "Q7606160", "Q374802", "Q19286406", "Q18202174", "Q19117030", "Q17747987", "Q19391543", "Q18746876", "Q19296086", "Q19193494", "Q19763110", "Q1357954", "Q1678927", "Q15995772", "Q347605", "Q19226077", "Q1459341", "Q18616202", "Q19287255", "Q19278747", "Q1357624", "Q1797986", "Q18018962", "Q19289109", "Q18620156", "Q19287593", "Q1720111", "Q17539988", "Q19631189", "Q2575164", "Q1464952", "Q19279963", "Q591592", "Q17748253", "Q19758133", "Q18175395", "Q19311729", "Q18619943", "Q24306550", "Q19513465", "Q18023257", "Q17505966", "Q18923236", "Q18816400", "Q1714561", "Q19299475", "Q1634900", "Q18018424", "Q1699964", "Q19116992", "Q19284546", "Q18923093", "Q17748090", "Q60700", "Q19647087", "Q1517715", "Q2874895", "Q1487423", "Q2823896", "Q19959724", "Q18632900", "Q101097", "Q17591460", "Q1697956", "Q18684350", "Q166028", "Q1393911", "Q1598427", "Q18507708", "Q18625209", "Q24232699", "Q19588135", "Q18624682", "Q1599013", "Q1712809", "Q18224079", "Q19278826", "Q19279290", "Q18628842", "Q1039985", "Q2038714", "Q5650027", "Q572130", "Q19502544", "Q20031718", "Q2074049", "Q1335902", "Q6096726", "Q347373", "Q21916813", "Q19834946", "Q19502608", "Q19214604", "Q1312591", "Q1618708"], "coreference_resolved_question": "Which people are a citizen of German Empire but not Germany?", "s_expression_fn": "(DIFF (AND (JOIN country_of_citizenship German_Empire) (JOIN instance_of common_name)) (JOIN country_of_citizenship Germany))", "predicted_s_expression_fn": "(DIFF (AND (JOIN (R country_of_citizenship) German_Empire) (JOIN instance_of common_name)) (AND (JOIN (R country_of_citizenship) Germany) (JOIN instance_of common_name)))", "predicted_s_expression": "", "sparql_attempt_count": 2, "actions": ""}, {"turnID": "864.139.2", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Single_Relation|Incomplete", "question": "Which party is William Swain Lee affiliated with ? [SEP] Republican Party [SEP] Which nonprofit organization is that person an alumni of ? [SEP] Duke University [SEP] Or Tell Berna? [CTX]", "answer": "Cornell University, Duke University", "s_expression": "(OR (AND (JOIN (R P69) Q8018989) (JOIN P31 Q163740)) (AND (JOIN (R P69) Q742215) (JOIN P31 Q163740)))", "s_expression_cores": ["(AND (JOIN (R P69) Q8018989) (JOIN P31 Q163740))", "(AND (JOIN (R P69) Q742215) (JOIN P31 Q163740))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q8018989 wdt:P69 ?x . ?x wdt:P31 wd:Q163740 .  } UNION { wd:Q742215 wdt:P69 ?x . ?x wdt:P31 wd:Q163740 .  } }", "results": ["Q49115", "Q168751"], "coreference_resolved_question": "Which nonprofit organization is Or Tell Berna an alumni of?", "s_expression_fn": "(OR (AND (JOIN (R educated_at) William_Swain_Lee) (JOIN instance_of nonprofit_organization)) (AND (JOIN (R educated_at) Tell_Berna) (JOIN instance_of nonprofit_organization)))", "predicted_s_expression_fn": "(OR (AND (JOIN (R educated_at) William_Swain_Lee) (JOIN instance_of nonprofit_organization) (AND (JOIN (R educated_at) Tell_Berna) (JOIN instance_of nonprofit_organization))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "864.30.5", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Single_Relation|Incomplete", "question": "Whose sister is Birgit Michels ? [SEP] Petra Overzier [SEP] Which sport was that person a part of ? [SEP] badminton [SEP] Or Croydon Pirates? [CTX]", "answer": "baseball, badminton", "s_expression": "(OR (AND (JOIN (R P641) Q275097) (JOIN P31 Q349)) (AND (JOIN (R P641) Q3005477) (JOIN P31 Q349)))", "s_expression_cores": ["(AND (JOIN (R P641) Q275097) (JOIN P31 Q349))", "(AND (JOIN (R P641) Q3005477) (JOIN P31 Q349))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q275097 wdt:P641 ?x . ?x wdt:P31 wd:Q349 .  } UNION { wd:Q3005477 wdt:P641 ?x . ?x wdt:P31 wd:Q349 .  } }", "results": ["Q5369", "Q7291"], "coreference_resolved_question": "Which sport was Croydon Pirates a part of?", "s_expression_fn": "(OR (AND (JOIN (R sport) Petra_Overzier) (JOIN instance_of sport)) (AND (JOIN (R sport) Croydon_Pirates) (JOIN instance_of sport)))", "predicted_s_expression_fn": "(OR (AND (JOIN sports_discipline_competed_in badminton) (JOIN instance_of common_name)) (AND (JOIN sports_discipline_competed_in Croydon_Pirates) (JOIN instance_of common_name)))", "predicted_s_expression": "", "sparql_attempt_count": 1, "actions": ""}, {"turnID": "864.30.11", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Single_Relation", "question": "Which German Badminton Championshipss did Claudia Vogelgsang and Birgit Michels take part in ? [CTX]", "answer": "2012 German Badminton Championships \u2013 Women's doubles, 2011 German Badminton Championships \u2013 Women's doubles, 2009 German Badminton Championships \u2013 Women's doubles", "s_expression": "(AND (JOIN (R P1344) Q1097848) (JOIN P31 Q1203472) (JOIN (R P1344) Q105552))", "s_expression_cores": ["(AND (JOIN (R P1344) Q1097848) (JOIN P31 Q1203472) (JOIN (R P1344) Q105552))"], "sparql_delex": "SELECT ?x WHERE { wd:Q1097848 wdt:P1344 ?x . ?x wdt:P31 wd:Q1203472 .  wd:Q105552 wdt:P1344 ?x .  }", "results": ["Q27608107", "Q27608105", "Q27608103"], "coreference_resolved_question": "Which German Badminton Championships did Claudia Vogelgsang and Birgit Michels take part in?", "s_expression_fn": "(AND (JOIN (R participant_in) Claudia_Vogelgsang) (JOIN instance_of German_Badminton_Championships) (JOIN (R participant_in) Birgit_Michels))", "predicted_s_expression_fn": "(DISTINCT (AND (JOIN (R participant) (VALUES Claudia_Vogelgsang Birgit_Michels)) (JOIN instance_of German_Badminton_Championships)))", "predicted_s_expression": "(DISTINCT (AND (JOIN P710 (VALUES Q1097848 Q105552)) (JOIN P31 Q1203472)))", "sparql_attempt_count": 3, "actions": "SELECT DISTINCT ?x WHERE { VALUES ?x0 { wd:Q1097848 wd:Q105552 } . ?x wdt:P710 ?x0 . ?x wdt:P31 wd:Q1203472 . }"}, {"turnID": "864.100.2", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Single_Relation", "question": "Which administrative territories are Rick Rhoden and Karl-Anthony Towns an inhabitant of ? [CTX]", "answer": "United States of America", "s_expression": "(AND (JOIN (R P27) Q11348129) (JOIN P31 Q15617994) (JOIN (R P27) Q6372315))", "s_expression_cores": ["(AND (JOIN (R P27) Q11348129) (JOIN P31 Q15617994) (JOIN (R P27) Q6372315))"], "sparql_delex": "SELECT ?x WHERE { wd:Q11348129 wdt:P27 ?x . ?x wdt:P31 wd:Q15617994 .  wd:Q6372315 wdt:P27 ?x .  }", "results": ["Q30"], "coreference_resolved_question": "Which administrative territories are Rick Rhoden and Karl-Anthony Towns an inhabitant of?", "s_expression_fn": "(AND (JOIN (R country_of_citizenship) Rick_Rhoden) (JOIN instance_of designation_for_an_administrative_territorial_entity) (JOIN (R country_of_citizenship) Karl-Anthony_Towns))", "predicted_s_expression_fn": "(DISTINCT (AND (JOIN (R place_of_residence) (VALUES Rick_Rhoden Karl-Anthony_Towns)) (JOIN instance_of designation_for_an_administrative_territorial_entity)))", "predicted_s_expression": "", "sparql_attempt_count": 2, "actions": ""}, {"turnID": "864.69.4", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Single_Relation", "question": "Which administrative territories are Mohd Zulkifli Yusof and Nur Sutan Iskandar an inhabitant of ? [CTX]", "answer": "Malaysia", "s_expression": "(AND (JOIN (R P27) Q6894091) (JOIN P31 Q15617994) (JOIN (R P27) Q7070002))", "s_expression_cores": ["(AND (JOIN (R P27) Q6894091) (JOIN P31 Q15617994) (JOIN (R P27) Q7070002))"], "sparql_delex": "SELECT ?x WHERE { wd:Q6894091 wdt:P27 ?x . ?x wdt:P31 wd:Q15617994 .  wd:Q7070002 wdt:P27 ?x .  }", "results": ["Q833"], "coreference_resolved_question": "Which administrative territories are Mohd Zulkifli Yusof and Nur Sutan Iskandar an inhabitant of?", "s_expression_fn": "(AND (JOIN (R country_of_citizenship) Mohd_Zulkifli_Yusof) (JOIN instance_of designation_for_an_administrative_territorial_entity) (JOIN (R country_of_citizenship) Nur_Sutan_Iskandar))", "predicted_s_expression_fn": "(DISTINCT (AND (JOIN (R country_of_citizenship) (VALUES Mohd_Zulkifli_Yusof Nur_Sutan_Iskandar)) (JOIN instance_of designation_for_an_administrative_territorial_entity))", "predicted_s_expression": "", "sparql_attempt_count": 2, "actions": ""}, {"turnID": "867.55.2", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Single_Relation|Incomplete", "question": "Which academic degree does Villum Christensen hold ? [SEP] Cand.scient.pol. [SEP] Where was that person elected successfully from ? [SEP] Danish general election, 2015 [SEP] Or Sam Nujoma? [CTX]", "answer": "Namibian general election, 1994, Namibian general election, 1999, Danish general election, 2015", "s_expression": "(OR (AND (JOIN P991 Q12009842) (JOIN P31 Q1076105)) (AND (JOIN P991 Q154104) (JOIN P31 Q1076105)))", "s_expression_cores": ["(AND (JOIN P991 Q12009842) (JOIN P31 Q1076105))", "(AND (JOIN P991 Q154104) (JOIN P31 Q1076105))"], "sparql_delex": "SELECT ?x WHERE { { ?x wdt:P991 wd:Q12009842 . ?x wdt:P31 wd:Q1076105 .  } UNION { ?x wdt:P991 wd:Q154104 . ?x wdt:P31 wd:Q1076105 .  } }", "results": ["Q2115181", "Q387133", "Q1964961"], "coreference_resolved_question": "Where was Sam Nujoma elected successfully from?", "s_expression_fn": "(OR (AND (JOIN successful_candidate Villum_Christensen) (JOIN instance_of general_election)) (AND (JOIN successful_candidate Sam_Nujoma) (JOIN instance_of general_election)))", "predicted_s_expression_fn": "(OR (AND (JOIN (R elected_in) Villum_Christensen) (JOIN instance_of election)) (AND (JOIN (R elected_in) Sam_Nujoma) (JOIN instance_of election)))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "867.50.7", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Single_Relation", "question": "Which drugs communicates with D(2) dopamine receptor and Carbonic anhydrase 1 ? [CTX]", "answer": "sulpiride", "s_expression": "(AND (JOIN P129 Q2034004) (JOIN P31 Q8386) (JOIN P129 Q21173164))", "s_expression_cores": ["(AND (JOIN P129 Q2034004) (JOIN P31 Q8386) (JOIN P129 Q21173164))"], "sparql_delex": "SELECT ?x WHERE { ?x wdt:P129 wd:Q2034004 . ?x wdt:P31 wd:Q8386 .  ?x wdt:P129 wd:Q21173164 .  }", "results": ["Q422418"], "coreference_resolved_question": "Which drugs communicate with D(2) dopamine receptor and Carbonic anhydrase 1?", "s_expression_fn": "(AND (JOIN physically_interacts_with D(2)_dopamine_receptor) (JOIN instance_of drug) (JOIN physically_interacts_with Carbonic_anhydrase_1))", "predicted_s_expression_fn": "(AND (JOIN (R target) D(2)_dopamine_receptor) (JOIN (R target) Carbonic_anhydrase_1) (JOIN instance_of drug))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "867.75.2", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Single_Relation|Incomplete", "question": "Which city was Henri Gougaud born in ? [SEP] Carcassonne [SEP] Which administrative country subdivision has that city as its county seat ? [SEP] arrondissement of Carcassonne [SEP] Or \u0141\u0119czyca? [CTX]", "answer": "arrondissement of Carcassonne, \u0141\u0119czyca County", "s_expression": "(OR (AND (JOIN (R P1376) Q6582) (JOIN P31 Q13220204)) (AND (JOIN (R P1376) Q325727) (JOIN P31 Q13220204)))", "s_expression_cores": ["(AND (JOIN (R P1376) Q6582) (JOIN P31 Q13220204))", "(AND (JOIN (R P1376) Q325727) (JOIN P31 Q13220204))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q6582 wdt:P1376 ?x . ?x wdt:P31 wd:Q13220204 .  } UNION { wd:Q325727 wdt:P1376 ?x . ?x wdt:P31 wd:Q13220204 .  } }", "results": ["Q700826", "Q517800"], "coreference_resolved_question": "Which administrative country subdivision has \u0141\u0119czyca as its county seat?", "s_expression_fn": "(OR (AND (JOIN (R capital_of) Carcassonne) (JOIN instance_of second-level_administrative_country_subdivision)) (AND (JOIN (R capital_of) \u0141\u0119czyca) (JOIN instance_of second-level_administrative_country_subdivision)))", "predicted_s_expression_fn": "(OR (AND (JOIN (R capital_of) Carcassonne) (JOIN (R capital_of) \u0141\u0119czyca))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "867.168.3", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Single_Relation|Incomplete", "question": "Which occupation was a position occupied by Augustine Martin ? [SEP] senator of Ireland [SEP] Who has the surname that person ? [SEP] Martin [SEP] Which administrative territory does that person belong to ? [SEP] Ireland [SEP] Or Dicky Natapradja? [CTX]", "answer": "Indonesia, Ireland", "s_expression": "(OR (AND (JOIN (R P27) Q4821198) (JOIN P31 Q15617994)) (AND (JOIN (R P27) Q19666918) (JOIN P31 Q15617994)))", "s_expression_cores": ["(AND (JOIN (R P27) Q4821198) (JOIN P31 Q15617994))", "(AND (JOIN (R P27) Q19666918) (JOIN P31 Q15617994))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q4821198 wdt:P27 ?x . ?x wdt:P31 wd:Q15617994 .  } UNION { wd:Q19666918 wdt:P27 ?x . ?x wdt:P31 wd:Q15617994 .  } }", "results": ["Q252", "Q27"], "coreference_resolved_question": "Which administrative territory does Dicky Natapradja belong to?", "s_expression_fn": "(OR (AND (JOIN (R country_of_citizenship) Augustine_Martin) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (AND (JOIN (R country_of_citizenship) Dicky_Natapradja) (JOIN instance_of designation_for_an_administrative_territorial_entity)))", "predicted_s_expression_fn": "(OR (AND (JOIN (R country_of_citizenship) Augustine_Martin) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (AND (JOIN (R country_of_citizenship) Dicky_Natapradja) (JOIN instance_of designation_for_an_administrative_territorial_entity)))", "predicted_s_expression": "", "sparql_attempt_count": 1, "actions": ""}, {"turnID": "867.65.2", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Single_Relation|Incomplete", "question": "Which administrative territory is Tavernes de la Valldigna a part of ? [SEP] Spain [SEP] Which political territories have an adjacent border with that one ? [SEP] Cullera, Benifair\u00f3 de la Valldigna, Xeraco [SEP] Or Santas Martas? [CTX]", "answer": "Some of them are El Burgo Ranero, Matade\u00f3n de los Oteros, Xeraco, Gusendos de los Oteros, Corbillos de los Oteros, Villamoratiel de las Matas, Favara, Cullera, Benifair\u00f3 de la Valldigna, Villanueva de las Manzanas", "s_expression": "(OR (AND (JOIN P47 Q299417) (JOIN P31 Q1048835)) (AND (JOIN P47 Q1635290) (JOIN P31 Q1048835)))", "s_expression_cores": ["(AND (JOIN P47 Q299417) (JOIN P31 Q1048835))", "(AND (JOIN P47 Q1635290) (JOIN P31 Q1048835))"], "sparql_delex": "SELECT ?x WHERE { { ?x wdt:P47 wd:Q299417 . ?x wdt:P31 wd:Q1048835 .  } UNION { ?x wdt:P47 wd:Q1635290 . ?x wdt:P31 wd:Q1048835 .  } }", "results": ["Q26585", "Q1615350", "Q1640195", "Q141244", "Q986733", "Q1607194", "Q1640166", "Q137225", "Q1312533", "Q1826684", "Q1312465", "Q141258"], "coreference_resolved_question": "Which political territories have an adjacent border with Santas Martas?", "s_expression_fn": "(OR (AND (JOIN shares_border_with Tavernes_de_la_Valldigna) (JOIN instance_of political_territorial_entity)) (AND (JOIN shares_border_with Santas_Martas) (JOIN instance_of political_territorial_entity)))", "predicted_s_expression_fn": "(OR (AND (JOIN shares_border_with Spain) (JOIN instance_of political_territorial_entity)) (JOIN shares_border_with Santas_Martas))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "867.18.4", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Single_Relation", "question": "Which computing platforms are the computing platforms for which Kung Fu Panda: Legendary Warriors and Kamen Rider: Climax Heroes were specifically designed ? [CTX]", "answer": "Wii", "s_expression": "(AND (JOIN (R P400) Q3817367) (JOIN P31 Q241317) (JOIN (R P400) Q4382485))", "s_expression_cores": ["(AND (JOIN (R P400) Q3817367) (JOIN P31 Q241317) (JOIN (R P400) Q4382485))"], "sparql_delex": "SELECT ?x WHERE { wd:Q3817367 wdt:P400 ?x . ?x wdt:P31 wd:Q241317 .  wd:Q4382485 wdt:P400 ?x .  }", "results": ["Q8079"], "coreference_resolved_question": "Which computing platforms are the computing platforms for which Kung Fu Panda: Legendary Warriors and Kamen Rider: Climax Heroes were specifically designed?", "s_expression_fn": "(AND (JOIN (R platform) Kung_Fu_Panda:_Legendary_Warriors) (JOIN instance_of computing_platform) (JOIN (R platform) Kamen_Rider:_Climax_Heroes))", "predicted_s_expression_fn": "(DISTINCT (AND (JOIN (R platform) (VALUES Kung_Fu_Panda:_Legendary_Warriors Kamen_Rider:_Climax_Heroes)) (JOIN instance_of computing_platform)))", "predicted_s_expression": "(DISTINCT (AND (JOIN (R P400) (VALUES Q3817367 Q4382485)) (JOIN P31 Q241317)))", "sparql_attempt_count": 2, "actions": "SELECT DISTINCT ?x WHERE { VALUES ?x0 { wd:Q3817367 wd:Q4382485 } . ?x0 wdt:P400 ?x . ?x wdt:P31 wd:Q241317 . }"}, {"turnID": "867.97.2", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Single_Relation|Incomplete", "question": "What is the sex of Paul Nitz ? [SEP] male [SEP] And also Karl Theodor, Duke in Bavaria [CTX]", "answer": "male", "s_expression": "(AND (JOIN (R P21) Q7152737) (JOIN P31 Q290) (JOIN (R P21) Q57972))", "s_expression_cores": ["(AND (JOIN (R P21) Q7152737) (JOIN P31 Q290) (JOIN (R P21) Q57972))"], "sparql_delex": "SELECT ?x WHERE { wd:Q7152737 wdt:P21 ?x . ?x wdt:P31 wd:Q290 .  wd:Q57972 wdt:P21 ?x .  }", "results": ["Q6581097"], "coreference_resolved_question": "What is the sex of Karl Theodor, Duke in Bavaria?", "s_expression_fn": "(AND (JOIN (R sex_or_gender) Paul_Nitz) (JOIN instance_of sex) (JOIN (R sex_or_gender) Karl_Theodor,_Duke_in_Bavaria))", "predicted_s_expression_fn": "(AND (JOIN (R sex_or_gender) Paul_Nitz) (JOIN (R sex_or_gender) Karl_Theodor,_Duke_in_Bavaria) (JOIN instance_of sex))", "predicted_s_expression": "(AND (JOIN (R P21) Q7152737) (JOIN (R P21) Q57972) (JOIN P31 Q290))", "sparql_attempt_count": 2, "actions": "SELECT ?x WHERE { wd:Q7152737 wdt:P21 ?x . wd:Q57972 wdt:P21 ?x . ?x wdt:P31 wd:Q290 . }"}, {"turnID": "867.123.4", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Single_Relation", "question": "Which administrative territories are located in Indonesia and India ? [CTX]", "answer": "Mandor", "s_expression": "(AND (JOIN P17 Q252) (JOIN P31 Q56061) (JOIN P17 Q668))", "s_expression_cores": ["(AND (JOIN P17 Q252) (JOIN P31 Q56061) (JOIN P17 Q668))"], "sparql_delex": "SELECT ?x WHERE { ?x wdt:P17 wd:Q252 . ?x wdt:P31 wd:Q56061 .  ?x wdt:P17 wd:Q668 .  }", "results": ["Q12496585"], "coreference_resolved_question": "Which administrative territories are located in Indonesia and India?", "s_expression_fn": "(AND (JOIN country Indonesia) (JOIN instance_of administrative_territorial_entity) (JOIN country India))", "predicted_s_expression_fn": "(AND (JOIN (R country) Indonesia) (JOIN (R country) India) (JOIN instance_of designation_for_an_administrative_territorial_entity))", "predicted_s_expression": "(AND (JOIN P17 Q252) (JOIN P17 Q668) (JOIN P31 Q56061))", "sparql_attempt_count": 5, "actions": "SELECT ?x WHERE { ?x wdt:P17 wd:Q252 . ?x wdt:P17 wd:Q668 . ?x wdt:P31 wd:Q56061 . }"}, {"turnID": "867.89.2", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Single_Relation|Incomplete", "question": "What was the sport that Joan Franch i Xargay was a part of ? [SEP] association football [SEP] And also Kristoffer Fagercrantz [CTX]", "answer": "association football", "s_expression": "(AND (JOIN (R P641) Q20003497) (JOIN P31 Q349) (JOIN (R P641) Q5722670))", "s_expression_cores": ["(AND (JOIN (R P641) Q20003497) (JOIN P31 Q349) (JOIN (R P641) Q5722670))"], "sparql_delex": "SELECT ?x WHERE { wd:Q20003497 wdt:P641 ?x . ?x wdt:P31 wd:Q349 .  wd:Q5722670 wdt:P641 ?x .  }", "results": ["Q2736"], "coreference_resolved_question": "What was the sport that Kristoffer Fagercrantz was a part of?", "s_expression_fn": "(AND (JOIN (R sport) Joan_Franch_i_Xargay) (JOIN instance_of sport) (JOIN (R sport) Kristoffer_Fagercrantz))", "predicted_s_expression_fn": "(AND (JOIN sports_discipline_competed_in association_football) (JOIN instance_of common_name) (JOIN sports_discipline_competed_in Kristoffer_Fagercrantz))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "867.59.2", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Single_Relation|Incomplete", "question": "Who designed Journey (1989 video game) ? [SEP] Marc Blank [SEP] Which sex does that person belong to ? [SEP] male [SEP] Or Liam Irwin? [CTX]", "answer": "male", "s_expression": "(OR (AND (JOIN (R P21) Q6755399) (JOIN P31 Q290)) (AND (JOIN (R P21) Q6539654) (JOIN P31 Q290)))", "s_expression_cores": ["(AND (JOIN (R P21) Q6755399) (JOIN P31 Q290))", "(AND (JOIN (R P21) Q6539654) (JOIN P31 Q290))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q6755399 wdt:P21 ?x . ?x wdt:P31 wd:Q290 .  } UNION { wd:Q6539654 wdt:P21 ?x . ?x wdt:P31 wd:Q290 .  } }", "results": ["Q6581097"], "coreference_resolved_question": "Which sex does Liam Irwin belong to?", "s_expression_fn": "(OR (AND (JOIN (R sex_or_gender) Marc_Blank) (JOIN instance_of sex)) (AND (JOIN (R sex_or_gender) Liam_Irwin) (JOIN instance_of sex)))", "predicted_s_expression_fn": "(AND (JOIN (R sex_or_gender) Marc_Blank) (JOIN instance_of sex) (JOIN (R sex_or_gender) Liam_Irwin))", "predicted_s_expression": "(AND (JOIN (R P21) Q6755399) (JOIN P31 Q290) (JOIN (R P21) Q6539654))", "sparql_attempt_count": 2, "actions": "SELECT ?x WHERE { wd:Q6755399 wdt:P21 ?x . ?x wdt:P31 wd:Q290 . wd:Q6539654 wdt:P21 ?x . }"}, {"turnID": "867.135.8", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Single_Relation|Incomplete", "question": "Who is the offspring of Bertha Katscher ? [SEP] Rosika Schwimmer [SEP] What situation did that person die in ? [SEP] natural causes [SEP] Or Guy-Marie Oury? [CTX]", "answer": "natural causes", "s_expression": "(OR (AND (JOIN (R P1196) Q853932) (JOIN P31 Q1931388)) (AND (JOIN (R P1196) Q3121474) (JOIN P31 Q1931388)))", "s_expression_cores": ["(AND (JOIN (R P1196) Q853932) (JOIN P31 Q1931388))", "(AND (JOIN (R P1196) Q3121474) (JOIN P31 Q1931388))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q853932 wdt:P1196 ?x . ?x wdt:P31 wd:Q1931388 .  } UNION { wd:Q3121474 wdt:P1196 ?x . ?x wdt:P31 wd:Q1931388 .  } }", "results": ["Q3739104"], "coreference_resolved_question": "What situation did Guy-Marie Oury die in?", "s_expression_fn": "(OR (AND (JOIN (R manner_of_death) Rosika_Schwimmer) (JOIN instance_of cause_of_death)) (AND (JOIN (R manner_of_death) Guy-Marie_Oury) (JOIN instance_of cause_of_death)))", "predicted_s_expression_fn": "(OR (AND (JOIN (R cause_of_death) Rosika_Schwimmer) (AND (JOIN (R cause_of_death) Guy-Marie_Oury)))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "867.30.7", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Single_Relation", "question": "Which people have career as painter and pianist ? [CTX]", "answer": "Some of them are Elmer Bernstein, Pierre Hennebelle, Anna Ventura, Friedrich Bicknese, Ignasi Agudo i Clar\u00e0, Adolph Kurt B\u00f6hm, Paul McCartney, Fran\u00e7oise Landowski-Caillet, Dave Dallwitz, Willard MacGregor", "s_expression": "(AND (JOIN P106 Q1028181) (JOIN P31 Q502895) (JOIN P106 Q486748))", "s_expression_cores": ["(AND (JOIN P106 Q1028181) (JOIN P31 Q502895) (JOIN P106 Q486748))"], "sparql_delex": "SELECT ?x WHERE { ?x wdt:P106 wd:Q1028181 . ?x wdt:P31 wd:Q502895 .  ?x wdt:P106 wd:Q486748 .  }", "results": ["Q6174126", "Q60119", "Q18010321", "Q1188956", "Q14825556", "Q4912285", "Q6780147", "Q5379818", "Q18644995", "Q446421", "Q2478136", "Q365433", "Q442477", "Q1379260", "Q558332", "Q33042", "Q21081362", "Q941622", "Q5228632", "Q3045738", "Q5383", "Q548359", "Q111436", "Q2046730", "Q233483", "Q719447", "Q923881", "Q16999661", "Q1091015", "Q5086211", "Q6787185", "Q224650", "Q292999", "Q679983", "Q18708319", "Q1560898", "Q3114275", "Q9584331", "Q16860397", "Q1905143", "Q10294375", "Q433060", "Q7557758", "Q45601", "Q10335725", "Q1386655", "Q1700066", "Q2599", "Q12034211", "Q1909661", "Q5049496", "Q2108783", "Q3086531", "Q1729605", "Q2398106", "Q3385442", "Q113865", "Q2374985"], "coreference_resolved_question": "Which people have career as painter and pianist?", "s_expression_fn": "(AND (JOIN occupation painter) (JOIN instance_of common_name) (JOIN occupation pianist))", "predicted_s_expression_fn": "(AND (JOIN occupation painter) (JOIN occupation pianist) (JOIN instance_of common_name))", "predicted_s_expression": "(AND (JOIN P106 Q1028181) (JOIN P106 Q486748) (JOIN P31 Q502895))", "sparql_attempt_count": 2, "actions": "SELECT ?x WHERE { ?x wdt:P106 wd:Q1028181 . ?x wdt:P106 wd:Q486748 . ?x wdt:P31 wd:Q502895 . }"}, {"turnID": "1112.55.6", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Single_Relation|Incomplete", "question": "What were the titles held by Henri de La Tour d'Auvergne, Duke of Bouillon ? [SEP] viscount, Freiherr, count [SEP] Or Philip of Hachberg-Sausenberg? [CTX]", "answer": "viscount, Freiherr, marquess, count, F\u00fcrst", "s_expression": "(OR (AND (JOIN (R P97) Q966628) (JOIN P31 Q4164871)) (AND (JOIN (R P97) Q90409) (JOIN P31 Q4164871)))", "s_expression_cores": ["(AND (JOIN (R P97) Q966628) (JOIN P31 Q4164871))", "(AND (JOIN (R P97) Q90409) (JOIN P31 Q4164871))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q966628 wdt:P97 ?x . ?x wdt:P31 wd:Q4164871 .  } UNION { wd:Q90409 wdt:P97 ?x . ?x wdt:P31 wd:Q4164871 .  } }", "results": ["Q185902", "Q1338119", "Q209726", "Q3519259", "Q18244"], "coreference_resolved_question": "What were the titles held by Philip of Hachberg-Sausenberg?", "s_expression_fn": "(OR (AND (JOIN (R noble_title) Henri_de_La_Tour_d'Auvergne,_Duke_of_Bouillon) (JOIN instance_of position)) (AND (JOIN (R noble_title) Philip_of_Hachberg-Sausenberg) (JOIN instance_of position)))", "predicted_s_expression_fn": "(AND (JOIN (R noble_title) Philip_of_Hachberg-Sausenberg) (JOIN instance_of title))", "predicted_s_expression": "(AND (JOIN (R P97) Q90409) (JOIN P31 Q4164871))", "sparql_attempt_count": 2, "actions": "SELECT ?x WHERE { wd:Q90409 wdt:P97 ?x . ?x wdt:P31 wd:Q4164871 . }"}, {"turnID": "1112.107.5", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Single_Relation", "question": "Which cellular components are the components of Calcium homeostasis endoplasmic reticulum protein and Dimethylaniline monooxygenase [N-oxide-forming] 2 ? [CTX]", "answer": "endoplasmic reticulum", "s_expression": "(AND (JOIN (R P681) Q21131323) (JOIN P31 Q5058355) (JOIN (R P681) Q21981580))", "s_expression_cores": ["(AND (JOIN (R P681) Q21131323) (JOIN P31 Q5058355) (JOIN (R P681) Q21981580))"], "sparql_delex": "SELECT ?x WHERE { wd:Q21131323 wdt:P681 ?x . ?x wdt:P31 wd:Q5058355 .  wd:Q21981580 wdt:P681 ?x .  }", "results": ["Q79927"], "coreference_resolved_question": "Which cellular components are the components of Calcium homeostasis endoplasmic reticulum protein and Dimethylaniline monooxygenase [N-oxide-forming] 2?", "s_expression_fn": "(AND (JOIN (R cell_component) Calcium_homeostasis_endoplasmic_reticulum_protein) (JOIN instance_of cellular_component) (JOIN (R cell_component) Dimethylaniline_monooxygenase_[N-oxide-forming]_2))", "predicted_s_expression_fn": "(AND (JOIN (R cell_component) Calcium_homeostasis_endoplasmic_reticulum_protein) (JOIN (R cell_component) Dimethylaniline_monooxygenase_[N-oxide-forming]_2) (JOIN instance_of part))", "predicted_s_expression": "(AND (JOIN (R P681) Q21131323) (JOIN (R P681) Q21101467) (JOIN P31 Q15989253))", "sparql_attempt_count": 2, "actions": "SELECT ?x WHERE { wd:Q21131323 wdt:P681 ?x . wd:Q21101467 wdt:P681 ?x . ?x wdt:P31 wd:Q15989253 . }"}, {"turnID": "1112.104.2", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Single_Relation|Incomplete", "question": "Which occupation was a position occupied by Hugh Murnin ? [SEP] Member of Parliament in the United Kingdom [SEP] Which party does that person belong to ? [SEP] Labour Party [SEP] Or Jean Van Houtte? [CTX]", "answer": "Labour Party, Christian Social Party", "s_expression": "(OR (AND (JOIN (R P102) Q5932069) (JOIN P31 Q7210356)) (AND (JOIN (R P102) Q705128) (JOIN P31 Q7210356)))", "s_expression_cores": ["(AND (JOIN (R P102) Q5932069) (JOIN P31 Q7210356))", "(AND (JOIN (R P102) Q705128) (JOIN P31 Q7210356))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q5932069 wdt:P102 ?x . ?x wdt:P31 wd:Q7210356 .  } UNION { wd:Q705128 wdt:P102 ?x . ?x wdt:P31 wd:Q7210356 .  } }", "results": ["Q9630", "Q3366715"], "coreference_resolved_question": "Which party does Jean Van Houtte belong to?", "s_expression_fn": "(OR (AND (JOIN (R member_of_political_party) Hugh_Murnin) (JOIN instance_of political_organization)) (AND (JOIN (R member_of_political_party) Jean_Van_Houtte) (JOIN instance_of political_organization)))", "predicted_s_expression_fn": "(OR (JOIN member_of_political_party Hugh_Murnin) (JOIN member_of_political_party Jean_Van_Houtte))", "predicted_s_expression": "(OR (JOIN (R P102) Q5932069) (JOIN P102 Q705128))", "sparql_attempt_count": 2, "actions": "SELECT ?x WHERE { { wd:Q5932069 wdt:P102 ?x . } UNION { ?x wdt:P102 wd:Q705128 . } }"}, {"turnID": "1112.87.3", "question_type": "Logical Reasoning (All)", "description": "Logical|Difference|Multiple_Relation", "question": "Which people have the profession as astronomer and do not have gender of male ? [CTX]", "answer": "Some of them are Caroline Herschel, Nancy Roman, Olga Voziakova, Amy Mainzer, Ad\u00e9la Kawka, Anja Cetti Andersen, Louise du Pierry, Margaret Burbidge, Kyongae Chang, Suzanne W. Tourtellotte", "s_expression": "(DIFF (AND (JOIN P106 Q11063) (JOIN P31 Q502895)) (JOIN P21 Q6581097))", "s_expression_cores": ["(AND (JOIN P106 Q11063) (JOIN P31 Q502895))", "(JOIN P21 Q6581097)"], "sparql_delex": "SELECT ?x WHERE { ?x wdt:P106 wd:Q11063 . ?x wdt:P31 wd:Q502895 .  FILTER NOT EXISTS { ?x wdt:P21 wd:Q6581097 .  } }", "results": ["Q6081225", "Q1705880", "Q239229", "Q2519972", "Q235712", "Q463348", "Q3553619", "Q5125188", "Q237867", "Q9159583", "Q11193073", "Q16059064", "Q7334345", "Q11192076", "Q451538", "Q232856", "Q3637698", "Q546140", "Q18164038", "Q468434", "Q20995113", "Q19956613", "Q7405244", "Q2669538", "Q3291089", "Q15990211", "Q9155513", "Q456119", "Q421977", "Q537158", "Q19590439", "Q243075", "Q434971", "Q453847", "Q17425380", "Q6780059", "Q3678973", "Q4766134", "Q434407", "Q2826927", "Q16662956", "Q263362", "Q1778802", "Q5248193", "Q5445619", "Q5847384", "Q19946726", "Q19414217", "Q6759001", "Q5649965", "Q3299010", "Q16301976", "Q19720733", "Q6205140", "Q13060087", "Q5297909", "Q17517013", "Q1917100", "Q7421764", "Q17180553", "Q12095007", "Q16567074", "Q6779757", "Q18709447", "Q437102", "Q3679906", "Q7983604", "Q21177524", "Q3757639", "Q19412913", "Q3978223", "Q11193042", "Q268702", "Q194764", "Q3909906", "Q15921115", "Q5367454", "Q2646999", "Q4511370", "Q2669110", "Q18026282", "Q27736836", "Q2701478", "Q63232", "Q4481452", "Q466779", "Q12270114", "Q6151217", "Q20675619", "Q110181", "Q3819432", "Q6558148", "Q270277", "Q5045315", "Q6306689", "Q21402728", "Q16864214", "Q6128616", "Q4120071", "Q13394322", "Q19518112", "Q91785", "Q20729910", "Q18631989", "Q6768943", "Q445414", "Q4194276", "Q5954875", "Q11903", "Q2527796", "Q1903088", "Q2616658", "Q169131", "Q2159861", "Q5161952", "Q77511", "Q7316576", "Q2870836", "Q2850870", "Q7422752", "Q3298163", "Q37138", "Q21874497", "Q17311604", "Q6837268", "Q633003", "Q19958604", "Q18977760", "Q11194115", "Q258263", "Q458574", "Q11190718", "Q19842801", "Q12270012", "Q4726279", "Q3786309", "Q58709", "Q7404989", "Q5044747", "Q16206328", "Q4509572", "Q17275467", "Q3847022", "Q235708", "Q240866", "Q58962", "Q17279208", "Q5362281", "Q4693036", "Q4693039", "Q2373057", "Q6688747", "Q4511414", "Q18616880", "Q18344602", "Q16192750", "Q493956", "Q10380514", "Q3916697", "Q5400926", "Q15261595", "Q437021", "Q4307605", "Q6696969", "Q15407642", "Q3442245", "Q3764458", "Q3403763", "Q6780567", "Q8245211", "Q2734054", "Q4769072", "Q21932506", "Q17119374", "Q4511466", "Q18745166", "Q289010", "Q25918123", "Q7246496", "Q12390818", "Q17519", "Q4018987", "Q4788084", "Q15921123", "Q4024867", "Q266131", "Q16543931", "Q3897809", "Q16010952", "Q4283766", "Q6558074", "Q266049", "Q77747", "Q16843449", "Q21128078", "Q816820", "Q2978393", "Q20675602", "Q18534125", "Q451644", "Q3276639", "Q231886", "Q12786621", "Q3081452", "Q291685", "Q290437", "Q21591166", "Q3157770", "Q76948", "Q7422525", "Q284180", "Q451925", "Q6779360", "Q3138460", "Q25933195", "Q1312399", "Q467786", "Q6804812", "Q2941858", "Q242809", "Q1096469", "Q3847875", "Q197941", "Q21605273", "Q1897148", "Q16728569", "Q7648728", "Q16215365", "Q22998551", "Q1879957", "Q18640436", "Q26710638", "Q6759722", "Q539738", "Q4738639", "Q9029943", "Q257420", "Q234909", "Q233974", "Q2851807", "Q266261", "Q3473350", "Q4768944", "Q7301731", "Q1895764", "Q20642391", "Q11554460", "Q234878", "Q4132711", "Q1895891", "Q11172658", "Q4749098", "Q19336092", "Q1748324", "Q2498733", "Q12242407", "Q445596", "Q3296126", "Q3527343", "Q234888", "Q2125869", "Q18619013", "Q15994849", "Q19812731", "Q6766272", "Q97141", "Q2993494", "Q4511479", "Q10713247", "Q3849937", "Q520382", "Q6153148", "Q5045386", "Q5052105", "Q19664364", "Q4738751", "Q542993", "Q5364875", "Q434592", "Q230650", "Q231618", "Q1369465", "Q4934658", "Q3488830", "Q3423811", "Q123131", "Q16015604", "Q100918", "Q3702532", "Q468833", "Q6778776", "Q13406771", "Q4681665", "Q3716757", "Q63603", "Q19812690", "Q21177534", "Q19318341", "Q4768870", "Q3572040", "Q5761896", "Q6779387", "Q15407028", "Q3050710", "Q3051196", "Q6409553", "Q23706031", "Q436020", "Q3555706", "Q3613511", "Q7926813", "Q270070", "Q14282", "Q6509145", "Q56029", "Q6498836", "Q19721605", "Q20642966", "Q3699903", "Q266972", "Q21402755", "Q15994374", "Q6543706", "Q8933013", "Q19812640", "Q15623021", "Q18400116", "Q3644754", "Q5478265", "Q1563860", "Q1264226", "Q6759495", "Q539093", "Q4347768", "Q4886322", "Q2838289", "Q231642", "Q5415054", "Q11190869", "Q17279172", "Q241304", "Q7154783", "Q4767624", "Q3302959", "Q5384049", "Q4765690", "Q11198878", "Q26807791", "Q468619", "Q9117640", "Q3335602", "Q4749084", "Q15996905", "Q3086447", "Q3575558", "Q276466", "Q18763990", "Q235426", "Q3129074", "Q451660", "Q3061591", "Q21402738", "Q20729903", "Q91438", "Q6369738", "Q12036333"], "coreference_resolved_question": "Which people have the profession as astronomer and do not have gender of male?", "s_expression_fn": "(DIFF (AND (JOIN occupation astronomer) (JOIN instance_of common_name)) (JOIN sex_or_gender male))", "predicted_s_expression_fn": "(DIFF (AND (JOIN (R occupation) astronomer) (JOIN instance_of common_name)) (AND (JOIN (R sex_or_gender) male) (JOIN instance_of common_name)))", "predicted_s_expression": "", "sparql_attempt_count": 2, "actions": ""}, {"turnID": "1112.87.7", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Single_Relation", "question": "Which people have career as astronomer and geophysicist ? [CTX]", "answer": "Some of them are Claudia Alexander, Edmund Halley, Carl Friedrich Gauss, V\u00e1clav L\u00e1ska, August Schmidt, Zina\u00efda Aksentieva, Franklin E. Roach, Jean-Jacques d'Ortous de Mairan, Jean-Claude G\u00e9rard, Gustav Angenheister", "s_expression": "(AND (JOIN P106 Q11063) (JOIN P31 Q502895) (JOIN P106 Q16335117))", "s_expression_cores": ["(AND (JOIN P106 Q11063) (JOIN P31 Q502895) (JOIN P106 Q16335117))"], "sparql_delex": "SELECT ?x WHERE { ?x wdt:P106 wd:Q11063 . ?x wdt:P31 wd:Q502895 .  ?x wdt:P106 wd:Q16335117 .  }", "results": ["Q61771", "Q763834", "Q109070", "Q2978393", "Q3575558", "Q3495509", "Q264659", "Q3165008", "Q6722", "Q925417", "Q47434", "Q20657694"], "coreference_resolved_question": "Which people have career as astronomer and geophysicist?", "s_expression_fn": "(AND (JOIN occupation astronomer) (JOIN instance_of common_name) (JOIN occupation geophysicist))", "predicted_s_expression_fn": "(AND (JOIN occupation astronomer) (JOIN occupation geophysicist) (JOIN instance_of common_name))", "predicted_s_expression": "(AND (JOIN P106 Q11063) (JOIN P106 Q16335117) (JOIN P31 Q502895))", "sparql_attempt_count": 2, "actions": "SELECT ?x WHERE { ?x wdt:P106 wd:Q11063 . ?x wdt:P106 wd:Q16335117 . ?x wdt:P31 wd:Q502895 . }"}, {"turnID": "1112.33.5", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Single_Relation", "question": "Which administrative territories do County of Montechiarugolo and Civitella d'Arna belong to ? [CTX]", "answer": "Italy", "s_expression": "(AND (JOIN (R P17) Q2088560) (JOIN P31 Q15617994) (JOIN (R P17) Q1236794))", "s_expression_cores": ["(AND (JOIN (R P17) Q2088560) (JOIN P31 Q15617994) (JOIN (R P17) Q1236794))"], "sparql_delex": "SELECT ?x WHERE { wd:Q2088560 wdt:P17 ?x . ?x wdt:P31 wd:Q15617994 .  wd:Q1236794 wdt:P17 ?x .  }", "results": ["Q38"], "coreference_resolved_question": "Which administrative territories do County of Montechiarugolo and Civitella d'Arna belong to?", "s_expression_fn": "(AND (JOIN (R country) County_of_Montechiarugolo) (JOIN instance_of designation_for_an_administrative_territorial_entity) (JOIN (R country) Civitella_d'Arna))", "predicted_s_expression_fn": "(DISTINCT (AND (JOIN (R administrative_territorial_entity) (VALUES County_of_Montechiarugolo Civitella_d'Arna)) (JOIN instance_of designation_for_an_administrative_territorial_entity)))", "predicted_s_expression": "(DISTINCT (AND (JOIN (R P131) (VALUES Q2088560 Q1236794)) (JOIN P31 Q56061)))", "sparql_attempt_count": 2, "actions": "SELECT DISTINCT ?x WHERE { VALUES ?x0 { wd:Q2088560 wd:Q1236794 } . ?x0 wdt:P131 ?x . ?x wdt:P31 wd:Q56061 . }"}, {"turnID": "1112.27.2", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Single_Relation", "question": "Which political territories do Johann Kuhnau and Philipp Zeiger belong to ? [CTX]", "answer": "Germany", "s_expression": "(AND (JOIN (R P27) Q157359) (JOIN P31 Q1048835) (JOIN (R P27) Q604324))", "s_expression_cores": ["(AND (JOIN (R P27) Q157359) (JOIN P31 Q1048835) (JOIN (R P27) Q604324))"], "sparql_delex": "SELECT ?x WHERE { wd:Q157359 wdt:P27 ?x . ?x wdt:P31 wd:Q1048835 .  wd:Q604324 wdt:P27 ?x .  }", "results": ["Q183"], "coreference_resolved_question": "Which political territories do Johann Kuhnau and Philipp Zeiger belong to?", "s_expression_fn": "(AND (JOIN (R country_of_citizenship) Johann_Kuhnau) (JOIN instance_of political_territorial_entity) (JOIN (R country_of_citizenship) Philipp_Zeiger))", "predicted_s_expression_fn": "(DISTINCT (AND (JOIN (R country_of_citizenship) (VALUES Johann_Kuhnau Philipp_Zeiger)) (JOIN instance_of political_territorial_entity))", "predicted_s_expression": "", "sparql_attempt_count": 2, "actions": ""}, {"turnID": "1112.27.9", "question_type": "Logical Reasoning (All)", "description": "Logical|Difference|Multiple_Relation", "question": "Which administrative territories holds diplomatic relationship with Germany and are not Krasonice present in ? [CTX]", "answer": "Some of them are Zimbabwe, Democratic Republic of the Congo, Saudi Arabia, Guinea, Angola, Ghana, Uruguay, Nicaragua, Rwanda, Paraguay", "s_expression": "(DIFF (AND (JOIN (R P530) Q183) (JOIN P31 Q15617994)) (JOIN (R P17) Q12031430))", "s_expression_cores": ["(AND (JOIN (R P530) Q183) (JOIN P31 Q15617994))", "(JOIN (R P17) Q12031430)"], "sparql_delex": "SELECT ?x WHERE { wd:Q183 wdt:P530 ?x . ?x wdt:P31 wd:Q15617994 .  FILTER NOT EXISTS { wd:Q12031430 wdt:P17 ?x .  } }", "results": ["Q804", "Q801", "Q800", "Q419", "Q668", "Q414", "Q142", "Q55", "Q145", "Q262", "Q148", "Q783", "Q265", "Q833", "Q711", "Q717", "Q252", "Q403", "Q657", "Q258", "Q45", "Q159", "Q43", "Q41", "Q155", "Q796", "Q794", "Q954", "Q889", "Q884", "Q958", "Q881", "Q739", "Q241", "Q242", "Q811", "Q33", "Q32", "Q31", "Q30", "Q924", "Q36", "Q34", "Q929", "Q39", "Q38", "Q986", "Q423", "Q983", "Q851", "Q733", "Q734", "Q736", "Q730", "Q230", "Q232", "Q233", "Q238", "Q20", "Q1045", "Q1041", "Q27", "Q28", "Q29", "Q1049", "Q189", "Q843", "Q184", "Q1029", "Q1028", "Q786", "Q347", "Q227", "Q225", "Q224", "Q222", "Q96", "Q229", "Q228", "Q17", "Q902", "Q1036", "Q1037", "Q1008", "Q1032", "Q1033", "Q1030", "Q965", "Q967", "Q962", "Q963", "Q298", "Q115", "Q114", "Q117", "Q750", "Q212", "Q217", "Q214", "Q215", "Q218", "Q219", "Q912", "Q917", "Q916", "Q1007", "Q1006", "Q1005", "Q1009", "Q974", "Q971", "Q79", "Q77", "Q878", "Q774", "Q948", "Q810", "Q1019", "Q1016", "Q1011", "Q945", "Q869", "Q953"], "coreference_resolved_question": "Which administrative territories hold diplomatic relationship with Germany and are not Krasonice present in?", "s_expression_fn": "(DIFF (AND (JOIN (R diplomatic_relation) Germany) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (JOIN (R country) Krasonice))", "predicted_s_expression_fn": "(DIFF (AND (JOIN diplomatic_relation Germany) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (JOIN (R present_in) Krasonice))", "predicted_s_expression": "(DIFF (AND (JOIN P530 Q183) (JOIN P31 Q15617994)) (JOIN (R P1441) Q12031430))", "sparql_attempt_count": 2, "actions": "SELECT ?x WHERE { ?x wdt:P530 wd:Q183 . ?x wdt:P31 wd:Q15617994 . FILTER NOT EXISTS { wd:Q12031430 wdt:P1441 ?x . } }"}, {"turnID": "1112.17.3", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Single_Relation", "question": "Which people are a female and male ? [CTX]", "answer": "Some of them are Parinya Charoenphol, Lilly Wachowski, Amadeus Serafini, Jelizaveta Potapova, Vicki Richter, Colombe Marcasiano, Kenneth Neil, Glenys Barton, Louis-Marie Autissier, Marie-Joseph Charles des Acres de l'Aigle", "s_expression": "(AND (JOIN P21 Q6581072) (JOIN P31 Q502895) (JOIN P21 Q6581097))", "s_expression_cores": ["(AND (JOIN P21 Q6581072) (JOIN P31 Q502895) (JOIN P21 Q6581097))"], "sparql_delex": "SELECT ?x WHERE { ?x wdt:P21 wd:Q6581072 . ?x wdt:P31 wd:Q502895 .  ?x wdt:P21 wd:Q6581097 .  }", "results": ["Q12966459", "Q17600942", "Q3260705", "Q5874237", "Q21391750", "Q17225819", "Q5972494", "Q16941580", "Q16733519", "Q11622868", "Q6702791", "Q10263785", "Q6571041", "Q16732132", "Q24264223", "Q20401379", "Q20119921", "Q2312612", "Q16164967", "Q242700", "Q6555624", "Q12586819", "Q23698979", "Q17628096", "Q22342662", "Q525066", "Q9544977", "Q503007", "Q22280111", "Q22102078", "Q5482749", "Q21392153", "Q201204", "Q10281088", "Q442804", "Q16767898", "Q22570074", "Q21601127", "Q12403076", "Q14432239", "Q12734885", "Q734662", "Q24500675", "Q24034956", "Q19957341", "Q6258596", "Q22236117", "Q22808784", "Q11379959", "Q6003690", "Q24807469", "Q21857402", "Q21258362", "Q4979792", "Q11449790", "Q22001922", "Q3575012", "Q3764762", "Q7377573", "Q20068820", "Q6031433", "Q21794041", "Q6438624", "Q25768293", "Q19448005", "Q21503040", "Q17148031", "Q11604340", "Q17158335", "Q11815936", "Q17364527", "Q22280435", "Q15934058", "Q18559837", "Q11201210", "Q25748324", "Q459844", "Q2379965", "Q3291942", "Q17621841", "Q20980163", "Q453573", "Q11531266", "Q4255661", "Q22675675", "Q528434", "Q237726", "Q74813", "Q2668396", "Q298423", "Q22073991", "Q503575", "Q23416861", "Q15807938", "Q19357604", "Q18049905", "Q26921704", "Q2882250", "Q18346977", "Q2939204", "Q3809749", "Q12685049", "Q21033490", "Q5856706", "Q16165783", "Q5569499", "Q12613187", "Q7849225", "Q16582167", "Q19543099", "Q16865281", "Q22095108", "Q12872947", "Q15433626"], "coreference_resolved_question": "Which people are a female and male?", "s_expression_fn": "(AND (JOIN sex_or_gender female) (JOIN instance_of common_name) (JOIN sex_or_gender male))", "predicted_s_expression_fn": "(AND (JOIN (R sex_or_gender) (VALUES female male)) (JOIN instance_of common_name))", "predicted_s_expression": "(AND (JOIN P21 (VALUES Q6581072 Q6581097)) (JOIN P31 Q502895))", "sparql_attempt_count": 3, "actions": "SELECT ?x WHERE { VALUES ?x0 { wd:Q6581072 wd:Q6581097 } . ?x wdt:P21 ?x0 . ?x wdt:P31 wd:Q502895 . }"}, {"turnID": "1112.28.3", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Single_Relation|Incomplete", "question": "Where was Derek Walsh born ? [SEP] Hamilton [SEP] Which sex does that person belong to ? [SEP] male [SEP] And also Fran\u00e7ois de Beaumont, baron des Adrets [CTX]", "answer": "male", "s_expression": "(AND (JOIN (R P21) Q1200133) (JOIN P31 Q290) (JOIN (R P21) Q557118))", "s_expression_cores": ["(AND (JOIN (R P21) Q1200133) (JOIN P31 Q290) (JOIN (R P21) Q557118))"], "sparql_delex": "SELECT ?x WHERE { wd:Q1200133 wdt:P21 ?x . ?x wdt:P31 wd:Q290 .  wd:Q557118 wdt:P21 ?x .  }", "results": ["Q6581097"], "coreference_resolved_question": "Which sex does Fran\u00e7ois de Beaumont, baron des Adrets belong to?", "s_expression_fn": "(AND (JOIN (R sex_or_gender) Derek_Walsh) (JOIN instance_of sex) (JOIN (R sex_or_gender) Fran\u00e7ois_de_Beaumont,_baron_des_Adrets))", "predicted_s_expression_fn": "(AND (JOIN (R sex_or_gender) Derek_Walsh) (JOIN instance_of sex) (JOIN (R sex_or_gender) Fran\u00e7ois_de_Beaumont,_baron_des_Adrets))", "predicted_s_expression": "(AND (JOIN (R P21) Q1200133) (JOIN P31 Q290) (JOIN (R P21) Q557118))", "sparql_attempt_count": 2, "actions": "SELECT ?x WHERE { wd:Q1200133 wdt:P21 ?x . ?x wdt:P31 wd:Q290 . wd:Q557118 wdt:P21 ?x . }"}, {"turnID": "1112.97.5", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Single_Relation", "question": "Which parts are the cell components of NAD-dependent protein deacetylase sirtuin-1 and Gamma-interferon-inducible lysosomal thiol reductase ? [CTX]", "answer": "cytoplasm", "s_expression": "(AND (JOIN (R P681) Q21113719) (JOIN P31 Q15989253) (JOIN (R P681) Q21108660))", "s_expression_cores": ["(AND (JOIN (R P681) Q21113719) (JOIN P31 Q15989253) (JOIN (R P681) Q21108660))"], "sparql_delex": "SELECT ?x WHERE { wd:Q21113719 wdt:P681 ?x . ?x wdt:P31 wd:Q15989253 .  wd:Q21108660 wdt:P681 ?x .  }", "results": ["Q79899"], "coreference_resolved_question": "Which parts are the cell components of NAD-dependent protein deacetylase sirtuin-1 and Gamma-interferon-inducible lysosomal thiol reductase?", "s_expression_fn": "(AND (JOIN (R cell_component) NAD-dependent_protein_deacetylase_sirtuin-1) (JOIN instance_of part) (JOIN (R cell_component) Gamma-interferon-inducible_lysosomal_thiol_reductase))", "predicted_s_expression_fn": "(AND (JOIN (R cell_component) NAD-dependent_protein_deacetylase_sirtuin-1) (JOIN (R cell_component) Gamma-interferon-inducible_lysosomal_thiol_reductase) (JOIN instance_of part))", "predicted_s_expression": "(AND (JOIN (R P681) Q21113719) (JOIN (R P681) Q21108660) (JOIN P31 Q15989253))", "sparql_attempt_count": 2, "actions": "SELECT ?x WHERE { wd:Q21113719 wdt:P681 ?x . wd:Q21108660 wdt:P681 ?x . ?x wdt:P31 wd:Q15989253 . }"}, {"turnID": "1112.81.3", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Single_Relation|Incomplete", "question": "Which occupation was a position held by Ermolao Barbaro ? [SEP] bishop [SEP] Which administrative territory is the birthplace of that person ? [SEP] Venice [SEP] Which works of art have their narrative set in that administrative territory ? [SEP] From Russia with Love, Casino Royale, Moonraker [SEP] Or Amsterdam? [CTX]", "answer": "Some of them are Summer in the City, Dieci inverni, Chez Nous, From Russia with Love, Broken Mirrors, Othello, Casino Royale, Das Tagebuch der Anne Frank, Italian for Beginners, House of Boys", "s_expression": "(OR (AND (JOIN P840 Q641) (JOIN P31 Q838948)) (AND (JOIN P840 Q727) (JOIN P31 Q838948)))", "s_expression_cores": ["(AND (JOIN P840 Q641) (JOIN P31 Q838948))", "(AND (JOIN P840 Q727) (JOIN P31 Q838948))"], "sparql_delex": "SELECT ?x WHERE { { ?x wdt:P840 wd:Q641 . ?x wdt:P31 wd:Q838948 .  } UNION { ?x wdt:P840 wd:Q727 . ?x wdt:P31 wd:Q838948 .  } }", "results": ["Q643268", "Q15873873", "Q3246496", "Q151904", "Q3032583", "Q728499", "Q334780", "Q106571", "Q258389", "Q26833", "Q745281", "Q21986478"], "coreference_resolved_question": "Which works of art have their narrative set in Amsterdam?", "s_expression_fn": "(OR (AND (JOIN narrative_location Venice) (JOIN instance_of work_of_art)) (AND (JOIN narrative_location Amsterdam) (JOIN instance_of work_of_art)))", "predicted_s_expression_fn": "(OR (AND (JOIN narrative_location Venice) (JOIN instance_of work_of_art)) (AND (JOIN narrative_location Amsterdam) (JOIN instance_of work_of_art))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "1112.64.3", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Single_Relation|Incomplete", "question": "Where did Tommaso Maestrelli die ? [SEP] Rome [SEP] Which organization is the tomb of that person ? [SEP] Cimitero Flaminio [SEP] Or Easy Goer? [CTX]", "answer": "Marchmont Farm Equine Cemetery, Cimitero Flaminio", "s_expression": "(OR (AND (JOIN (R P119) Q1793842) (JOIN P31 Q43229)) (AND (JOIN (R P119) Q5331132) (JOIN P31 Q43229)))", "s_expression_cores": ["(AND (JOIN (R P119) Q1793842) (JOIN P31 Q43229))", "(AND (JOIN (R P119) Q5331132) (JOIN P31 Q43229))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q1793842 wdt:P119 ?x . ?x wdt:P31 wd:Q43229 .  } UNION { wd:Q5331132 wdt:P119 ?x . ?x wdt:P31 wd:Q43229 .  } }", "results": ["Q22006423", "Q3676869"], "coreference_resolved_question": "Which organization is the tomb of Easy Goer?", "s_expression_fn": "(OR (AND (JOIN (R place_of_burial) Tommaso_Maestrelli) (JOIN instance_of organization)) (AND (JOIN (R place_of_burial) Easy_Goer) (JOIN instance_of organization)))", "predicted_s_expression_fn": "(OR (JOIN (R tomb) Tommaso_Maestrelli) (JOIN (R tomb) Easy_Goer)", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "1112.74.3", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Single_Relation|Incomplete", "question": "What is K\u014dz\u014d Morishita a director of ? [SEP] Saint Seiya: The Movie [SEP] Which name is associated with that person ? [SEP] Morishita [SEP] Or Val\u00e9rie Simon? [CTX]", "answer": "Morishita, Simon", "s_expression": "(OR (AND (JOIN (R P734) Q369396) (JOIN P31 Q82799)) (AND (JOIN (R P734) Q15639329) (JOIN P31 Q82799)))", "s_expression_cores": ["(AND (JOIN (R P734) Q369396) (JOIN P31 Q82799))", "(AND (JOIN (R P734) Q15639329) (JOIN P31 Q82799))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q369396 wdt:P734 ?x . ?x wdt:P31 wd:Q82799 .  } UNION { wd:Q15639329 wdt:P734 ?x . ?x wdt:P31 wd:Q82799 .  } }", "results": ["Q21476622", "Q2287331"], "coreference_resolved_question": "Which name is associated with Val\u00e9rie Simon?", "s_expression_fn": "(OR (AND (JOIN (R family_name) K\u014dz\u014d_Morishita) (JOIN instance_of name)) (AND (JOIN (R family_name) Val\u00e9rie_Simon) (JOIN instance_of name)))", "predicted_s_expression_fn": "(OR (JOIN (R name) K\u014dz\u014d_Morishita) (JOIN (R name) Val\u00e9rie_Simon))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "1112.106.15", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Single_Relation|Incomplete", "question": "Which is the national anthem of United States of America ? [SEP] The Star-Spangled Banner [SEP] Who was that hymn composed by ? [SEP] John Stafford Smith [SEP] Or Singing Behind Screens? [CTX]", "answer": "Han Yong, John Stafford Smith", "s_expression": "(OR (AND (JOIN (R P86) Q44696) (JOIN P31 Q502895)) (AND (JOIN (R P86) Q3053517) (JOIN P31 Q502895)))", "s_expression_cores": ["(AND (JOIN (R P86) Q44696) (JOIN P31 Q502895))", "(AND (JOIN (R P86) Q3053517) (JOIN P31 Q502895))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q44696 wdt:P86 ?x . ?x wdt:P31 wd:Q502895 .  } UNION { wd:Q3053517 wdt:P86 ?x . ?x wdt:P31 wd:Q502895 .  } }", "results": ["Q8292451", "Q563098"], "coreference_resolved_question": "Who was Or Singing Behind Screens? composed by?", "s_expression_fn": "(OR (AND (JOIN (R composer) The_Star-Spangled_Banner) (JOIN instance_of common_name)) (AND (JOIN (R composer) Singing_Behind_Screens) (JOIN instance_of common_name)))", "predicted_s_expression_fn": "(OR (JOIN composer The_Star-Spangled_Banner) (JOIN composer Singing_Behind_Screens))", "predicted_s_expression": "(OR (JOIN (R P86) Q44696) (JOIN P86 Q3053517))", "sparql_attempt_count": 2, "actions": "SELECT ?x WHERE { { wd:Q44696 wdt:P86 ?x . } UNION { ?x wdt:P86 wd:Q3053517 . } }"}, {"turnID": "639.21.3", "question_type": "Logical Reasoning (All)", "description": "Logical|Difference|Multiple_Relation", "question": "Which drugs are prescribed for sinusitis and do not show a significant interation with pimozide ? [CTX]", "answer": "Some of them are Cefuroxime, Cefprozil, dexbrompheniramine, Gatifloxacin, Levofloxacin, Loracarbef, Cefdinir, pseudoephedrine, Amoxicillin, Trovafloxacin", "s_expression": "(DIFF (AND (JOIN (R P2176) Q183344) (JOIN P31 Q8386)) (JOIN (R P769) Q144085))", "s_expression_cores": ["(AND (JOIN (R P2176) Q183344) (JOIN P31 Q8386))", "(JOIN (R P769) Q144085)"], "sparql_delex": "SELECT ?x WHERE { wd:Q183344 wdt:P2176 ?x . ?x wdt:P31 wd:Q8386 .  FILTER NOT EXISTS { wd:Q144085 wdt:P769 ?x .  } }", "results": ["Q424193", "Q5268318", "Q2365016", "Q415392", "Q201928", "Q979521", "Q420682", "Q1453445", "Q670131", "Q3231623", "Q263958", "Q544393", "Q413728", "Q422212", "Q415433", "Q256602"], "coreference_resolved_question": "Which drugs are prescribed for sinusitis and do not show a significant interaction with pimozide?", "s_expression_fn": "(DIFF (AND (JOIN (R drug_or_therapy_used_for_treatment) sinusitis) (JOIN instance_of drug)) (JOIN (R significant_drug_interaction) pimozide))", "predicted_s_expression_fn": "(DIFF (AND (JOIN (R medical_condition_treated) sinusitis) (JOIN instance_of drug)) (AND (JOIN (R drug_interaction) pimozide) (JOIN instance_of drug)))", "predicted_s_expression": "", "sparql_attempt_count": 2, "actions": ""}, {"turnID": "639.21.4", "question_type": "Logical Reasoning (All)", "description": "Logical|Difference|Single_Relation", "question": "Which drugs are prescribed for sinusitis but not rectum cancer ? [CTX]", "answer": "Some of them are Levofloxacin, Trovafloxacin, Amoxicillin, Moxifloxacin, Gatifloxacin, Cefuroxime, Ciprofloxacin, pseudoephedrine, Omalizumab, Clarithromycin", "s_expression": "(DIFF (AND (JOIN P2175 Q183344) (JOIN P31 Q8386)) (JOIN P2175 Q18968224))", "s_expression_cores": ["(AND (JOIN P2175 Q183344) (JOIN P31 Q8386))", "(JOIN P2175 Q18968224)"], "sparql_delex": "SELECT ?x WHERE { ?x wdt:P2175 wd:Q183344 . ?x wdt:P31 wd:Q8386 .  FILTER NOT EXISTS { ?x wdt:P2175 wd:Q18968224 .  } }", "results": ["Q5268318", "Q2365016", "Q415392", "Q201928", "Q1453445", "Q979521", "Q420682", "Q263958", "Q118551", "Q424193", "Q3231623", "Q424940", "Q544393", "Q413728", "Q422212", "Q415433", "Q256602"], "coreference_resolved_question": "Which drugs are prescribed for sinusitis but not rectum cancer?", "s_expression_fn": "(DIFF (AND (JOIN medical_condition_treated sinusitis) (JOIN instance_of drug)) (JOIN medical_condition_treated rectum_cancer))", "predicted_s_expression_fn": "(DIFF (AND (JOIN (R medical_condition_treated) sinusitis) (JOIN instance_of drug)) (AND (JOIN (R medical_condition_treated) rectum_cancer) (JOIN instance_of drug)))", "predicted_s_expression": "", "sparql_attempt_count": 2, "actions": ""}, {"turnID": "639.131.4", "question_type": "Logical Reasoning (All)", "description": "Logical|Difference|Multiple_Relation", "question": "Which works of art were primarily based on agriculture and do n't have United States of America as their origination points ? [CTX]", "answer": "Some of them are Paper Wheat, Bananas!*, Old Partner, We Feed the World, Our Daily Bread, World of Plenty, Koundi et le jeudi national, The Moo Man, The Fruit Hunters, The Wanted 18", "s_expression": "(DIFF (AND (JOIN P921 Q11451) (JOIN P31 Q838948)) (JOIN P495 Q30))", "s_expression_cores": ["(AND (JOIN P921 Q11451) (JOIN P31 Q838948))", "(JOIN P495 Q30)"], "sparql_delex": "SELECT ?x WHERE { ?x wdt:P921 wd:Q11451 . ?x wdt:P31 wd:Q838948 .  FILTER NOT EXISTS { ?x wdt:P495 wd:Q30 .  } }", "results": ["Q7132676", "Q8036626", "Q3344308", "Q7084719", "Q7193209", "Q18589110", "Q16974380", "Q2031257", "Q6545078", "Q695573", "Q3735538", "Q3199303", "Q17492603", "Q17492410", "Q3847174", "Q7752140", "Q697687", "Q7622422", "Q7735389", "Q7728995", "Q4656156", "Q4853901", "Q2530405", "Q6932066", "Q2870449", "Q16983398", "Q806087"], "coreference_resolved_question": "Which works of art were primarily based on agriculture and don't have United States of America as their origination points?", "s_expression_fn": "(DIFF (AND (JOIN main_subject agriculture) (JOIN instance_of work_of_art)) (JOIN country_of_origin United_States_of_America))", "predicted_s_expression_fn": "(DIFF (AND (JOIN main_subject agriculture) (JOIN instance_of work_of_art)) (AND (JOIN country_of_origin United_States_of_America) (JOIN instance_of work_of_art))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "639.103.4", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Single_Relation|Incomplete", "question": "What is Carlos Bejarano a member of ? [SEP] Equatorial Guinea national football team [SEP] Which language is that person capable of writing ? [SEP] Spanish [SEP] Which sport was that person a part of ? [SEP] association football [SEP] And also Francisco Silva Cabrera [CTX]", "answer": "association football", "s_expression": "(AND (JOIN (R P641) Q3816798) (JOIN P31 Q349) (JOIN (R P641) Q16569264))", "s_expression_cores": ["(AND (JOIN (R P641) Q3816798) (JOIN P31 Q349) (JOIN (R P641) Q16569264))"], "sparql_delex": "SELECT ?x WHERE { wd:Q3816798 wdt:P641 ?x . ?x wdt:P31 wd:Q349 .  wd:Q16569264 wdt:P641 ?x .  }", "results": ["Q2736"], "coreference_resolved_question": "Which sport was Francisco Silva Cabrera a part of?", "s_expression_fn": "(AND (JOIN (R sport) Carlos_Bejarano) (JOIN instance_of sport) (JOIN (R sport) Francisco_Silva_Cabrera))", "predicted_s_expression_fn": "(AND (JOIN (R sports_discipline_competed_in) Francisco_Silva_Cabrera) (JOIN instance_of sport))", "predicted_s_expression": "", "sparql_attempt_count": 2, "actions": ""}, {"turnID": "639.65.2", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Single_Relation|Incomplete", "question": "What represents the molecular function of Zinc finger protein 821 ? [SEP] metal ion binding [SEP] Or ZZ-type zinc finger-containing protein 3? [CTX]", "answer": "zinc ion binding, metal ion binding", "s_expression": "(OR (AND (JOIN (R P680) Q21992704) (JOIN P31 Q44424)) (AND (JOIN (R P680) Q21980323) (JOIN P31 Q44424)))", "s_expression_cores": ["(AND (JOIN (R P680) Q21992704) (JOIN P31 Q44424))", "(AND (JOIN (R P680) Q21980323) (JOIN P31 Q44424))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q21992704 wdt:P680 ?x . ?x wdt:P31 wd:Q44424 .  } UNION { wd:Q21980323 wdt:P680 ?x . ?x wdt:P31 wd:Q44424 .  } }", "results": ["Q14633865", "Q13667380"], "coreference_resolved_question": "What represents the molecular function of ZZ-type zinc finger-containing protein 3?", "s_expression_fn": "(OR (AND (JOIN (R molecular_function) Zinc_finger_protein_821) (JOIN instance_of chemical_bond)) (AND (JOIN (R molecular_function) ZZ-type_zinc_finger-containing_protein_3) (JOIN instance_of chemical_bond)))", "predicted_s_expression_fn": "(AND (JOIN (R molecular_function) ZZ-type_zinc_finger-containing_protein_3) (JOIN instance_of molecular_function))", "predicted_s_expression": "(AND (JOIN (R P680) Q21114437) (JOIN P31 Q44424))", "sparql_attempt_count": 2, "actions": "SELECT ?x WHERE { wd:Q21114437 wdt:P680 ?x . ?x wdt:P31 wd:Q44424 . }"}, {"turnID": "639.84.2", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Single_Relation|Incomplete", "question": "Who designed SER B and SECR B1 classes ? [SEP] James Stirling [SEP] What is the profession of that person ? [SEP] engineer [SEP] Or Bill Russell? [CTX]", "answer": "jazz musician, violinist, engineer, composer", "s_expression": "(OR (AND (JOIN (R P106) Q6143680) (JOIN P31 Q12737077)) (AND (JOIN (R P106) Q862418) (JOIN P31 Q12737077)))", "s_expression_cores": ["(AND (JOIN (R P106) Q6143680) (JOIN P31 Q12737077))", "(AND (JOIN (R P106) Q862418) (JOIN P31 Q12737077))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q6143680 wdt:P106 ?x . ?x wdt:P31 wd:Q12737077 .  } UNION { wd:Q862418 wdt:P106 ?x . ?x wdt:P31 wd:Q12737077 .  } }", "results": ["Q15981151", "Q1259917", "Q81096", "Q36834"], "coreference_resolved_question": "What is the profession of Bill Russell?", "s_expression_fn": "(OR (AND (JOIN (R occupation) James_Stirling) (JOIN instance_of occupation)) (AND (JOIN (R occupation) Bill_Russell) (JOIN instance_of occupation)))", "predicted_s_expression_fn": "(OR (AND (JOIN (R occupation) James_Stirling) (AND (JOIN (R occupation) Bill_Russell)))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "639.84.5", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Multiple_Relation", "question": "Which administrative territories are the countries of citizenship of James Stirling and are the origins of Waterloo ? [CTX]", "answer": "United Kingdom", "s_expression": "(AND (JOIN (R P27) Q6143680) (JOIN P31 Q15617994) (JOIN (R P495) Q1604818))", "s_expression_cores": ["(AND (JOIN (R P27) Q6143680) (JOIN P31 Q15617994) (JOIN (R P495) Q1604818))"], "sparql_delex": "SELECT ?x WHERE { wd:Q6143680 wdt:P27 ?x . ?x wdt:P31 wd:Q15617994 .  wd:Q1604818 wdt:P495 ?x .  }", "results": ["Q145"], "coreference_resolved_question": "Which administrative territories are the countries of citizenship of James Stirling and are the origins of Waterloo?", "s_expression_fn": "(AND (JOIN (R country_of_citizenship) James_Stirling) (JOIN instance_of designation_for_an_administrative_territorial_entity) (JOIN (R country_of_origin) Waterloo))", "predicted_s_expression_fn": "(AND (JOIN (R country_of_citizenship) James_Stirling) (JOIN (R country_of_origin) Waterloo) (JOIN instance_of designation_for_an_administrative_territorial_entity))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "639.84.9", "question_type": "Logical Reasoning (All)", "description": "Logical|Difference|Multiple_Relation", "question": "Which administrative territories have diplomatic relations with Brazil and are not Kali Napu present in ? [CTX]", "answer": "Some of them are Egypt, Haiti, Mexico, Colombia, Italy, United States of America, Bhutan, Equatorial Guinea, Bolivia, East Timor", "s_expression": "(DIFF (AND (JOIN (R P530) Q155) (JOIN P31 Q15617994)) (JOIN (R P17) Q26332262))", "s_expression_cores": ["(AND (JOIN (R P530) Q155) (JOIN P31 Q15617994))", "(JOIN (R P17) Q26332262)"], "sparql_delex": "SELECT ?x WHERE { wd:Q155 wdt:P530 ?x . ?x wdt:P31 wd:Q15617994 .  FILTER NOT EXISTS { wd:Q26332262 wdt:P17 ?x .  } }", "results": ["Q783", "Q801", "Q800", "Q843", "Q1029", "Q822", "Q241", "Q419", "Q244", "Q668", "Q414", "Q574", "Q142", "Q145", "Q148", "Q96", "Q17", "Q30", "Q36", "Q79", "Q77", "Q38", "Q1016", "Q739", "Q423", "Q717", "Q983", "Q733", "Q1011", "Q962", "Q736", "Q298", "Q399", "Q403", "Q258", "Q750", "Q212", "Q213", "Q45", "Q159", "Q43", "Q41", "Q734", "Q790", "Q796", "Q794", "Q917", "Q1033", "Q29", "Q958", "Q1049", "Q916"], "coreference_resolved_question": "Which administrative territories have diplomatic relations with Brazil and are not present in Waterloo?", "s_expression_fn": "(DIFF (AND (JOIN (R diplomatic_relation) Brazil) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (JOIN (R country) Kali_Napu))", "predicted_s_expression_fn": "(DIFF (AND (JOIN diplomatic_relation Brazil) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (JOIN (R present_in) Kali_Napu))", "predicted_s_expression": "(DIFF (AND (JOIN P530 Q155) (JOIN P31 Q15617994)) (JOIN (R P1441) Q26332262))", "sparql_attempt_count": 2, "actions": "SELECT ?x WHERE { ?x wdt:P530 wd:Q155 . ?x wdt:P31 wd:Q15617994 . FILTER NOT EXISTS { wd:Q26332262 wdt:P1441 ?x . } }"}, {"turnID": "639.111.5", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Single_Relation|Incomplete", "question": "Which administrative territory is Nuneaton present in ? [SEP] United Kingdom [SEP] Which construction was designed by that administrative territory ? [SEP] Chennai Tech Park [SEP] Or Kerstin Thompson? [CTX]", "answer": "House at Lake Connewarre, Chennai Tech Park, House at Big Hill, Monash University Museum of Art", "s_expression": "(OR (AND (JOIN P84 Q145) (JOIN P31 Q811430)) (AND (JOIN P84 Q6394766) (JOIN P31 Q811430)))", "s_expression_cores": ["(AND (JOIN P84 Q145) (JOIN P31 Q811430))", "(AND (JOIN P84 Q6394766) (JOIN P31 Q811430))"], "sparql_delex": "SELECT ?x WHERE { { ?x wdt:P84 wd:Q145 . ?x wdt:P31 wd:Q811430 .  } UNION { ?x wdt:P84 wd:Q6394766 . ?x wdt:P31 wd:Q811430 .  } }", "results": ["Q5914527", "Q18648965", "Q12060564", "Q12061966"], "coreference_resolved_question": "Which construction was designed by Kerstin Thompson?", "s_expression_fn": "(OR (AND (JOIN architect United_Kingdom) (JOIN instance_of construction)) (AND (JOIN architect Kerstin_Thompson) (JOIN instance_of construction)))", "predicted_s_expression_fn": "(OR (AND (JOIN (R designer) United_Kingdom) (JOIN instance_of construction)) (AND (JOIN (R designer) Kerstin_Thompson) (JOIN instance_of construction)))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "639.11.2", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Single_Relation|Incomplete", "question": "What was the position held by Harri Leupold ? [SEP] member of the Volkskammer [SEP] Which sex does that person have ? [SEP] male [SEP] And also Dieter M\u00f6hrmann [CTX]", "answer": "male", "s_expression": "(AND (JOIN (R P21) Q15858391) (JOIN P31 Q290) (JOIN (R P21) Q112256))", "s_expression_cores": ["(AND (JOIN (R P21) Q15858391) (JOIN P31 Q290) (JOIN (R P21) Q112256))"], "sparql_delex": "SELECT ?x WHERE { wd:Q15858391 wdt:P21 ?x . ?x wdt:P31 wd:Q290 .  wd:Q112256 wdt:P21 ?x .  }", "results": ["Q6581097"], "coreference_resolved_question": "Which sex does Dieter M\u00f6hrmann have?", "s_expression_fn": "(AND (JOIN (R sex_or_gender) Harri_Leupold) (JOIN instance_of sex) (JOIN (R sex_or_gender) Dieter_M\u00f6hrmann))", "predicted_s_expression_fn": "(AND (JOIN (R sex_or_gender) Harri_Leupold) (JOIN instance_of sex) (JOIN (R sex_or_gender) Dieter_M\u00f6hrmann))", "predicted_s_expression": "(AND (JOIN (R P21) Q15858391) (JOIN P31 Q290) (JOIN (R P21) Q112256))", "sparql_attempt_count": 2, "actions": "SELECT ?x WHERE { wd:Q15858391 wdt:P21 ?x . ?x wdt:P31 wd:Q290 . wd:Q112256 wdt:P21 ?x . }"}, {"turnID": "639.20.3", "question_type": "Logical Reasoning (All)", "description": "Logical|Difference|Multiple_Relation", "question": "Which administrative territories have diplomatic relationships with France and are not the countries of citizenship of David Leatherdale ? [CTX]", "answer": "Some of them are Russia, Andorra, Mongolia, Armenia, Ireland, Serbia, United States of America, Brazil, Italy, Cape Verde", "s_expression": "(DIFF (AND (JOIN (R P530) Q142) (JOIN P31 Q15617994)) (JOIN (R P27) Q5236411))", "s_expression_cores": ["(AND (JOIN (R P530) Q142) (JOIN P31 Q15617994))", "(JOIN (R P27) Q5236411)"], "sparql_delex": "SELECT ?x WHERE { wd:Q142 wdt:P530 ?x . ?x wdt:P31 wd:Q15617994 .  FILTER NOT EXISTS { wd:Q5236411 wdt:P27 ?x .  } }", "results": ["Q711", "Q159", "Q222", "Q801", "Q155", "Q1011", "Q228", "Q32", "Q17", "Q30", "Q399", "Q27", "Q403", "Q38"], "coreference_resolved_question": "Which administrative territories have diplomatic relationships with France and are not the countries of citizenship of David Leatherdale?", "s_expression_fn": "(DIFF (AND (JOIN (R diplomatic_relation) France) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (JOIN (R country_of_citizenship) David_Leatherdale))", "predicted_s_expression_fn": "(DIFF (AND (JOIN diplomatic_relation France) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (AND (JOIN (R country_of_citizenship) David_Leatherdale) (JOIN instance_of designation_for_an_administrative_territorial_entity)))", "predicted_s_expression": "", "sparql_attempt_count": 1, "actions": ""}, {"turnID": "639.121.5", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Single_Relation", "question": "Which cellular components are the cell components of Selenium-binding protein 1 and Gasdermin-D ? [CTX]", "answer": "extracellular space", "s_expression": "(AND (JOIN (R P681) Q21122756) (JOIN P31 Q5058355) (JOIN (R P681) Q21984072))", "s_expression_cores": ["(AND (JOIN (R P681) Q21122756) (JOIN P31 Q5058355) (JOIN (R P681) Q21984072))"], "sparql_delex": "SELECT ?x WHERE { wd:Q21122756 wdt:P681 ?x . ?x wdt:P31 wd:Q5058355 .  wd:Q21984072 wdt:P681 ?x .  }", "results": ["Q2914458"], "coreference_resolved_question": "Which cellular components are the cell components of Selenium-binding protein 1 and Gasdermin-D?", "s_expression_fn": "(AND (JOIN (R cell_component) Selenium-binding_protein_1) (JOIN instance_of cellular_component) (JOIN (R cell_component) Gasdermin-D))", "predicted_s_expression_fn": "(DISTINCT (AND (JOIN (R cell_component) (VALUES Selenium-binding_protein_1 Gasdermin-D)) (JOIN instance_of cellular_component)))", "predicted_s_expression": "(DISTINCT (AND (JOIN (R P681) (VALUES Q21987503 Q21119012)) (JOIN P31 Q5058355)))", "sparql_attempt_count": 2, "actions": "SELECT DISTINCT ?x WHERE { VALUES ?x0 { wd:Q21987503 wd:Q21119012 } . ?x0 wdt:P681 ?x . ?x wdt:P31 wd:Q5058355 . }"}, {"turnID": "651.73.2", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Single_Relation|Incomplete", "question": "What encodes DNA helicase II    DR_1775 ? [SEP] DNA helicase II    DR_1775 [SEP] What does that nucleic acid sequence encode ? [SEP] DNA helicase II    DR_1775 [SEP] Or class II aminotransferase    DR_2346? [CTX]", "answer": "class II aminotransferase    DR_2346, DNA helicase II    DR_1775", "s_expression": "(OR (AND (JOIN (R P688) Q23187125) (JOIN P31 Q181394)) (AND (JOIN (R P688) Q23188508) (JOIN P31 Q181394)))", "s_expression_cores": ["(AND (JOIN (R P688) Q23187125) (JOIN P31 Q181394))", "(AND (JOIN (R P688) Q23188508) (JOIN P31 Q181394))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q23187125 wdt:P688 ?x . ?x wdt:P31 wd:Q181394 .  } UNION { wd:Q23188508 wdt:P688 ?x . ?x wdt:P31 wd:Q181394 .  } }", "results": ["Q23485882", "Q23485245"], "coreference_resolved_question": "What does class II aminotransferase    DR_2346 encode?", "s_expression_fn": "(OR (AND (JOIN (R encodes) DNA_helicase_II____DR_1775) (JOIN instance_of nutrient)) (AND (JOIN (R encodes) class_II_aminotransferase____DR_2346) (JOIN instance_of nutrient)))", "predicted_s_expression_fn": "(OR (JOIN encoded_by DNA_helicase_II____DR_1775) (JOIN encoded_by class_II_aminotransferase____DR_2346))", "predicted_s_expression": "(OR (JOIN P702 Q23485245) (JOIN P702 Q23188508))", "sparql_attempt_count": 1, "actions": "SELECT ?x WHERE { { ?x wdt:P702 wd:Q23485245 . } UNION { ?x wdt:P702 wd:Q23188508 . } }"}, {"turnID": "651.153.5", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Single_Relation|Incomplete", "question": "Which administrative territory was Lennart Ason born at ? [SEP] Gothenburg [SEP] Which sex does that person belong to ? [SEP] male [SEP] And also Julian Rachlin [CTX]", "answer": "male", "s_expression": "(AND (JOIN (R P21) Q26240385) (JOIN P31 Q290) (JOIN (R P21) Q78796))", "s_expression_cores": ["(AND (JOIN (R P21) Q26240385) (JOIN P31 Q290) (JOIN (R P21) Q78796))"], "sparql_delex": "SELECT ?x WHERE { wd:Q26240385 wdt:P21 ?x . ?x wdt:P31 wd:Q290 .  wd:Q78796 wdt:P21 ?x .  }", "results": ["Q6581097"], "coreference_resolved_question": "Which sex does Julian Rachlin belong to?", "s_expression_fn": "(AND (JOIN (R sex_or_gender) Lennart_Ason) (JOIN instance_of sex) (JOIN (R sex_or_gender) Julian_Rachlin))", "predicted_s_expression_fn": "(AND (JOIN (R sex_or_gender) Lennart_Ason) (JOIN instance_of sex) (JOIN (R sex_or_gender) Julian_Rachlin))", "predicted_s_expression": "(AND (JOIN (R P21) Q26240385) (JOIN P31 Q290) (JOIN (R P21) Q78796))", "sparql_attempt_count": 2, "actions": "SELECT ?x WHERE { wd:Q26240385 wdt:P21 ?x . ?x wdt:P31 wd:Q290 . wd:Q78796 wdt:P21 ?x . }"}, {"turnID": "651.159.4", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Single_Relation", "question": "Which nutrients are the gene that are encoded by tryptophan synthase subunit alpha    HP1277 or putative ferredoxin-type protein    BF4295 ? [CTX]", "answer": "putative ferredoxin-type protein    BF4295, tryptophan synthase subunit alpha    HP1277", "s_expression": "(OR (AND (JOIN P702 Q21629309) (JOIN P31 Q181394)) (AND (JOIN P702 Q23106496) (JOIN P31 Q181394)))", "s_expression_cores": ["(AND (JOIN P702 Q21629309) (JOIN P31 Q181394))", "(AND (JOIN P702 Q23106496) (JOIN P31 Q181394))"], "sparql_delex": "SELECT ?x WHERE { { ?x wdt:P702 wd:Q21629309 . ?x wdt:P31 wd:Q181394 .  } UNION { ?x wdt:P702 wd:Q23106496 . ?x wdt:P31 wd:Q181394 .  } }", "results": ["Q23450848", "Q21632849"], "coreference_resolved_question": "Which nutrients are the gene that are encoded by tryptophan synthase subunit alpha HP1277 or putative ferredoxin-type protein BF4295?", "s_expression_fn": "(OR (AND (JOIN encoded_by tryptophan_synthase_subunit_alpha____HP1277) (JOIN instance_of nutrient)) (AND (JOIN encoded_by putative_ferredoxin-type_protein____BF4295) (JOIN instance_of nutrient)))", "predicted_s_expression_fn": "(OR (AND (JOIN encoded_by tryptophan_synthase_subunit_alpha____HP1277) (JOIN encoded_by putative_ferredoxin-type_protein____BF4295) (JOIN instance_of nutrient))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "651.93.2", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Single_Relation|Incomplete", "question": "Which administrative territory was Rolf Fritzsche born at ? [SEP] Rositz [SEP] Which sex does that person possess ? [SEP] male [SEP] And also Gregg Herken [CTX]", "answer": "male", "s_expression": "(AND (JOIN (R P21) Q1268242) (JOIN P31 Q290) (JOIN (R P21) Q15306023))", "s_expression_cores": ["(AND (JOIN (R P21) Q1268242) (JOIN P31 Q290) (JOIN (R P21) Q15306023))"], "sparql_delex": "SELECT ?x WHERE { wd:Q1268242 wdt:P21 ?x . ?x wdt:P31 wd:Q290 .  wd:Q15306023 wdt:P21 ?x .  }", "results": ["Q6581097"], "coreference_resolved_question": "Which sex does Gregg Herken possess?", "s_expression_fn": "(AND (JOIN (R sex_or_gender) Rolf_Fritzsche) (JOIN instance_of sex) (JOIN (R sex_or_gender) Gregg_Herken))", "predicted_s_expression_fn": "(AND (JOIN (R sex_or_gender) Rolf_Fritzsche) (JOIN instance_of sex) (JOIN (R sex_or_gender) Gregg_Herken))", "predicted_s_expression": "(AND (JOIN (R P21) Q1268242) (JOIN P31 Q290) (JOIN (R P21) Q15306023))", "sparql_attempt_count": 2, "actions": "SELECT ?x WHERE { wd:Q1268242 wdt:P21 ?x . ?x wdt:P31 wd:Q290 . wd:Q15306023 wdt:P21 ?x . }"}, {"turnID": "651.22.2", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Single_Relation|Incomplete", "question": "Where did the demise of Dickie Girling occur ? [SEP] Camden Town [SEP] Which occupation is the profession of that person ? [SEP] association football player [SEP] Or Erhan Kayar? [CTX]", "answer": "association football player", "s_expression": "(OR (AND (JOIN (R P106) Q18748700) (JOIN P31 Q12737077)) (AND (JOIN (R P106) Q6097679) (JOIN P31 Q12737077)))", "s_expression_cores": ["(AND (JOIN (R P106) Q18748700) (JOIN P31 Q12737077))", "(AND (JOIN (R P106) Q6097679) (JOIN P31 Q12737077))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q18748700 wdt:P106 ?x . ?x wdt:P31 wd:Q12737077 .  } UNION { wd:Q6097679 wdt:P106 ?x . ?x wdt:P31 wd:Q12737077 .  } }", "results": ["Q937857"], "coreference_resolved_question": "Which occupation is the profession of Or Erhan Kayar?", "s_expression_fn": "(OR (AND (JOIN (R occupation) Dickie_Girling) (JOIN instance_of occupation)) (AND (JOIN (R occupation) Erhan_Kayar) (JOIN instance_of occupation)))", "predicted_s_expression_fn": "(OR (AND (JOIN (R occupation) Dickie_Girling) (JOIN instance_of profession)) (AND (JOIN (R occupation) Erhan_Kayar) (JOIN instance_of profession))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "651.18.3", "question_type": "Logical Reasoning (All)", "description": "Logical|Difference|Single_Relation", "question": "Which cellular components are components of TGF-beta receptor type-2 but not divalent cation transport protein MGTE ? [CTX]", "answer": "receptor complex, cell surface", "s_expression": "(DIFF (AND (JOIN (R P681) Q14911588) (JOIN P31 Q5058355)) (JOIN (R P681) Q22574700))", "s_expression_cores": ["(AND (JOIN (R P681) Q14911588) (JOIN P31 Q5058355))", "(JOIN (R P681) Q22574700)"], "sparql_delex": "SELECT ?x WHERE { wd:Q14911588 wdt:P681 ?x . ?x wdt:P31 wd:Q5058355 .  FILTER NOT EXISTS { wd:Q22574700 wdt:P681 ?x .  } }", "results": ["Q14877465", "Q189094"], "coreference_resolved_question": "Which cellular components are components of TGF-beta receptor type-2 but not divalent cation transport protein MGTE?", "s_expression_fn": "(DIFF (AND (JOIN (R cell_component) TGF-beta_receptor_type-2) (JOIN instance_of cellular_component)) (JOIN (R cell_component) divalent_cation_transport_protein_MGTE))", "predicted_s_expression_fn": "(DIFF (AND (JOIN (R cell_component) TGF-beta_receptor_type-2) (JOIN instance_of part)) (JOIN (R cell_component) divalent_cation_transport_protein_MGTE))", "predicted_s_expression": "(DIFF (AND (JOIN (R P681) Q14911588) (JOIN P31 Q15989253)) (JOIN (R P681) Q22574700))", "sparql_attempt_count": 2, "actions": "SELECT ?x WHERE { wd:Q14911588 wdt:P681 ?x . ?x wdt:P31 wd:Q15989253 . FILTER NOT EXISTS { wd:Q22574700 wdt:P681 ?x . } }"}, {"turnID": "651.37.5", "question_type": "Logical Reasoning (All)", "description": "Logical|Difference|Multiple_Relation", "question": "Which people have place of birth as Prague and do not have gender of male ? [CTX]", "answer": "Some of them are V\u011bra Kov\u00e1\u0159ov\u00e1, Ludmila Tesa\u0159ov\u00e1, Anna Iblov\u00e1, R\u016f\u017eena Kurzov\u00e1, Blanka \u0160r\u016fmov\u00e1, Vlasta Seifertov\u00e1, Milena H\u00fcbschmannov\u00e1, Angela Stachowa, Catherine of Bohemia, Elli Kafka", "s_expression": "(DIFF (AND (JOIN P19 Q1085) (JOIN P31 Q502895)) (JOIN P21 Q6581097))", "s_expression_cores": ["(AND (JOIN P19 Q1085) (JOIN P31 Q502895))", "(JOIN P21 Q6581097)"], "sparql_delex": "SELECT ?x WHERE { ?x wdt:P19 wd:Q1085 . ?x wdt:P31 wd:Q502895 .  FILTER NOT EXISTS { ?x wdt:P21 wd:Q6581097 .  } }", "results": ["Q6376034", "Q11737390", "Q6376030", "Q6376031", "Q12022048", "Q5646762", "Q1546006", "Q26710217", "Q2360672", "Q15652018", "Q2981008", "Q2825304", "Q12055348", "Q4024794", "Q12042545", "Q10861533", "Q3804807", "Q440827", "Q12034208", "Q1559621", "Q12032930", "Q12025006", "Q15838249", "Q12032933", "Q12035950", "Q3509860", "Q2444587", "Q88141", "Q12050603", "Q2382175", "Q435070", "Q1489624", "Q12023583", "Q22919644", "Q3749396", "Q462642", "Q12029009", "Q5306990", "Q12025003", "Q3576312", "Q12048602", "Q807866", "Q1229175", "Q18616324", "Q12037385", "Q2756373", "Q22916163", "Q6095667", "Q17335109", "Q11878700", "Q8082930", "Q11985187", "Q2900137", "Q12024965", "Q12024960", "Q13403154", "Q12037151", "Q12028939", "Q462654", "Q12039220", "Q12032943", "Q12036274", "Q2952824", "Q18915745", "Q2143375", "Q538014", "Q11985206", "Q12033010", "Q1159239", "Q12049219", "Q26769546", "Q20057840", "Q3501700", "Q10853432", "Q15244357", "Q11753363", "Q274152", "Q459684", "Q3575696", "Q10825959", "Q12058699", "Q3093522", "Q10707034", "Q1527550", "Q23540758", "Q12058696", "Q5929211", "Q5825305", "Q174438", "Q2080287", "Q7368984", "Q11899097", "Q10769730", "Q16938114", "Q13222443", "Q10822051", "Q17467151", "Q2508621", "Q1896786", "Q26209796", "Q12023459", "Q10853729", "Q7513115", "Q12023444", "Q12019421", "Q2748381", "Q12019350", "Q11879929", "Q12023454", "Q12024214", "Q255011", "Q11774167", "Q299394", "Q20799314", "Q12024198", "Q16515400", "Q433598", "Q11774168", "Q524031", "Q17541620", "Q518908", "Q12031500", "Q1229192", "Q3702545", "Q24054894", "Q1901944", "Q20119974", "Q1736237", "Q23460082", "Q16765307", "Q7520201", "Q3849946", "Q12040925", "Q23038095", "Q12031487", "Q10859503", "Q1897464", "Q6696970", "Q12029500", "Q265427", "Q23682766", "Q17541710", "Q10861562", "Q321653", "Q12018948", "Q544077", "Q6558985", "Q12857121", "Q96860", "Q12035615", "Q1572466", "Q12022075", "Q10772682", "Q15074141", "Q19772327", "Q18812399", "Q10859572", "Q16204468", "Q21993922", "Q7940575", "Q5415065", "Q1640475", "Q7386947", "Q11878248", "Q1675647", "Q12035364", "Q5637601", "Q1687122", "Q11347838", "Q6684883", "Q2021049", "Q12034620", "Q27186383", "Q7922492", "Q84459", "Q21013274", "Q220119", "Q7922498", "Q2640954", "Q1896523", "Q10545365", "Q3496279", "Q18006401", "Q12021814", "Q15249858", "Q1449275", "Q12024956", "Q12024951", "Q12024953", "Q12045153", "Q1348958", "Q434662", "Q7312600", "Q429653", "Q11914325", "Q12035505", "Q8506481", "Q18511310", "Q11053325", "Q10825761", "Q12035620", "Q18511335", "Q5004826", "Q524000", "Q12035599", "Q234350", "Q1736624", "Q12027912", "Q16165581", "Q231188", "Q3978428", "Q19363321", "Q12037153", "Q2477177", "Q15639839", "Q10787264", "Q12041031", "Q21034093", "Q1772943", "Q448913", "Q274171", "Q1515604", "Q1546005", "Q433709", "Q448467", "Q513340", "Q16669143", "Q15734992", "Q12001750", "Q12035375", "Q15081075", "Q12035470", "Q6981054", "Q6203598", "Q15980431", "Q433564", "Q6763004", "Q12035921", "Q10769218", "Q17505074", "Q21528914", "Q12023399", "Q12057735", "Q15208339", "Q3651411", "Q6203302", "Q462435", "Q86289", "Q447320", "Q3490643", "Q299655", "Q2624849", "Q12037382", "Q2908430", "Q4739420", "Q3320757", "Q12025022", "Q17341497", "Q12025021", "Q3505635", "Q2553281", "Q12042554", "Q9355523", "Q276605", "Q26835656", "Q5646751", "Q1717368", "Q2052957", "Q271731", "Q26225485", "Q22280192", "Q10816113", "Q3506732", "Q15358895", "Q26932957", "Q168926", "Q453902", "Q12023564", "Q26251927", "Q17578091", "Q440954", "Q12002441", "Q261905", "Q21150758", "Q91034", "Q87883", "Q11878300", "Q12029496", "Q12001663", "Q13537295", "Q254322", "Q12035609", "Q12028816", "Q3453618", "Q12028951", "Q12028952", "Q5415145", "Q12028957", "Q12028956", "Q12034874", "Q513014", "Q12037372", "Q12037375", "Q12037374", "Q12022062", "Q12050798", "Q3565083", "Q12024963", "Q11774172", "Q77456", "Q12035626", "Q537960", "Q2143289", "Q272178", "Q12040413", "Q3510131", "Q1152129", "Q3065606", "Q20641096", "Q26720083", "Q323019", "Q1333427", "Q26873926", "Q19932748", "Q887949", "Q11985173", "Q2404684", "Q11052606", "Q3501323", "Q12036667", "Q12024199", "Q21634595", "Q12044390", "Q4259306", "Q450663", "Q19602162", "Q470233", "Q12024196", "Q12021631", "Q1683534", "Q195520", "Q537244", "Q6438505", "Q21710744", "Q21514989", "Q1236374", "Q20993737", "Q1411643", "Q512478", "Q10819170", "Q6203596", "Q4101170", "Q12042552", "Q3806972", "Q11985200", "Q3806971", "Q3806976", "Q881528", "Q12058709", "Q12058708", "Q12058707", "Q21725073", "Q12058703", "Q3508117", "Q12058700", "Q7922503", "Q13365697", "Q1887907", "Q12044393", "Q12019433", "Q12019430", "Q11774174", "Q12019341", "Q7960818", "Q469981", "Q3179286", "Q19663348", "Q25863917", "Q393385", "Q1309691", "Q12051406", "Q19800667", "Q3014906", "Q436695", "Q11081098", "Q12044361", "Q12035501", "Q23698031", "Q7659540", "Q18523933", "Q11219898", "Q25863323", "Q2613448", "Q11914107", "Q10861543", "Q21777900", "Q12058028", "Q21064124", "Q11583", "Q271728", "Q12049218", "Q10769543", "Q903640", "Q231241", "Q6835630", "Q3023282", "Q6153486", "Q1499042", "Q4025025", "Q181615", "Q3471919", "Q206146", "Q7599083", "Q2569624", "Q19829696", "Q19941586", "Q10713318", "Q6150537", "Q2385877", "Q12036224", "Q159693", "Q12033751", "Q3498617", "Q12018950", "Q1607168", "Q10857465", "Q18006483", "Q5400967", "Q2649555", "Q1261823", "Q12035668", "Q1370117", "Q1332115", "Q21198025", "Q3495263", "Q3366290", "Q21685593", "Q6837185", "Q3424692", "Q15726902", "Q1337981", "Q16648578", "Q445900", "Q231231", "Q3443800", "Q26076303", "Q19301281", "Q20057764", "Q155473", "Q519102", "Q6564282", "Q11985130", "Q12045135", "Q81502", "Q12026918", "Q23891734", "Q3735121", "Q528612", "Q17335127", "Q160711", "Q1930072", "Q766584", "Q12021803", "Q11158480", "Q16938149", "Q12021806", "Q11774250", "Q11816037", "Q12011160", "Q440857", "Q3565615", "Q19833641", "Q6421592", "Q12024944", "Q11775035", "Q1787190", "Q2419596", "Q12058697", "Q7178671", "Q621428", "Q6542804", "Q15707399", "Q15710572", "Q9256520", "Q24204608", "Q12023406", "Q10776455", "Q77589", "Q394727", "Q10853455", "Q4010205", "Q22138391", "Q468412", "Q269565", "Q12037147", "Q1314939", "Q214381", "Q21034088", "Q21034089", "Q15429683", "Q448921", "Q10857452", "Q274168", "Q16938132", "Q16938135", "Q16938136", "Q12018004", "Q6068811", "Q12035366", "Q12040950", "Q12055528", "Q766082", "Q12018003", "Q10819343", "Q11871282", "Q12035406", "Q16407699", "Q20428113", "Q11158533", "Q2177651", "Q5214851", "Q16627675", "Q13365010", "Q4716131", "Q9348786", "Q15730010", "Q17328932", "Q459614", "Q21130399", "Q185590", "Q15838325", "Q12040461", "Q3023005", "Q19829909", "Q22303323", "Q269367", "Q65533", "Q10981250", "Q513248", "Q22254912", "Q459913", "Q12024761", "Q9368204", "Q10819323", "Q13217199", "Q23068440", "Q265460", "Q10857838", "Q15870693", "Q469609", "Q15064717", "Q10857830", "Q11158546", "Q12035496", "Q17277777", "Q235968", "Q168914", "Q25936249", "Q168916", "Q21777897", "Q168918", "Q27055703", "Q12035622", "Q11774056", "Q22226615", "Q12029488", "Q21150740", "Q11879975", "Q3489726", "Q1379292", "Q12042536", "Q5359255", "Q12028941", "Q12028946", "Q1735837", "Q12028944", "Q440694", "Q4895412", "Q12025748", "Q10820087", "Q12042547", "Q267884", "Q613530", "Q12042540", "Q11257704", "Q12022054", "Q10859459", "Q11903396", "Q438608", "Q12035381", "Q4507023", "Q10861351", "Q815772", "Q3061251", "Q5987046", "Q803954", "Q7472854", "Q11985143", "Q19420805", "Q8075470", "Q12034157", "Q12024212", "Q10713418", "Q15436808", "Q21936841", "Q3506276", "Q12025004", "Q539120", "Q3308601", "Q512501", "Q12019422", "Q17227470", "Q12024216", "Q20962184", "Q11878748", "Q2418631", "Q204733", "Q1944562", "Q11052685", "Q529306", "Q26734733", "Q11052724", "Q3506573", "Q16515434", "Q12058710", "Q12035915", "Q12001791", "Q12058715", "Q12035910", "Q12058719", "Q235487", "Q7155759", "Q18692967", "Q16516264", "Q17395619", "Q8182828", "Q10853468", "Q3189262", "Q10769307", "Q1083779", "Q12023573", "Q12054279", "Q2018643", "Q12023477", "Q12019406", "Q10826679", "Q12019404", "Q12023473", "Q12023470", "Q20128270", "Q19810489", "Q19689996", "Q26694993", "Q6698919", "Q16215872", "Q18114435", "Q3162780", "Q12036660", "Q11878298", "Q12034875", "Q17516244", "Q89478", "Q3610819", "Q10826130", "Q17351987", "Q12038569", "Q17399632", "Q533346", "Q110249", "Q1509387", "Q12023467", "Q12038567", "Q446713", "Q54545", "Q12856927", "Q12035450", "Q3366604", "Q12035456", "Q12019002", "Q8075471", "Q26281704", "Q165086", "Q15124323", "Q16228232", "Q11881187", "Q19602747", "Q2216272", "Q1687045", "Q547793", "Q18456", "Q547592", "Q1957040", "Q21820010", "Q25963393", "Q433811", "Q25713027", "Q20086403", "Q5222686", "Q3417073", "Q13434596", "Q769378", "Q3161825", "Q12050051", "Q3512054", "Q544058", "Q16725789", "Q18642667", "Q5646775", "Q3594325", "Q6449856", "Q22979222", "Q20428264", "Q170202", "Q12035606", "Q24069265", "Q18915309", "Q17266986", "Q495055", "Q12034218", "Q12031504", "Q12032925", "Q7940542", "Q3238136", "Q15829902", "Q20057774", "Q11881153", "Q5331848", "Q1672465", "Q10823043", "Q1937900", "Q13638354", "Q85683", "Q18113973", "Q17375900", "Q20851701", "Q3194005", "Q21296254", "Q3443242", "Q12042537", "Q4938248", "Q5086094", "Q6763419", "Q12042531", "Q17537132", "Q12058875", "Q8082927", "Q20678835", "Q2419605", "Q12042538", "Q21600811", "Q15303847", "Q459692", "Q3901020", "Q1824964", "Q2224214", "Q5338471", "Q12033009", "Q12023438", "Q12049227", "Q12033416", "Q12023395", "Q266991", "Q12035419", "Q12023435", "Q18042588", "Q4141161", "Q4297895", "Q1659033", "Q11880013", "Q11892468", "Q14435159", "Q6756285", "Q26720839", "Q455170", "Q10371677", "Q3510287", "Q12023453", "Q3510461", "Q22298418", "Q11878252", "Q657441", "Q12017742", "Q11879872", "Q12023568", "Q12043938", "Q7807963", "Q12034170", "Q1900652", "Q433722", "Q12058717", "Q3265306", "Q12035418", "Q1672475", "Q290996", "Q12034176", "Q10721001", "Q14541736", "Q12058725", "Q15057916", "Q1233829", "Q1490596", "Q14435324", "Q7922529", "Q3509554", "Q12057805", "Q12024203", "Q12024205", "Q12024204", "Q3501542", "Q14789835", "Q10769498", "Q1805947", "Q15956720", "Q3362606", "Q1825894", "Q26898267", "Q5331945", "Q1905404", "Q15027868", "Q12025009", "Q11706466", "Q18915949", "Q2080297", "Q12001943", "Q6774435", "Q10854338", "Q10861561", "Q12029491", "Q537488", "Q17328913", "Q12034156", "Q15839320", "Q539000", "Q137646", "Q453630", "Q435122", "Q4776278", "Q20852613", "Q18190973", "Q1372966", "Q95836", "Q11132273", "Q10859086", "Q6873344", "Q17399671", "Q3511775", "Q12023479", "Q6150558", "Q454724", "Q18003204", "Q258960", "Q3782949", "Q11066671", "Q528811", "Q6762990", "Q21534475", "Q12035607", "Q3490004", "Q2576149", "Q12035603", "Q15074156", "Q15074155", "Q15711136", "Q3892882", "Q12023478", "Q10826837", "Q1341911", "Q515774", "Q111170", "Q19509482", "Q446475", "Q288578", "Q1282578", "Q2377467", "Q12039219", "Q229503", "Q26197772", "Q10723775", "Q240803", "Q11985151", "Q8072970", "Q6203607", "Q12762064", "Q12058898", "Q23030415", "Q11132311", "Q291086", "Q15735078", "Q6771554", "Q2441969", "Q5415052", "Q5415199", "Q3804819", "Q12369771", "Q20860071", "Q5415195", "Q512517", "Q1776655", "Q11878749", "Q24017684", "Q16765173", "Q14329578", "Q1243587", "Q19507833", "Q2083443", "Q16161479", "Q10769368", "Q7396399", "Q12058430", "Q229151", "Q12040462", "Q12035510", "Q22815749", "Q10826760", "Q12035365", "Q12034189", "Q455183", "Q10826404", "Q16161616", "Q63556", "Q12019413", "Q3047617", "Q4168159", "Q12050799", "Q12019003", "Q12019419", "Q17353118", "Q25391315", "Q216064", "Q11774054", "Q11774052", "Q90440", "Q12041008", "Q12028967", "Q11878260", "Q88709", "Q12042553", "Q18812255", "Q5195567", "Q15208261", "Q3295704", "Q24843257", "Q3229474", "Q6774130", "Q86208", "Q18042820", "Q12021501", "Q7940790", "Q7690553", "Q1472757", "Q89885", "Q12035342", "Q12038577", "Q23072395", "Q21044477", "Q18543406", "Q163551", "Q7944993", "Q242214", "Q7944995", "Q47085", "Q12035469", "Q12023576", "Q21176915", "Q434935", "Q988857", "Q5646782", "Q7940704", "Q547767", "Q24639765", "Q1163375", "Q1901945", "Q12424417", "Q15290780", "Q26678489", "Q234893", "Q12035904", "Q238233"], "coreference_resolved_question": "Which people have place of birth as Prague and do not have gender of male?", "s_expression_fn": "(DIFF (AND (JOIN place_of_birth Prague) (JOIN instance_of common_name)) (JOIN sex_or_gender male))", "predicted_s_expression_fn": "(DIFF (AND (JOIN place_of_birth Prague) (JOIN instance_of common_name)) (AND (JOIN sex_or_gender male) (JOIN instance_of common_name)))", "predicted_s_expression": "", "sparql_attempt_count": 1, "actions": ""}, {"turnID": "1537.9.8", "question_type": "Logical Reasoning (All)", "description": "Logical|Difference|Multiple_Relation", "question": "Which people have Page as family name and do n't have nationality of United States of America ? [CTX]", "answer": "Michael Page, George A. Page Jr., Joanna Page, John Page, Alec Page, Perren Page, Robert Page, Pierre-Andr\u00e9 Page, Anthony Page", "s_expression": "(DIFF (AND (JOIN P734 Q13563379) (JOIN P31 Q502895)) (JOIN P27 Q30))", "s_expression_cores": ["(AND (JOIN P734 Q13563379) (JOIN P31 Q502895))", "(JOIN P27 Q30)"], "sparql_delex": "SELECT ?x WHERE { ?x wdt:P734 wd:Q13563379 . ?x wdt:P31 wd:Q502895 .  FILTER NOT EXISTS { ?x wdt:P27 wd:Q30 .  } }", "results": ["Q6833334", "Q19768191", "Q467749", "Q25711434", "Q4714235", "Q22673511", "Q7348257", "Q21170951", "Q573730"], "coreference_resolved_question": "Which people have Page as family name and don't have nationality of United States of America?", "s_expression_fn": "(DIFF (AND (JOIN family_name Page) (JOIN instance_of common_name)) (JOIN country_of_citizenship United_States_of_America))", "predicted_s_expression_fn": "(DIFF (AND (JOIN family_name Page) (JOIN instance_of common_name)) (AND (JOIN country_of_citizenship United_States_of_America) (JOIN instance_of common_name)))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "1537.21.5", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Single_Relation|Incomplete", "question": "Whose notable work was association football player ? [SEP] Hugh Morgan-Owen [SEP] Where was that person educated ? [SEP] University of Oxford [SEP] Or Eyre Massey Shaw? [CTX]", "answer": "Trinity College Dublin, University of Oxford", "s_expression": "(OR (AND (JOIN (R P69) Q23047441) (JOIN P31 Q3918)) (AND (JOIN (R P69) Q5422991) (JOIN P31 Q3918)))", "s_expression_cores": ["(AND (JOIN (R P69) Q23047441) (JOIN P31 Q3918))", "(AND (JOIN (R P69) Q5422991) (JOIN P31 Q3918))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q23047441 wdt:P69 ?x . ?x wdt:P31 wd:Q3918 .  } UNION { wd:Q5422991 wdt:P69 ?x . ?x wdt:P31 wd:Q3918 .  } }", "results": ["Q258464", "Q34433"], "coreference_resolved_question": "Where was Eyre Massey Shaw educated?", "s_expression_fn": "(OR (AND (JOIN (R educated_at) Hugh_Morgan-Owen) (JOIN instance_of university)) (AND (JOIN (R educated_at) Eyre_Massey_Shaw) (JOIN instance_of university)))", "predicted_s_expression_fn": "(OR (JOIN (R educated_at) Hugh_Morgan-Owen) (JOIN (R educated_at) Eyre_Massey_Shaw))", "predicted_s_expression": "(OR (JOIN (R P69) Q23047441) (JOIN (R P69) Q5422991))", "sparql_attempt_count": 1, "actions": "SELECT ?x WHERE { { wd:Q23047441 wdt:P69 ?x . } UNION { wd:Q5422991 wdt:P69 ?x . } }"}, {"turnID": "1537.42.2", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Single_Relation|Incomplete", "question": "Which sex does Horst K\u00f6rner have ? [SEP] male [SEP] And also Povl S\u00f8ndergaard [CTX]", "answer": "male", "s_expression": "(AND (JOIN (R P21) Q1532529) (JOIN P31 Q290) (JOIN (R P21) Q7235902))", "s_expression_cores": ["(AND (JOIN (R P21) Q1532529) (JOIN P31 Q290) (JOIN (R P21) Q7235902))"], "sparql_delex": "SELECT ?x WHERE { wd:Q1532529 wdt:P21 ?x . ?x wdt:P31 wd:Q290 .  wd:Q7235902 wdt:P21 ?x .  }", "results": ["Q6581097"], "coreference_resolved_question": "Which sex does Povl S\u00f8ndergaard have?", "s_expression_fn": "(AND (JOIN (R sex_or_gender) Horst_K\u00f6rner) (JOIN instance_of sex) (JOIN (R sex_or_gender) Povl_S\u00f8ndergaard))", "predicted_s_expression_fn": "(AND (JOIN (R sex_or_gender) Horst_K\u00f6rner) (JOIN (R sex_or_gender) Povl_S\u00f8ndergaard))", "predicted_s_expression": "(AND (JOIN (R P21) Q1532529) (JOIN (R P21) Q7235902))", "sparql_attempt_count": 1, "actions": "SELECT ?x WHERE { wd:Q1532529 wdt:P21 ?x . wd:Q7235902 wdt:P21 ?x . }"}, {"turnID": "1537.44.2", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Single_Relation|Incomplete", "question": "Who directed Jeena Hai Toh Thok Daal ? [SEP] Manish Vatsalya [SEP] Which administrative territory is the country of citizenship of that person ? [SEP] India [SEP] Or Ahmed Ali Butt? [CTX]", "answer": "Pakistan, India", "s_expression": "(OR (AND (JOIN (R P27) Q6749899) (JOIN P31 Q15617994)) (AND (JOIN (R P27) Q4695744) (JOIN P31 Q15617994)))", "s_expression_cores": ["(AND (JOIN (R P27) Q6749899) (JOIN P31 Q15617994))", "(AND (JOIN (R P27) Q4695744) (JOIN P31 Q15617994))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q6749899 wdt:P27 ?x . ?x wdt:P31 wd:Q15617994 .  } UNION { wd:Q4695744 wdt:P27 ?x . ?x wdt:P31 wd:Q15617994 .  } }", "results": ["Q843", "Q668"], "coreference_resolved_question": "Which administrative territory is the country of citizenship of Ahmed Ali Butt?", "s_expression_fn": "(OR (AND (JOIN (R country_of_citizenship) Manish_Vatsalya) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (AND (JOIN (R country_of_citizenship) Ahmed_Ali_Butt) (JOIN instance_of designation_for_an_administrative_territorial_entity)))", "predicted_s_expression_fn": "(OR (AND (JOIN (R country_of_citizenship) Manish_Vatsalya) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (AND (JOIN (R country_of_citizenship) Ahmed_Ali_Butt) (JOIN instance_of designation_for_an_administrative_territorial_entity))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "1018.72.3", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Single_Relation|Incomplete", "question": "Where is hypothetical protein    spr1422 found ? [SEP] Streptococcus pneumoniae R6 [SEP] And also glutamyl aminopeptidase    spr1682 [CTX]", "answer": "Streptococcus pneumoniae R6", "s_expression": "(AND (JOIN (R P703) Q23496067) (JOIN P31 Q631147) (JOIN (R P703) Q23495248))", "s_expression_cores": ["(AND (JOIN (R P703) Q23496067) (JOIN P31 Q631147) (JOIN (R P703) Q23495248))"], "sparql_delex": "SELECT ?x WHERE { wd:Q23496067 wdt:P703 ?x . ?x wdt:P31 wd:Q631147 .  wd:Q23495248 wdt:P703 ?x .  }", "results": ["Q21102963"], "coreference_resolved_question": "Where is glutamyl aminopeptidase    spr1682 found?", "s_expression_fn": "(AND (JOIN (R found_in_taxon) hypothetical_protein____spr1422) (JOIN instance_of infraspecific_name) (JOIN (R found_in_taxon) glutamyl_aminopeptidase____spr1682))", "predicted_s_expression_fn": "(AND (JOIN (R found_in_taxon) glutamyl_aminopeptidase____spr1682) (JOIN instance_of taxon))", "predicted_s_expression": "(AND (JOIN (R P703) Q23229906) (JOIN P31 Q631147))", "sparql_attempt_count": 2, "actions": "SELECT ?x WHERE { wd:Q23229906 wdt:P703 ?x . ?x wdt:P31 wd:Q631147 . }"}, {"turnID": "1018.105.8", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Multiple_Relation", "question": "Which political territories have diplomatic relationships with Germany and do Augustin von Kardorff belong to ? [CTX]", "answer": "Denmark", "s_expression": "(AND (JOIN (R P530) Q183) (JOIN P31 Q1048835) (JOIN (R P27) Q12302489))", "s_expression_cores": ["(AND (JOIN (R P530) Q183) (JOIN P31 Q1048835) (JOIN (R P27) Q12302489))"], "sparql_delex": "SELECT ?x WHERE { wd:Q183 wdt:P530 ?x . ?x wdt:P31 wd:Q1048835 .  wd:Q12302489 wdt:P27 ?x .  }", "results": ["Q35"], "coreference_resolved_question": "Which political territories have diplomatic relationships with Germany and does Augustin von Kardorff belong to?", "s_expression_fn": "(AND (JOIN (R diplomatic_relation) Germany) (JOIN instance_of political_territorial_entity) (JOIN (R country_of_citizenship) Augustin_von_Kardorff))", "predicted_s_expression_fn": "(AND (JOIN diplomatic_relation Germany) (JOIN (R country_of_citizenship) Augustin_von_Kardorff) (JOIN instance_of political_territorial_entity))", "predicted_s_expression": "(AND (JOIN P530 Q183) (JOIN (R P27) Q12302489) (JOIN P31 Q1048835))", "sparql_attempt_count": 2, "actions": "SELECT ?x WHERE { ?x wdt:P530 wd:Q183 . wd:Q12302489 wdt:P27 ?x . ?x wdt:P31 wd:Q1048835 . }"}, {"turnID": "375.55.7", "question_type": "Logical Reasoning (All)", "description": "Logical|Difference|Multiple_Relation", "question": "Which administrative territories holds diplomatic relationship with Germany and are not Tar-Vabriga present in ? [CTX]", "answer": "Some of them are Togo, Paraguay, Norway, Egypt, North Korea, India, Tunisia, Madagascar, Costa Rica, Bolivia", "s_expression": "(DIFF (AND (JOIN (R P530) Q183) (JOIN P31 Q15617994)) (JOIN (R P17) Q1277256))", "s_expression_cores": ["(AND (JOIN (R P530) Q183) (JOIN P31 Q15617994))", "(JOIN (R P17) Q1277256)"], "sparql_delex": "SELECT ?x WHERE { wd:Q183 wdt:P530 ?x . ?x wdt:P31 wd:Q15617994 .  FILTER NOT EXISTS { wd:Q1277256 wdt:P17 ?x .  } }", "results": ["Q804", "Q801", "Q800", "Q419", "Q668", "Q414", "Q142", "Q55", "Q145", "Q262", "Q148", "Q783", "Q265", "Q833", "Q711", "Q717", "Q252", "Q403", "Q657", "Q258", "Q45", "Q159", "Q43", "Q41", "Q155", "Q796", "Q794", "Q954", "Q889", "Q884", "Q958", "Q881", "Q739", "Q241", "Q242", "Q811", "Q33", "Q32", "Q31", "Q30", "Q924", "Q36", "Q34", "Q929", "Q39", "Q38", "Q986", "Q423", "Q983", "Q851", "Q733", "Q734", "Q736", "Q730", "Q230", "Q232", "Q233", "Q238", "Q20", "Q1045", "Q1041", "Q27", "Q28", "Q29", "Q1049", "Q189", "Q843", "Q184", "Q1029", "Q1028", "Q786", "Q347", "Q227", "Q225", "Q222", "Q96", "Q229", "Q228", "Q17", "Q902", "Q1036", "Q1037", "Q1008", "Q1032", "Q1033", "Q1030", "Q965", "Q967", "Q962", "Q963", "Q298", "Q115", "Q114", "Q117", "Q750", "Q212", "Q213", "Q217", "Q214", "Q215", "Q218", "Q219", "Q912", "Q917", "Q916", "Q1007", "Q1006", "Q1005", "Q1009", "Q974", "Q971", "Q79", "Q77", "Q878", "Q774", "Q948", "Q810", "Q1019", "Q1016", "Q1011", "Q945", "Q869", "Q953"], "coreference_resolved_question": "Which administrative territories hold diplomatic relationship with Germany and are not Tar-Vabriga present in?", "s_expression_fn": "(DIFF (AND (JOIN (R diplomatic_relation) Germany) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (JOIN (R country) Tar-Vabriga))", "predicted_s_expression_fn": "(DIFF (AND (JOIN diplomatic_relation Germany) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (JOIN (R present_in) Tar-Vabriga))", "predicted_s_expression": "(DIFF (AND (JOIN P530 Q183) (JOIN P31 Q15617994)) (JOIN (R P1441) Q1277256))", "sparql_attempt_count": 2, "actions": "SELECT ?x WHERE { ?x wdt:P530 wd:Q183 . ?x wdt:P31 wd:Q15617994 . FILTER NOT EXISTS { wd:Q1277256 wdt:P1441 ?x . } }"}, {"turnID": "375.41.2", "question_type": "Logical Reasoning (All)", "description": "Logical|Difference|Single_Relation|Incomplete", "question": "Which human settlement was Otto Ehrenfried Ehlers born at ? [SEP] Hamburg [SEP] Which organizations have their head office location at that human settlement ? [SEP] Gruner + Jahr, Experian, Deutsche Werft [SEP] But not Dublin [CTX]", "answer": "Some of them are Rudolf von Beckerath Orgelbau, Steria, Nordex SE, Goodgame Studios, Praktiker, Lotto24, Gamigo AG, Iglo, HHLA, Evotec", "s_expression": "(DIFF (AND (JOIN P159 Q1055) (JOIN P31 Q43229)) (JOIN P159 Q1761))", "s_expression_cores": ["(AND (JOIN P159 Q1055) (JOIN P31 Q43229))", "(JOIN P159 Q1761)"], "sparql_delex": "SELECT ?x WHERE { ?x wdt:P159 wd:Q1055 . ?x wdt:P31 wd:Q43229 .  FILTER NOT EXISTS { ?x wdt:P159 wd:Q1761 .  } }", "results": ["Q1205205", "Q457241", "Q1613540", "Q1805040", "Q617425", "Q2420728", "Q445331", "Q1486164", "Q5244167", "Q316438", "Q1914459", "Q564159", "Q4646467", "Q181192", "Q819641", "Q5628631", "Q832811", "Q889392", "Q551068", "Q870123", "Q1544765", "Q5644305", "Q320430", "Q1552142", "Q477459", "Q1239746", "Q22674528", "Q701755", "Q2509637", "Q2408854", "Q834324", "Q17148182", "Q476185", "Q1902412", "Q568913", "Q2050659", "Q1823289", "Q812813", "Q459544", "Q317513", "Q1382629", "Q18059901", "Q1424136", "Q1890510", "Q1521990", "Q1564563", "Q2263518", "Q1670924", "Q2698092", "Q790214", "Q565047", "Q896916", "Q443211", "Q833296", "Q7157960", "Q1983678", "Q20659273", "Q820588", "Q174891", "Q5513677", "Q184997", "Q1562700", "Q858167", "Q465340", "Q564213", "Q6442", "Q884575", "Q1501972", "Q1537551", "Q571036", "Q26821458", "Q321786", "Q470412", "Q5675024", "Q881516", "Q204914", "Q1790744", "Q834282", "Q460206", "Q15813040", "Q4782902", "Q452720", "Q571206", "Q4041468", "Q565050", "Q15790713", "Q2264100", "Q5420391", "Q464676", "Q18636314", "Q1430331", "Q15264465", "Q5533852", "Q2248698", "Q1276871", "Q883523", "Q7865623", "Q882326", "Q892852", "Q1202400", "Q680214", "Q315341", "Q670792", "Q1436034", "Q1565979", "Q1205242", "Q699413", "Q826106", "Q481536", "Q266805", "Q1039316", "Q2383552", "Q16834027", "Q704874", "Q2031232", "Q1572939", "Q554198", "Q457043", "Q5637158", "Q1099394", "Q457822", "Q486013", "Q2110449", "Q2313915", "Q474215", "Q4918911", "Q26753816", "Q319358", "Q819015", "Q571700", "Q142691", "Q1234632", "Q2289460", "Q1156167", "Q2285066", "Q880703", "Q1025307", "Q1341765", "Q2155345", "Q15792263", "Q1420368", "Q251269", "Q686292", "Q879808", "Q156391"], "coreference_resolved_question": "Which organizations have their head office location at Hamburg?", "s_expression_fn": "(DIFF (AND (JOIN headquarters_location Hamburg) (JOIN instance_of organization)) (JOIN headquarters_location Dublin))", "predicted_s_expression_fn": "(DIFF (AND (JOIN (R headquarters_location) Hamburg) (JOIN instance_of organization)) (JOIN (R headquarters_location) Dublin))", "predicted_s_expression": "(DIFF (AND (JOIN P159 Q1055) (JOIN P31 Q43229)) (JOIN (R P159) Q1761))", "sparql_attempt_count": 3, "actions": "SELECT ?x WHERE { ?x wdt:P159 wd:Q1055 . ?x wdt:P31 wd:Q43229 . FILTER NOT EXISTS { wd:Q1761 wdt:P159 ?x . } }"}, {"turnID": "375.137.2", "question_type": "Logical Reasoning (All)", "description": "Logical|Difference|Multiple_Relation", "question": "Which people had heart failure as the cause of death and are not linked with association football ? [CTX]", "answer": "Some of them are Justine Johnstone, William Ching, Wild Man Fischer, Benjamin Britten, Belita Woods, John Henry Devereux, Claire Malis, Ed Koch, Hermann Merkin, Mounet Satomi", "s_expression": "(DIFF (AND (JOIN P509 Q181754) (JOIN P31 Q502895)) (JOIN P641 Q2736))", "s_expression_cores": ["(AND (JOIN P509 Q181754) (JOIN P31 Q502895))", "(JOIN P641 Q2736)"], "sparql_delex": "SELECT ?x WHERE { ?x wdt:P509 wd:Q181754 . ?x wdt:P31 wd:Q502895 .  FILTER NOT EXISTS { ?x wdt:P641 wd:Q2736 .  } }", "results": ["Q11454713", "Q451830", "Q11461045", "Q2313270", "Q6197387", "Q100989", "Q4798779", "Q236708", "Q499583", "Q271963", "Q313525", "Q271526", "Q1520488", "Q21585595", "Q6238789", "Q648366", "Q1452797", "Q4704849", "Q326157", "Q3290488", "Q1797226", "Q348979", "Q5989294", "Q4882948", "Q539596", "Q232245", "Q462629", "Q467122", "Q24027089", "Q181407", "Q157777", "Q2496", "Q151040", "Q240534", "Q16019816", "Q1452899", "Q511124", "Q1805782", "Q1146351", "Q9916", "Q3143375", "Q1078468", "Q236914", "Q11572383", "Q367129", "Q112307", "Q7519259", "Q1386097", "Q16018786", "Q602302", "Q272383", "Q276216", "Q6075055", "Q59729", "Q561666", "Q442374", "Q182455", "Q6223155", "Q1738832", "Q1035", "Q6195738", "Q132524", "Q15977312", "Q5677370", "Q505831", "Q859504", "Q16016466", "Q6498719", "Q186492", "Q462656", "Q982401", "Q342774", "Q5478721", "Q2748374", "Q5950", "Q104148", "Q3470468", "Q82409", "Q2604", "Q1355209", "Q3005290", "Q231923", "Q34189", "Q85918", "Q5549731", "Q543693", "Q11383642", "Q6304512", "Q4164765", "Q540244", "Q454708", "Q6186023", "Q3039327", "Q108597", "Q4678235", "Q2414258", "Q16491211", "Q5273483", "Q204523", "Q558149", "Q210285", "Q23794601", "Q3293960", "Q607935", "Q5298245", "Q2561138", "Q5302017", "Q200131", "Q489540", "Q5490012", "Q345182", "Q3486418", "Q186359", "Q1017087", "Q78983", "Q794637", "Q2655002", "Q5577", "Q118447", "Q5171541", "Q14594727", "Q16014451", "Q312657", "Q6213323", "Q2341356", "Q316202", "Q506401", "Q401864", "Q5732864", "Q15442474", "Q150767", "Q955307", "Q347473", "Q526106", "Q6197328", "Q1403472", "Q35286", "Q3807076", "Q61108", "Q15993485", "Q1249298", "Q450022", "Q16856016", "Q2342184", "Q560770", "Q13015173", "Q5531454", "Q2389215", "Q446984", "Q4714639", "Q558368", "Q19899749", "Q1471618", "Q557185", "Q1680621", "Q350704", "Q55796", "Q5326138", "Q434889", "Q6261322", "Q3565843", "Q5125255", "Q7940510", "Q11644640", "Q1797523", "Q310775", "Q131004", "Q3528672", "Q74973", "Q15992793", "Q80760", "Q11449903", "Q1444495", "Q5920045", "Q546592", "Q6254432", "Q63071", "Q5498756", "Q456979", "Q365633", "Q5095186", "Q710695", "Q1856944", "Q462465", "Q123371", "Q34453", "Q313400", "Q540874", "Q4722601", "Q104183", "Q15452052", "Q5660394", "Q63189", "Q3791180", "Q2291028", "Q436209", "Q5042394", "Q963893", "Q11569763", "Q1127623", "Q191716", "Q36789", "Q4768460", "Q3109976", "Q311317", "Q5293939", "Q390768", "Q3568502", "Q7350771", "Q2551656", "Q254748", "Q2757537", "Q330621", "Q455313", "Q309643", "Q3229669", "Q321978", "Q16014418", "Q537722", "Q382406", "Q4133063", "Q4912656", "Q432562", "Q202470", "Q5081434", "Q5366530", "Q7314", "Q1356064", "Q7342065", "Q4207699", "Q11820", "Q23068265", "Q319867", "Q11369432", "Q15451712", "Q319648", "Q17287343", "Q529258", "Q349346", "Q363371", "Q53031", "Q1333051", "Q2152423", "Q271931", "Q5097140", "Q101764", "Q465474", "Q2681113", "Q3142946", "Q2648565", "Q16019790", "Q34851", "Q337145", "Q294555", "Q4888822", "Q16043538", "Q4115951", "Q103774", "Q162389", "Q1064202", "Q220520", "Q5086041", "Q442628", "Q23481", "Q4953905", "Q106514", "Q445429", "Q554577", "Q854908", "Q52642", "Q1956823", "Q84412", "Q63152", "Q444180", "Q280229", "Q40701", "Q433459", "Q504901", "Q1052458", "Q5289582", "Q11359307", "Q2614411", "Q6390517", "Q1508648", "Q11648912", "Q4710253", "Q1687883", "Q1691652", "Q456907", "Q4796826", "Q5550767", "Q333595", "Q34474", "Q5995654", "Q649899", "Q1737377", "Q4973520", "Q2481925", "Q4984910", "Q1977003", "Q234604", "Q6312422", "Q712817", "Q3436512", "Q3517020", "Q718617", "Q311719", "Q1160785", "Q273056", "Q467364", "Q80440", "Q3807004", "Q3811608", "Q3181785", "Q374960", "Q41136", "Q6260345", "Q78931", "Q472487", "Q5772497", "Q16090881", "Q16017773", "Q449664", "Q3486426", "Q8209261", "Q2149299", "Q16013350", "Q80596", "Q178250", "Q1677123", "Q289631", "Q2452898", "Q6137013", "Q979084", "Q16019801"], "coreference_resolved_question": "Which people had heart failure as the cause of death and are not linked with association football?", "s_expression_fn": "(DIFF (AND (JOIN cause_of_death heart_failure) (JOIN instance_of common_name)) (JOIN sport association_football))", "predicted_s_expression_fn": "(DIFF (AND (JOIN cause_of_death heart_failure) (JOIN instance_of common_name)) (AND (JOIN sports_discipline_competed_in association_football) (JOIN instance_of common_name)))", "predicted_s_expression": "", "sparql_attempt_count": 1, "actions": ""}, {"turnID": "375.1.2", "question_type": "Logical Reasoning (All)", "description": "Logical|Difference|Single_Relation", "question": "Which people works for Princeton University but not King's College London ? [CTX]", "answer": "Some of them are Jason W. Fleischer, Sigmund Spaeth, Vincanne Adams, Ruth Kl\u00fcger, Rudolf Ladenburg, Frederic Mishkin, Anthony Branker, Emil Artin, Peter Meineck, Kwame Anthony Appiah", "s_expression": "(DIFF (AND (JOIN P108 Q21578) (JOIN P31 Q502895)) (JOIN P108 Q245247))", "s_expression_cores": ["(AND (JOIN P108 Q21578) (JOIN P31 Q502895))", "(JOIN P108 Q245247)"], "sparql_delex": "SELECT ?x WHERE { ?x wdt:P108 wd:Q21578 . ?x wdt:P31 wd:Q502895 .  FILTER NOT EXISTS { ?x wdt:P108 wd:Q245247 .  } }", "results": ["Q5128820", "Q3608053", "Q8062151", "Q6769134", "Q3017519", "Q5436506", "Q902112", "Q932517", "Q314636", "Q5386461", "Q16729913", "Q20736237", "Q7328480", "Q7325790", "Q131112", "Q327301", "Q7791169", "Q544500", "Q18660769", "Q18430", "Q15430761", "Q137576", "Q250136", "Q1859200", "Q15429615", "Q5294615", "Q688955", "Q6181055", "Q202138", "Q4772149", "Q720443", "Q15502564", "Q2273233", "Q1501402", "Q807504", "Q1398727", "Q1822119", "Q533256", "Q34296", "Q7377513", "Q6308003", "Q1773977", "Q15994553", "Q1409298", "Q4394469", "Q991823", "Q729117", "Q541673", "Q381301", "Q64241", "Q7831770", "Q19564222", "Q13522647", "Q1708995", "Q8030112", "Q7903924", "Q1291942", "Q1369855", "Q879600", "Q375333", "Q3647995", "Q301438", "Q6234680", "Q5353180", "Q5218885", "Q99543", "Q4662024", "Q453288", "Q2333344", "Q892115", "Q233950", "Q246536", "Q744057", "Q1174499", "Q5525124", "Q6261655", "Q75720", "Q7563038", "Q61885", "Q15984124", "Q5353164", "Q4799532", "Q5044455", "Q8004000", "Q1385013", "Q15995282", "Q962148", "Q2930440", "Q1319255", "Q7153454", "Q1239168", "Q473039", "Q5385855", "Q889205", "Q2042569", "Q984165", "Q15126316", "Q385654", "Q937", "Q92932", "Q7610684", "Q15489280", "Q591240", "Q451199", "Q6737160", "Q384522", "Q8026145", "Q92611", "Q92638", "Q3666419", "Q6176299", "Q7693664", "Q1266266", "Q77137", "Q1286996", "Q334069", "Q6524747", "Q7344593", "Q7344173", "Q5082216", "Q184980", "Q1141585", "Q6390714", "Q16731776", "Q3856301", "Q711278", "Q1390390", "Q6251515", "Q117093", "Q1339894", "Q7149269", "Q537725", "Q5095243", "Q3481823", "Q509994", "Q6712300", "Q1149031", "Q2916028", "Q22246729", "Q1066038", "Q634850", "Q962080", "Q381346", "Q4180366", "Q16150522", "Q1680683", "Q667683", "Q7416620", "Q1405367", "Q5031688", "Q7614503", "Q336397", "Q4354221", "Q450871", "Q5345210", "Q237220", "Q431963", "Q204078", "Q72334", "Q884284", "Q92983", "Q5041809", "Q1508482", "Q7345990", "Q7345991", "Q5321916", "Q6144254", "Q5576835", "Q2057694", "Q6722375", "Q1691712", "Q5039942", "Q6380309", "Q6525107", "Q5962488", "Q328969", "Q275604", "Q710213", "Q729543", "Q6489917", "Q7502629", "Q536558", "Q902967", "Q7365071", "Q7117121", "Q5362856", "Q572741", "Q6396642", "Q687024", "Q1385051", "Q16225125", "Q5515587", "Q809744", "Q933692", "Q6144958", "Q284129", "Q7283611", "Q5363080", "Q1383743", "Q1189188", "Q328131", "Q7150420", "Q2597871", "Q16664965", "Q5337174", "Q7154688", "Q4072104", "Q712924", "Q78085", "Q270379", "Q155790", "Q7427335", "Q1856146", "Q6964671", "Q81887", "Q3095070", "Q5549095", "Q4357058", "Q11713750", "Q1605792", "Q8010628", "Q4777216", "Q5365554", "Q1176864", "Q221697", "Q92741", "Q6962852", "Q15078062", "Q5081624", "Q21595", "Q499218", "Q16023501", "Q5336067", "Q3262682", "Q722638", "Q509556", "Q4739837", "Q5339604", "Q21608102", "Q123966", "Q1390604", "Q2099975", "Q1676282", "Q173746", "Q819878", "Q4893769", "Q5389800", "Q111190", "Q1294553", "Q7326192", "Q298521", "Q202631", "Q318518", "Q382207", "Q273159", "Q4980129", "Q7647974", "Q16730365", "Q6238893", "Q1585463", "Q60025", "Q15485822", "Q450283", "Q6298052", "Q1351917", "Q37030", "Q528763", "Q62888", "Q128736", "Q6163683", "Q45811", "Q7358341", "Q6530712", "Q15998434", "Q5218234", "Q5550028", "Q20738635", "Q18157771", "Q4768686", "Q1968131", "Q7421706", "Q6257528", "Q1705270", "Q535715", "Q16198241", "Q157043", "Q7387492", "Q5112101", "Q460911", "Q6377892", "Q349506", "Q7944558", "Q5396010", "Q4720115", "Q7965829", "Q1184545", "Q486882", "Q190770", "Q7512506", "Q957282", "Q7637991", "Q5343697", "Q1329182", "Q728331", "Q722951", "Q6833253", "Q328675", "Q92739", "Q15515625", "Q12067247", "Q3439226", "Q5217855", "Q821664", "Q828478", "Q16186945", "Q186042", "Q172544", "Q215258", "Q1115371", "Q6948503", "Q272519", "Q7422476", "Q1347744", "Q3305117", "Q2478527", "Q7648019", "Q62977", "Q2347632", "Q374341", "Q16019242", "Q15485286", "Q2633699", "Q5343027", "Q5497093", "Q3751840", "Q5230919", "Q948019", "Q4756213", "Q1334139", "Q964294", "Q14945520", "Q454529", "Q89862", "Q470792", "Q92608", "Q1365057", "Q2898505", "Q3046396", "Q723607", "Q40262", "Q936897", "Q501880", "Q11104994", "Q3808852", "Q2978414", "Q381692", "Q2895920", "Q7498649", "Q511155", "Q1173497", "Q665144", "Q5045321", "Q737340", "Q1396427", "Q4678704", "Q7493502", "Q370126", "Q3321740", "Q331623", "Q268961", "Q450404", "Q7342689", "Q16728122", "Q5258427", "Q88911", "Q2062147", "Q16106643", "Q930787", "Q5342173", "Q7175839", "Q6681020", "Q15432681", "Q892815", "Q7087810", "Q7648427", "Q17455", "Q6497838", "Q5238306", "Q465488", "Q1356879", "Q7791135", "Q6761419", "Q2481855", "Q1545424", "Q6246290", "Q7781858", "Q15451724", "Q6372388", "Q5924698", "Q5239678", "Q6307694", "Q217557", "Q5918952", "Q1283735", "Q4662193", "Q630122", "Q24573338", "Q187019", "Q710597", "Q6514434", "Q60891", "Q14623211", "Q799235", "Q11246237", "Q21595098", "Q215436", "Q6834245", "Q1684789", "Q4999124", "Q1967627", "Q6263147", "Q16189510", "Q7345132", "Q5360959", "Q353411", "Q13422476", "Q467333", "Q381974", "Q4792233", "Q7454442", "Q1878725", "Q1628278", "Q950897", "Q7610032", "Q215765", "Q954369", "Q472881", "Q238840", "Q7151335", "Q985782", "Q7273781", "Q6828096", "Q5234710", "Q20740919", "Q97091", "Q20740519", "Q1899176", "Q7175152", "Q16197109", "Q4817956", "Q8016265", "Q1444527", "Q536852", "Q4731874", "Q5415555", "Q6142634", "Q107970", "Q4202562", "Q6254047", "Q1901962", "Q3895979", "Q1877847", "Q7791145", "Q506379", "Q5083703", "Q363194", "Q9012486", "Q6208821", "Q5623975", "Q97436", "Q441164", "Q16121429", "Q481871", "Q6176187", "Q8954138", "Q1064544", "Q2011663", "Q12879717", "Q6099098", "Q616305", "Q1175150", "Q94028", "Q112534", "Q444270", "Q1372878", "Q316202", "Q5365043", "Q277221", "Q1890361", "Q2157538", "Q15452434", "Q3436251", "Q5203866", "Q1252392", "Q983820", "Q1682653", "Q5373484", "Q7632861", "Q538399", "Q86869", "Q7416544", "Q2157386", "Q7494110", "Q5927118", "Q7782117", "Q7174960", "Q4707684", "Q710092", "Q1384543", "Q2086235", "Q3809527", "Q7982751", "Q1974473", "Q7606043", "Q5214509", "Q6280911", "Q3394805", "Q57656", "Q6742647", "Q6165700", "Q249115", "Q506626", "Q742072", "Q247501", "Q5528850", "Q7788719", "Q482275", "Q5233499", "Q4110969", "Q7326423", "Q5302167", "Q1671208", "Q5342698", "Q20738650", "Q440064", "Q20738659", "Q8012590", "Q21597974", "Q4398693", "Q87502", "Q3514600", "Q8019411", "Q7183563", "Q74203", "Q6273359", "Q315425", "Q80095", "Q6729785", "Q320578", "Q1173787", "Q505878", "Q1691880", "Q6490652", "Q5585582", "Q1162467", "Q1237041", "Q7150264", "Q315343", "Q16845726", "Q585290", "Q1993120", "Q506133", "Q3160881", "Q709386", "Q16442100", "Q19729092", "Q4492765", "Q6547452", "Q6240523", "Q8010838", "Q154691", "Q166631", "Q4382556", "Q263099", "Q57344", "Q3482356", "Q1384983", "Q6742274", "Q7349557", "Q16011964", "Q15438714", "Q1676162", "Q6135274", "Q1927987", "Q15769189", "Q3918328", "Q7609872", "Q3047480", "Q5470000", "Q6759335", "Q4683069", "Q1687729", "Q6387252", "Q6375856", "Q16013634", "Q8018751", "Q7493496", "Q92664", "Q2642734", "Q726692", "Q1276655", "Q7153769", "Q740969", "Q7341790", "Q1152925", "Q7614569", "Q981658", "Q5339585", "Q1634339", "Q6709287", "Q6259677", "Q5125193", "Q391237", "Q7287410", "Q90497", "Q683876", "Q6347433", "Q3017632", "Q6531947", "Q635373", "Q2157440", "Q3839537", "Q707962", "Q2058948", "Q1447880", "Q1587931", "Q976129", "Q6123346", "Q15452015", "Q7344237", "Q7176937", "Q1347901", "Q5079668", "Q5325954", "Q440717", "Q5109637", "Q60197", "Q7325399", "Q15995413", "Q4714631", "Q1703326", "Q3809362", "Q2061782", "Q177256", "Q357108", "Q25119140", "Q6153440", "Q5237001", "Q555308", "Q333927", "Q7615015", "Q6231954", "Q1310890", "Q777234", "Q78319", "Q448496", "Q184433", "Q509662", "Q315545", "Q16105009", "Q16002714", "Q373924", "Q21422619", "Q710876", "Q964180", "Q166062", "Q5216323", "Q1440827", "Q506102", "Q3311640", "Q12254911", "Q433728", "Q968540", "Q1332243", "Q57283", "Q3774887", "Q5216718", "Q14942998", "Q1087146", "Q4798762", "Q465477", "Q5145037", "Q3760558", "Q4858780", "Q1002250", "Q7926065", "Q8071290", "Q955794", "Q728434", "Q333959", "Q1291854", "Q446115", "Q215977", "Q1701073", "Q1383155", "Q567782", "Q1311342", "Q7827716", "Q134798", "Q1108635", "Q8386273", "Q15993651", "Q794633", "Q7792171", "Q1398951", "Q6687788", "Q23978303", "Q7327829", "Q534080", "Q2165599", "Q1398957", "Q15052199", "Q7374469", "Q942908", "Q557507", "Q233051", "Q124032", "Q10862790", "Q280799", "Q9079071", "Q6769363", "Q5662057", "Q7945358", "Q6129027", "Q4762724", "Q1391052", "Q16006873", "Q116879", "Q4961540", "Q13403447", "Q4116676", "Q15504232", "Q5006813", "Q723627", "Q2061388", "Q7647713", "Q6438162", "Q109737", "Q6962706", "Q15745711", "Q7351777", "Q6242077", "Q11249609", "Q1063699", "Q1904381", "Q683643", "Q7397408", "Q201795", "Q15994977", "Q450317", "Q725974", "Q1262696", "Q4722077", "Q5079999", "Q5483556", "Q1176380", "Q725239", "Q7648530", "Q41390", "Q5231783", "Q7901082", "Q211539", "Q1314561", "Q11194033", "Q4648532", "Q1399119", "Q6834055", "Q4647222", "Q1570107", "Q610960", "Q538068", "Q5512201", "Q5542346", "Q431503", "Q15497263", "Q4926866", "Q670658", "Q5129419", "Q7342830", "Q3473438", "Q4493211", "Q7341835", "Q931129", "Q791030", "Q16073411", "Q6836303", "Q7175452", "Q8005525", "Q16104438", "Q8013859", "Q6293997", "Q705994", "Q15995429", "Q311772", "Q2711499", "Q5534487", "Q644047", "Q15443182", "Q6770253", "Q16947809", "Q4073448", "Q206499", "Q3105411", "Q15441442", "Q5372395", "Q6776701", "Q7647829", "Q66488", "Q4960761", "Q217619", "Q3436186", "Q6771429", "Q5081603", "Q323442", "Q7599822", "Q4141370", "Q7782096", "Q6259993", "Q574810", "Q712469", "Q371441", "Q4795214", "Q201426", "Q4977077", "Q5075578", "Q25796309", "Q5693570", "Q17305586", "Q6814094", "Q16066257", "Q960919", "Q550632", "Q5346748", "Q17306040", "Q3482341", "Q1771279", "Q7152022", "Q15513520", "Q1396649", "Q7610735", "Q5285640", "Q17501865", "Q5045302", "Q7962222", "Q5407585", "Q5234266", "Q8977347", "Q567758", "Q7608570", "Q5218734", "Q3308023", "Q528359", "Q201513", "Q5402967", "Q19600153", "Q4769296", "Q6834262", "Q730820", "Q6486338", "Q11250397"], "coreference_resolved_question": "Which people works for Princeton University but not King's College London?", "s_expression_fn": "(DIFF (AND (JOIN employer Princeton_University) (JOIN instance_of common_name)) (JOIN employer King's_College_London))", "predicted_s_expression_fn": "(DIFF (AND (JOIN (R employer) Princeton_University) (JOIN instance_of common_name) (AND (JOIN (R employer) King's_College_London) (JOIN instance_of common_name)))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "375.81.2", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Single_Relation|Incomplete", "question": "Which administrative territory is Artem Polyarus a civilian of ? [SEP] Ukraine [SEP] What is the sex of that person ? [SEP] male [SEP] And also Marko Ma\u0161anovi\u0107 [CTX]", "answer": "male", "s_expression": "(AND (JOIN (R P21) Q4371614) (JOIN P31 Q290) (JOIN (R P21) Q12754965))", "s_expression_cores": ["(AND (JOIN (R P21) Q4371614) (JOIN P31 Q290) (JOIN (R P21) Q12754965))"], "sparql_delex": "SELECT ?x WHERE { wd:Q4371614 wdt:P21 ?x . ?x wdt:P31 wd:Q290 .  wd:Q12754965 wdt:P21 ?x .  }", "results": ["Q6581097"], "coreference_resolved_question": "What is the sex of Marko Ma\u0161anovi\u0107?", "s_expression_fn": "(AND (JOIN (R sex_or_gender) Artem_Polyarus) (JOIN instance_of sex) (JOIN (R sex_or_gender) Marko_Ma\u0161anovi\u0107))", "predicted_s_expression_fn": "(AND (JOIN (R sex_or_gender) Artem_Polyarus) (JOIN instance_of sex) (JOIN (R sex_or_gender) Marko_Ma\u0161anovi\u0107))", "predicted_s_expression": "(AND (JOIN (R P21) Q4371614) (JOIN P31 Q290) (JOIN (R P21) Q12754965))", "sparql_attempt_count": 2, "actions": "SELECT ?x WHERE { wd:Q4371614 wdt:P21 ?x . ?x wdt:P31 wd:Q290 . wd:Q12754965 wdt:P21 ?x . }"}, {"turnID": "1490.69.2", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Single_Relation|Incomplete", "question": "What is the profession of Ioan Apostol ? [SEP] luger [SEP] Which sex does that person have ? [SEP] male [SEP] And also Fritz Flothmann [CTX]", "answer": "male", "s_expression": "(AND (JOIN (R P21) Q6061746) (JOIN P31 Q290) (JOIN (R P21) Q1466241))", "s_expression_cores": ["(AND (JOIN (R P21) Q6061746) (JOIN P31 Q290) (JOIN (R P21) Q1466241))"], "sparql_delex": "SELECT ?x WHERE { wd:Q6061746 wdt:P21 ?x . ?x wdt:P31 wd:Q290 .  wd:Q1466241 wdt:P21 ?x .  }", "results": ["Q6581097"], "coreference_resolved_question": "Which sex does Fritz Flothmann have?", "s_expression_fn": "(AND (JOIN (R sex_or_gender) Ioan_Apostol) (JOIN instance_of sex) (JOIN (R sex_or_gender) Fritz_Flothmann))", "predicted_s_expression_fn": "(AND (JOIN (R sex_or_gender) Ioan_Apostol) (JOIN instance_of sex) (JOIN (R sex_or_gender) Fritz_Flothmann))", "predicted_s_expression": "(AND (JOIN (R P21) Q6061746) (JOIN P31 Q290) (JOIN (R P21) Q1466241))", "sparql_attempt_count": 2, "actions": "SELECT ?x WHERE { wd:Q6061746 wdt:P21 ?x . ?x wdt:P31 wd:Q290 . wd:Q1466241 wdt:P21 ?x . }"}, {"turnID": "335.83.4", "question_type": "Logical Reasoning (All)", "description": "Logical|Difference|Single_Relation", "question": "Which cellular components are the components of E-selectin but not PTS system fructose-specific transporter subunit IIABC    SSUBM407_1067 ? [CTX]", "answer": "extracellular space, clathrin-coated pit", "s_expression": "(DIFF (AND (JOIN (R P681) Q21987645) (JOIN P31 Q5058355)) (JOIN (R P681) Q23489808))", "s_expression_cores": ["(AND (JOIN (R P681) Q21987645) (JOIN P31 Q5058355))", "(JOIN (R P681) Q23489808)"], "sparql_delex": "SELECT ?x WHERE { wd:Q21987645 wdt:P681 ?x . ?x wdt:P31 wd:Q5058355 .  FILTER NOT EXISTS { wd:Q23489808 wdt:P681 ?x .  } }", "results": ["Q2914458", "Q14860540"], "coreference_resolved_question": "Which cellular components are the components of E-selectin but not PTS system fructose-specific transporter subunit IIABC SSUBM407_1067?", "s_expression_fn": "(DIFF (AND (JOIN (R cell_component) E-selectin) (JOIN instance_of cellular_component)) (JOIN (R cell_component) PTS_system_fructose-specific_transporter_subunit_IIABC____SSUBM407_1067))", "predicted_s_expression_fn": "(DIFF (AND (JOIN (R cell_component) E-selectin) (JOIN (R cell_component) PTS_system_fructose-specific_transporter_subunit_IIABC____SSUBM407_1067))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "335.117.2", "question_type": "Logical Reasoning (All)", "description": "Logical|Difference|Multiple_Relation", "question": "Which administrative territories have diplomatic relationships with Italy and are not Chumathang present in ? [CTX]", "answer": "Some of them are Ukraine, Azerbaijan, Croatia, People's Republic of China, Liechtenstein, Czech Republic, Romania, Argentina, Finland, Belgium", "s_expression": "(DIFF (AND (JOIN (R P530) Q38) (JOIN P31 Q15617994)) (JOIN (R P17) Q18111277))", "s_expression_cores": ["(AND (JOIN (R P530) Q38) (JOIN P31 Q15617994))", "(JOIN (R P17) Q18111277)"], "sparql_delex": "SELECT ?x WHERE { wd:Q38 wdt:P530 ?x . ?x wdt:P31 wd:Q15617994 .  FILTER NOT EXISTS { wd:Q18111277 wdt:P17 ?x .  } }", "results": ["Q805", "Q219", "Q869", "Q801", "Q189", "Q843", "Q184", "Q423", "Q822", "Q419", "Q347", "Q414", "Q142", "Q225", "Q224", "Q55", "Q222", "Q221", "Q145", "Q148", "Q96", "Q31", "Q229", "Q228", "Q33", "Q32", "Q17", "Q30", "Q37", "Q36", "Q79", "Q34", "Q77", "Q39", "Q1016", "Q739", "Q227", "Q948", "Q191", "Q733", "Q928", "Q298", "Q45", "Q252", "Q114", "Q399", "Q403", "Q230", "Q233", "Q258", "Q43", "Q212", "Q213", "Q236", "Q211", "Q159", "Q217", "Q214", "Q215", "Q155", "Q218", "Q41", "Q238", "Q796", "Q794", "Q20", "Q1045", "Q889", "Q27", "Q28", "Q29", "Q884", "Q881"], "coreference_resolved_question": "Which administrative territories have diplomatic relationships with Italy and are not Chumathang present in?", "s_expression_fn": "(DIFF (AND (JOIN (R diplomatic_relation) Italy) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (JOIN (R country) Chumathang))", "predicted_s_expression_fn": "(DIFF (AND (JOIN diplomatic_relation Italy) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (JOIN (R present_in) Chumathang))", "predicted_s_expression": "(DIFF (AND (JOIN P530 Q38) (JOIN P31 Q15617994)) (JOIN (R P1441) Q18111277))", "sparql_attempt_count": 2, "actions": "SELECT ?x WHERE { ?x wdt:P530 wd:Q38 . ?x wdt:P31 wd:Q15617994 . FILTER NOT EXISTS { wd:Q18111277 wdt:P1441 ?x . } }"}, {"turnID": "335.117.10", "question_type": "Logical Reasoning (All)", "description": "Logical|Difference|Multiple_Relation", "question": "Which administrative territories holds diplomatic relationship with Italy and are not Group d'Art\u00e9 Averbode present in ? [CTX]", "answer": "Some of them are Albania, Mexico, People's Republic of China, Uruguay, Japan, Colombia, Lebanon, Romania, Spain, Latvia", "s_expression": "(DIFF (AND (JOIN (R P530) Q38) (JOIN P31 Q15617994)) (JOIN (R P17) Q1946799))", "s_expression_cores": ["(AND (JOIN (R P530) Q38) (JOIN P31 Q15617994))", "(JOIN (R P17) Q1946799)"], "sparql_delex": "SELECT ?x WHERE { wd:Q38 wdt:P530 ?x . ?x wdt:P31 wd:Q15617994 .  FILTER NOT EXISTS { wd:Q1946799 wdt:P17 ?x .  } }", "results": ["Q805", "Q219", "Q869", "Q801", "Q189", "Q843", "Q184", "Q423", "Q822", "Q419", "Q668", "Q347", "Q414", "Q142", "Q225", "Q224", "Q55", "Q222", "Q221", "Q145", "Q148", "Q96", "Q229", "Q228", "Q33", "Q32", "Q17", "Q30", "Q37", "Q36", "Q79", "Q34", "Q77", "Q39", "Q1016", "Q739", "Q227", "Q948", "Q191", "Q733", "Q928", "Q298", "Q45", "Q252", "Q114", "Q399", "Q403", "Q230", "Q233", "Q258", "Q43", "Q212", "Q213", "Q236", "Q211", "Q159", "Q217", "Q214", "Q215", "Q155", "Q218", "Q41", "Q238", "Q796", "Q794", "Q20", "Q1045", "Q889", "Q27", "Q28", "Q29", "Q884", "Q881"], "coreference_resolved_question": "Which administrative territories hold diplomatic relationships with Italy and are not Group d'Art\u00e9 Averbode present in?", "s_expression_fn": "(DIFF (AND (JOIN (R diplomatic_relation) Italy) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (JOIN (R country) Group_d'Art\u00e9_Averbode))", "predicted_s_expression_fn": "(DIFF (AND (JOIN diplomatic_relation Italy) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (AND (JOIN present_in_work Group_d'Art\u00e9_Averbode) (JOIN instance_of designation_for_an_administrative_territorial_entity)))", "predicted_s_expression": "", "sparql_attempt_count": 1, "actions": ""}, {"turnID": "335.108.3", "question_type": "Logical Reasoning (All)", "description": "Logical|Difference|Single_Relation", "question": "Which works of art have silent film but not romance film as their type ? [CTX]", "answer": "Some of them are The House of Temperley, Who's Boss?, Madame Mystery, Mientras Buenos Aires duerme, Evangeline, The Better Way, Dracula: Pages from a Virgin's Diary, Her One Mistake, Frozen Hearts, The Gold Cure", "s_expression": "(DIFF (AND (JOIN P136 Q226730) (JOIN P31 Q838948)) (JOIN P136 Q1054574))", "s_expression_cores": ["(AND (JOIN P136 Q226730) (JOIN P31 Q838948))", "(JOIN P136 Q1054574)"], "sparql_delex": "SELECT ?x WHERE { ?x wdt:P136 wd:Q226730 . ?x wdt:P31 wd:Q838948 .  FILTER NOT EXISTS { ?x wdt:P136 wd:Q1054574 .  } }", "results": ["Q7740655", "Q109116", "Q7761607", "Q16987972", "Q7744255", "Q3631401", "Q728354", "Q304351", "Q3870057", "Q7736964", "Q19599962", "Q3548388", "Q11820171", "Q3898775", "Q7715206", "Q3985549", "Q1195688", "Q3572203", "Q5415781", "Q733819", "Q302399", "Q7129684", "Q3519969", "Q3201682", "Q3549735", "Q3355102", "Q2561725", "Q24508648", "Q3218820", "Q13471208", "Q3334136", "Q444242", "Q7737123", "Q7237554", "Q3021273", "Q2453955", "Q944679", "Q2836545", "Q7721334", "Q1636016", "Q2819745", "Q3212841", "Q7709287", "Q6433636", "Q3212846", "Q3324719", "Q21600164", "Q3392700", "Q5304682", "Q3548668", "Q971940", "Q3226056", "Q4666933", "Q16957067", "Q6843816", "Q21714895", "Q2345856", "Q1211063", "Q4019580", "Q10350030", "Q5579675"], "coreference_resolved_question": "Which works of art have silent film but not romance film as their type?", "s_expression_fn": "(DIFF (AND (JOIN genre silent_film) (JOIN instance_of work_of_art)) (JOIN genre romance_film))", "predicted_s_expression_fn": "(DIFF (AND (JOIN (R genre) silent_film) (JOIN instance_of work_of_art)) (AND (JOIN (R genre) romance_film) (JOIN instance_of work_of_art)))", "predicted_s_expression": "", "sparql_attempt_count": 2, "actions": ""}, {"turnID": "335.32.2", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Single_Relation|Incomplete", "question": "What is the race of Leonidas of Tarentum ? [SEP] Greeks [SEP] And also Agis of Argos [CTX]", "answer": "Greeks", "s_expression": "(AND (JOIN (R P172) Q927009) (JOIN P31 Q2472587) (JOIN (R P172) Q3331853))", "s_expression_cores": ["(AND (JOIN (R P172) Q927009) (JOIN P31 Q2472587) (JOIN (R P172) Q3331853))"], "sparql_delex": "SELECT ?x WHERE { wd:Q927009 wdt:P172 ?x . ?x wdt:P31 wd:Q2472587 .  wd:Q3331853 wdt:P172 ?x .  }", "results": ["Q539051"], "coreference_resolved_question": "What is the race of Agis of Argos?", "s_expression_fn": "(AND (JOIN (R ethnic_group) Leonidas_of_Tarentum) (JOIN instance_of people) (JOIN (R ethnic_group) Agis_of_Argos))", "predicted_s_expression_fn": "(AND (JOIN (R ethnic_group) Leonidas_of_Tarentum) (JOIN (R ethnic_group) Agis_of_Argos))", "predicted_s_expression": "(AND (JOIN (R P172) Q927009) (JOIN (R P172) Q3331853))", "sparql_attempt_count": 1, "actions": "SELECT ?x WHERE { wd:Q927009 wdt:P172 ?x . wd:Q3331853 wdt:P172 ?x . }"}, {"turnID": "690.9.3", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Single_Relation|Incomplete", "question": "Which taxon is F-box/LRR-repeat protein 19 found in ? [SEP] Homo sapiens [SEP] Which zoological nomenclature is the taxonomic type of that taxon ? [SEP] Carl Linnaeus [SEP] And also Homo sapiens sapiens [CTX]", "answer": "Carl Linnaeus", "s_expression": "(AND (JOIN (R P427) Q15978631) (JOIN P31 Q3343211) (JOIN (R P427) Q3238275))", "s_expression_cores": ["(AND (JOIN (R P427) Q15978631) (JOIN P31 Q3343211) (JOIN (R P427) Q3238275))"], "sparql_delex": "SELECT ?x WHERE { wd:Q15978631 wdt:P427 ?x . ?x wdt:P31 wd:Q3343211 .  wd:Q3238275 wdt:P427 ?x .  }", "results": ["Q1043"], "coreference_resolved_question": "Which zoological nomenclature is the taxonomic type of Homo sapiens sapiens?", "s_expression_fn": "(AND (JOIN (R taxonomic_type) Homo_sapiens) (JOIN instance_of zoological_nomenclature) (JOIN (R taxonomic_type) Homo_sapiens_sapiens))", "predicted_s_expression_fn": "(AND (JOIN (R taxon_author) Homo_sapiens_sapiens) (JOIN instance_of zoological_nomenclature))", "predicted_s_expression": "", "sparql_attempt_count": 2, "actions": ""}, {"turnID": "690.116.2", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Single_Relation|Incomplete", "question": "What is the ethnicity of Arayik Gevorgyan ? [SEP] Armenians [SEP] What is the sex of that person ? [SEP] male [SEP] And also Donald Muylle [CTX]", "answer": "male", "s_expression": "(AND (JOIN (R P21) Q569816) (JOIN P31 Q290) (JOIN (R P21) Q15943291))", "s_expression_cores": ["(AND (JOIN (R P21) Q569816) (JOIN P31 Q290) (JOIN (R P21) Q15943291))"], "sparql_delex": "SELECT ?x WHERE { wd:Q569816 wdt:P21 ?x . ?x wdt:P31 wd:Q290 .  wd:Q15943291 wdt:P21 ?x .  }", "results": ["Q6581097"], "coreference_resolved_question": "What is the sex of Donald Muylle?", "s_expression_fn": "(AND (JOIN (R sex_or_gender) Arayik_Gevorgyan) (JOIN instance_of sex) (JOIN (R sex_or_gender) Donald_Muylle))", "predicted_s_expression_fn": "(AND (JOIN (R sex_or_gender) Arayik_Gevorgyan) (JOIN instance_of sex) (JOIN (R sex_or_gender) Donald_Muylle))", "predicted_s_expression": "(AND (JOIN (R P21) Q569816) (JOIN P31 Q290) (JOIN (R P21) Q15943291))", "sparql_attempt_count": 2, "actions": "SELECT ?x WHERE { wd:Q569816 wdt:P21 ?x . ?x wdt:P31 wd:Q290 . wd:Q15943291 wdt:P21 ?x . }"}, {"turnID": "690.37.2", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Single_Relation|Incomplete", "question": "What is the sex of Fran\u00e7ois Robin de Sc\u00e9vole ? [SEP] male [SEP] What was the position held by that person ? [SEP] member of the French\u00a0National Assembly [SEP] And also Alex Roubert [CTX]", "answer": "member of the French\u00a0National Assembly", "s_expression": "(AND (JOIN (R P39) Q3085705) (JOIN P31 Q12737077) (JOIN (R P39) Q2833021))", "s_expression_cores": ["(AND (JOIN (R P39) Q3085705) (JOIN P31 Q12737077) (JOIN (R P39) Q2833021))"], "sparql_delex": "SELECT ?x WHERE { wd:Q3085705 wdt:P39 ?x . ?x wdt:P31 wd:Q12737077 .  wd:Q2833021 wdt:P39 ?x .  }", "results": ["Q3044918"], "coreference_resolved_question": "What was the position held by Alex Roubert?", "s_expression_fn": "(AND (JOIN (R position_held) Fran\u00e7ois_Robin_de_Sc\u00e9vole) (JOIN instance_of occupation) (JOIN (R position_held) Alex_Roubert))", "predicted_s_expression_fn": "(AND (JOIN (R position_held) Fran\u00e7ois_Robin_de_Sc\u00e9vole) (JOIN instance_of position) (JOIN (R position_held) Alex_Roubert))", "predicted_s_expression": "(AND (JOIN (R P39) Q3085705) (JOIN P31 Q12737077) (JOIN (R P39) Q2833021))", "sparql_attempt_count": 2, "actions": "SELECT ?x WHERE { wd:Q3085705 wdt:P39 ?x . ?x wdt:P31 wd:Q12737077 . wd:Q2833021 wdt:P39 ?x . }"}, {"turnID": "67.36.7", "question_type": "Logical Reasoning (All)", "description": "Logical|Difference|Multiple_Relation", "question": "Which people are a member of Brazil national football team and are not working as politician ? [CTX]", "answer": "Some of them are Ant\u00f4nio Benedito da Silva, Jos\u00e9 Roberto Marques, Jos\u00e9 L\u00e1zaro Robles, Geferson, P\u00edndaro de Carvalho Rodrigues, Osny Augusto Werner, Bismarck Barreto Faria, Del\u00e9m, L\u00facio, Zenon de Souza Farias", "s_expression": "(DIFF (AND (JOIN P54 Q83459) (JOIN P31 Q502895)) (JOIN P106 Q82955))", "s_expression_cores": ["(AND (JOIN P54 Q83459) (JOIN P31 Q502895))", "(JOIN P106 Q82955)"], "sparql_delex": "SELECT ?x WHERE { ?x wdt:P54 wd:Q83459 . ?x wdt:P31 wd:Q502895 .  FILTER NOT EXISTS { ?x wdt:P106 wd:Q82955 .  } }", "results": ["Q2356803", "Q210453", "Q2073247", "Q2564432", "Q3783455", "Q572942", "Q197574", "Q23700957", "Q2718851", "Q2736176", "Q602525", "Q197578", "Q2396111", "Q724092", "Q905206", "Q440945", "Q552917", "Q2277552", "Q156822", "Q174926", "Q2051961", "Q769862", "Q641425", "Q723919", "Q455565", "Q204895", "Q2443452", "Q94850", "Q2558474", "Q2538958", "Q3810539", "Q2415404", "Q2538616", "Q888006", "Q316229", "Q309894", "Q342474", "Q595653", "Q888001", "Q102331", "Q612073", "Q1747611", "Q468656", "Q1117392", "Q1607925", "Q509491", "Q159059", "Q1365820", "Q73018", "Q585425", "Q555339", "Q484772", "Q312895", "Q316436", "Q3852447", "Q47526", "Q47489", "Q138075", "Q608775", "Q1509622", "Q2321775", "Q6421551", "Q216142", "Q2712984", "Q3810705", "Q212491", "Q461505", "Q4019989", "Q6794019", "Q2318192", "Q2080529", "Q59255", "Q608980", "Q311641", "Q5337091", "Q2277170", "Q177885", "Q210950", "Q586706", "Q586708", "Q39444", "Q1027415", "Q299367", "Q1268637", "Q974715", "Q7878054", "Q974847", "Q2714078", "Q615292", "Q3667757", "Q1616952", "Q2296902", "Q204825", "Q2449611", "Q3438450", "Q3937095", "Q315079", "Q295891", "Q2332659", "Q1251866", "Q456600", "Q2712917", "Q20011905", "Q273766", "Q794628", "Q380322", "Q1524118", "Q927595", "Q2625446", "Q7937912", "Q642717", "Q2625427", "Q1526974", "Q928184", "Q1408157", "Q310458", "Q3830045", "Q3287123", "Q455804", "Q1982869", "Q3940841", "Q2600663", "Q1404865", "Q1355555", "Q3624672", "Q2277516", "Q313082", "Q383383", "Q2072841", "Q5222817", "Q2629254", "Q459707", "Q181111", "Q2306110", "Q2719042", "Q191885", "Q634578", "Q2414922", "Q3886320", "Q210013", "Q2926984", "Q1631387", "Q2397845", "Q38794", "Q2538560", "Q548269", "Q2714428", "Q1254357", "Q132450", "Q2635514", "Q1333472", "Q720606", "Q726982", "Q366108", "Q2831740", "Q938759", "Q438442", "Q390029", "Q220283", "Q2294406", "Q2538923", "Q62786", "Q660125", "Q1753325", "Q2735462", "Q969863", "Q3993105", "Q482310", "Q317863", "Q2709912", "Q2511680", "Q713886", "Q220593", "Q9293527", "Q494599", "Q3810449", "Q2303017", "Q4022484", "Q455611", "Q122905", "Q4008534", "Q313861", "Q351827", "Q4008530", "Q1987355", "Q2448274", "Q3761373", "Q382069", "Q510123", "Q295262", "Q2658893", "Q720548", "Q2424762", "Q1993533", "Q4025439", "Q380405", "Q703920", "Q681704", "Q552995", "Q4918849", "Q4007242", "Q2449294", "Q296814", "Q429039", "Q2605475", "Q314750", "Q357844", "Q9323536", "Q3880014", "Q742351", "Q2714027", "Q1991979", "Q2334475", "Q731260", "Q1771303", "Q1370869", "Q640714", "Q2452835", "Q203451", "Q7420623", "Q215952", "Q9295597", "Q180875", "Q23304390", "Q591114", "Q345037", "Q62182", "Q7517131", "Q888627", "Q2449583", "Q197563", "Q1363213", "Q552922", "Q1284800", "Q210114", "Q262826", "Q172720", "Q39230", "Q297721", "Q125063", "Q616664", "Q523520", "Q3858102", "Q181126", "Q181128", "Q3857262", "Q1353703", "Q506861", "Q737839", "Q2538809", "Q1610436", "Q10293011", "Q2538967", "Q694542", "Q2566043", "Q215040", "Q204407", "Q3881537", "Q2443468", "Q44815", "Q965448", "Q7038862", "Q550019", "Q73480", "Q1648368", "Q311407", "Q2712589", "Q745422", "Q927470", "Q2449536", "Q508075", "Q1989261", "Q381729", "Q3810441", "Q1614422", "Q984275", "Q3859968", "Q3719835", "Q1990849", "Q350493", "Q7455945", "Q181098", "Q593650", "Q312886", "Q537644", "Q3726676", "Q177686", "Q1353788", "Q562347", "Q7179031", "Q2339388", "Q350547", "Q313576", "Q3609439", "Q437329", "Q313570", "Q3905323", "Q2080536", "Q3941122", "Q311424", "Q313835", "Q1336935", "Q3810570", "Q2707766", "Q659684", "Q430712", "Q929290", "Q3737600", "Q2714065", "Q181096", "Q310697", "Q4217483", "Q221798", "Q370014", "Q2608403", "Q181092", "Q3120611", "Q207407", "Q708163", "Q455557", "Q188544", "Q2712962", "Q2015814", "Q1378184", "Q295880", "Q2015813", "Q359152", "Q603190", "Q372451", "Q454934", "Q2602055", "Q2351691", "Q440999", "Q3567581", "Q1365945", "Q3661682", "Q1091521", "Q2348185", "Q563649", "Q3719760", "Q11800506", "Q667127", "Q726192", "Q630223", "Q181168", "Q207085", "Q3806195", "Q529018", "Q584219", "Q978112", "Q463460", "Q2445366", "Q1617743", "Q6696318", "Q2082547", "Q3932224", "Q10268484", "Q3810729", "Q2714418", "Q483577", "Q3702239", "Q366984", "Q712145", "Q2538570", "Q3810722", "Q3609074", "Q704279", "Q262954", "Q2348982", "Q342237", "Q426134", "Q2565981", "Q2316179", "Q197553", "Q3386174", "Q197556", "Q3886008", "Q2551033", "Q1825181", "Q630133", "Q1172712", "Q703634", "Q713719", "Q2444565", "Q2565969", "Q1645814", "Q553061", "Q3804866", "Q318184", "Q247497", "Q1797442", "Q779177", "Q723936", "Q3773177", "Q3869200", "Q528590", "Q221141", "Q614391", "Q3869199", "Q3742911", "Q3898708", "Q2847888", "Q3311820", "Q13646572", "Q312002", "Q887992", "Q223229", "Q1406906", "Q718186", "Q439450", "Q1028081", "Q181108", "Q653138", "Q2447165", "Q11813849", "Q116560", "Q794217", "Q72886", "Q503242", "Q217974", "Q1987345", "Q522020", "Q1626880", "Q11728624", "Q3900980", "Q318119", "Q1345763", "Q928143", "Q533007", "Q940810", "Q197729", "Q3868688", "Q215890", "Q2266089", "Q465023", "Q535520", "Q1573556", "Q464419", "Q2290207", "Q380411", "Q359160", "Q928133", "Q514376", "Q928137", "Q1334423", "Q2307148", "Q309731", "Q2070423", "Q3810540", "Q237561", "Q2566025", "Q311335", "Q2089098", "Q1378124", "Q2714017", "Q4666843", "Q428431", "Q2714394", "Q5253617", "Q2711257", "Q2307134", "Q316836", "Q3679828", "Q6267969", "Q2712930", "Q1249859", "Q2520149", "Q445541", "Q2538974", "Q1747608", "Q615668", "Q350536", "Q3183860", "Q1771539", "Q7322659", "Q2550120", "Q7509245", "Q467232", "Q3869237", "Q314099", "Q4727251", "Q210102", "Q2713004", "Q2777642", "Q208687", "Q73082", "Q2538934", "Q3104021", "Q953573", "Q509812", "Q311872", "Q58762", "Q181139", "Q1715156", "Q647438", "Q2410089", "Q247211", "Q1648384", "Q527594", "Q2427622", "Q2617242", "Q553025", "Q4019793", "Q213401", "Q47314", "Q2011790", "Q342457", "Q2538541", "Q2714443", "Q2712599", "Q312687", "Q2421738", "Q2714449", "Q2448647", "Q1987642", "Q109428", "Q9160975", "Q2089039", "Q2089380", "Q2548141", "Q312486", "Q1610361", "Q2722553", "Q1996425", "Q375496", "Q3246474", "Q2004542", "Q1071060", "Q2314547", "Q628916", "Q178683", "Q2455175", "Q3695155", "Q1185500", "Q1988077", "Q2347443", "Q2422699", "Q163750", "Q1610842", "Q2712996", "Q4008653", "Q2625291", "Q2079402", "Q3979318", "Q2427725", "Q569094", "Q1613402", "Q181080", "Q2604130", "Q3878239", "Q180889", "Q3621308", "Q1433020", "Q517914", "Q943432", "Q252711", "Q735449", "Q248016", "Q312140", "Q2475786", "Q27852", "Q3702484", "Q925323", "Q652849", "Q3858094", "Q3784894", "Q927507", "Q197565", "Q170452", "Q3938796", "Q3878426", "Q29097", "Q204450", "Q685301", "Q3726441", "Q720549", "Q714354", "Q721984", "Q250962", "Q211933", "Q548880", "Q218090", "Q2719841", "Q9162100", "Q372643", "Q284708", "Q2607107", "Q47760", "Q717927", "Q1988696", "Q47766", "Q1825165", "Q280306", "Q2412572", "Q682277", "Q366156", "Q178774", "Q531814", "Q2302552", "Q274872", "Q3931866", "Q2429057", "Q3886995", "Q202429", "Q3808169", "Q2438478", "Q2714401", "Q218098", "Q1617994", "Q551192", "Q161039", "Q1988786", "Q438483", "Q2308830", "Q2294362", "Q311511", "Q2093052", "Q315831", "Q195426", "Q2569378", "Q460484", "Q729372", "Q2093356", "Q693043", "Q2538947", "Q389196", "Q378526", "Q1342612", "Q313520", "Q283706", "Q518525", "Q2570605", "Q2417923", "Q911705", "Q38136", "Q80761", "Q2563823", "Q1354227", "Q15207061", "Q350756", "Q204555", "Q588715", "Q2579383", "Q1200065", "Q1895537", "Q257606", "Q937157", "Q617528", "Q2332450", "Q705942", "Q561613", "Q979528", "Q1353800", "Q1459686", "Q2626310", "Q372092", "Q3295559", "Q887969", "Q952754", "Q3810420", "Q954475", "Q9322639", "Q1648865", "Q1573490", "Q311035", "Q1648860", "Q190142", "Q521031", "Q736393", "Q9295905", "Q491506", "Q921131", "Q943470", "Q859743", "Q2469877", "Q523604", "Q62733", "Q182459", "Q1345151", "Q2269083", "Q2119081", "Q1825767", "Q311739", "Q2447197", "Q555601", "Q929023", "Q2056431", "Q738689", "Q2317052", "Q142794", "Q769055", "Q332012", "Q6278277", "Q6950205", "Q2469661", "Q2717811", "Q2578811", "Q459356", "Q4025436", "Q2397321", "Q664053", "Q931197", "Q2349653", "Q947397", "Q2712909", "Q496376", "Q2476736", "Q3658908", "Q57167", "Q507815", "Q926917", "Q359481", "Q137242", "Q2311308", "Q3088450", "Q2087429", "Q3613675", "Q1747435", "Q19497", "Q2576274", "Q47660", "Q6294001", "Q455799", "Q197583", "Q447271", "Q585725", "Q780031", "Q196897", "Q559474", "Q2294414", "Q919825", "Q2276922", "Q261000", "Q677923", "Q218611", "Q1341709", "Q18237361", "Q2454669", "Q1881742", "Q553754", "Q2720150", "Q1694253", "Q391680", "Q58441", "Q2316590", "Q1647574", "Q2712608", "Q312772", "Q483457", "Q326476", "Q2714436", "Q2538550", "Q296058", "Q1935010", "Q311445", "Q3810962", "Q950459", "Q254747", "Q714500", "Q585743", "Q46741", "Q2505429", "Q10348697", "Q372058", "Q1218393", "Q189184", "Q281753", "Q531080", "Q1629089", "Q961889", "Q5256897", "Q180642", "Q2538915", "Q3620483", "Q467194", "Q2314413", "Q1043195", "Q1607691", "Q975817", "Q3186278", "Q969872", "Q180724", "Q1164053", "Q3623015", "Q1533867", "Q2306903", "Q529207", "Q2365025", "Q350761", "Q529865", "Q2340528", "Q2570335", "Q1235382", "Q3858092", "Q180894", "Q2714041", "Q2448249", "Q72904", "Q2538606", "Q2629446", "Q978042", "Q2398332", "Q521785", "Q2712945", "Q6701426", "Q1609225", "Q342489", "Q1990293", "Q1150828", "Q3870413", "Q193706", "Q10335634", "Q1379100", "Q919307", "Q83329", "Q3633076", "Q454910", "Q2334943", "Q299693", "Q535429", "Q3660019", "Q3780251", "Q11716212", "Q579215", "Q2657324", "Q312454", "Q972671", "Q742644", "Q329451", "Q180866", "Q192963", "Q665806", "Q2734022", "Q128276", "Q180862", "Q514252", "Q646568"], "coreference_resolved_question": "Which people are a member of Brazil national football team and are not working as politician?", "s_expression_fn": "(DIFF (AND (JOIN member_of_sports_team Brazil_national_football_team) (JOIN instance_of common_name)) (JOIN occupation politician))", "predicted_s_expression_fn": "(DIFF (AND (JOIN member_of_sports_team Brazil_national_football_team) (JOIN instance_of common_name)) (AND (JOIN (R occupation) politician) (JOIN instance_of common_name))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "67.33.2", "question_type": "Logical Reasoning (All)", "description": "Logical|Difference|Multiple_Relation", "question": "Which people have Weber as their family name and are not working as anthropologist ? [CTX]", "answer": "Some of them are Johanna Weber, Fred Weber, Klaus Weber, Claudius Weber, Anton Weber, Francis J. Weber, Kurt Weber, Dietrich Weber, Gotthold August Weber, J\u00fcrgen Weber", "s_expression": "(DIFF (AND (JOIN P734 Q1409226) (JOIN P31 Q502895)) (JOIN P106 Q4773904))", "s_expression_cores": ["(AND (JOIN P734 Q1409226) (JOIN P31 Q502895))", "(JOIN P106 Q4773904)"], "sparql_delex": "SELECT ?x WHERE { ?x wdt:P734 wd:Q1409226 . ?x wdt:P31 wd:Q502895 .  FILTER NOT EXISTS { ?x wdt:P106 wd:Q4773904 .  } }", "results": ["Q1585137", "Q1603036", "Q15970299", "Q2591692", "Q98889", "Q3290641", "Q2428045", "Q1698045", "Q15621591", "Q15621590", "Q1708208", "Q15986562", "Q1285202", "Q3783193", "Q1333726", "Q2063011", "Q5298193", "Q5499009", "Q1505466", "Q18684004", "Q2784029", "Q76707", "Q15859913", "Q3768390", "Q3769305", "Q2646098", "Q3194017", "Q1584440", "Q154812", "Q2575579", "Q1530496", "Q2575573", "Q2575571", "Q2575575", "Q16187366", "Q3180648", "Q6793656", "Q3591409", "Q10533329", "Q5882331", "Q1583000", "Q1583002", "Q1583004", "Q1583006", "Q525676", "Q1263557", "Q18230", "Q13104537", "Q5423999", "Q1539706", "Q88866", "Q2444545", "Q17325096", "Q17576277", "Q211834", "Q19661475", "Q1583554", "Q1587582", "Q822627", "Q21406356", "Q1222981", "Q1041058", "Q1819302", "Q18157421", "Q5115832", "Q126280", "Q23540755", "Q1243269", "Q1552837", "Q595232", "Q15435852", "Q15820692", "Q104841", "Q1340521", "Q15782317", "Q7377354", "Q6531977", "Q5043618", "Q15063134", "Q695097", "Q1717808", "Q27244400", "Q18129179", "Q6490278", "Q1717806", "Q1717805", "Q1550783", "Q4878881", "Q76514", "Q1905533", "Q2588527", "Q6765349", "Q7172325", "Q1686764", "Q1382917", "Q18624517", "Q869663", "Q18201703", "Q16744491", "Q1566589", "Q15836720", "Q19667692", "Q16337427", "Q7983513", "Q15812064", "Q17087758", "Q8019657", "Q977396", "Q15815089", "Q2225551", "Q124692", "Q2586034", "Q2571405", "Q8002340", "Q19193510", "Q325916", "Q13230514", "Q2899027", "Q1286583", "Q108629", "Q2546695", "Q435131", "Q1557782", "Q78127", "Q1100145", "Q364489", "Q766330", "Q286894", "Q5549285", "Q1599179", "Q1599178", "Q3431320", "Q90909", "Q501159", "Q79023", "Q79022", "Q561244", "Q1575911", "Q565307", "Q86773", "Q16337778", "Q4734255", "Q2504860", "Q2526748", "Q1558789", "Q11771893", "Q7689331", "Q2646092", "Q15840414", "Q7154266", "Q88219", "Q553619", "Q7364524", "Q588653", "Q7002370", "Q956751", "Q1233445", "Q1429955", "Q1429954", "Q15429145", "Q1727930", "Q1331587", "Q1468831", "Q77492", "Q7345991", "Q1353456", "Q5730245", "Q98110", "Q13103378", "Q1300675", "Q1398617", "Q18410412", "Q817002", "Q98690", "Q1672854", "Q1403888", "Q1546713", "Q6271738", "Q5941882", "Q1645302", "Q323112", "Q2143654", "Q19720932", "Q3839177", "Q16540304", "Q15435207", "Q6271735", "Q2440193", "Q6385198", "Q6212930", "Q76889", "Q19513622", "Q3857286", "Q1360530", "Q119834", "Q595228", "Q595226", "Q340501", "Q3301520", "Q3301523", "Q5335552", "Q1291645", "Q2501919", "Q107119", "Q1935940", "Q3675580", "Q5240898", "Q1908586", "Q19502043", "Q15833859", "Q440689", "Q5268222", "Q16574118", "Q2075975", "Q6695757", "Q2040903", "Q3124373", "Q1378132", "Q2040908", "Q4105706", "Q18608898", "Q1493974", "Q18635936", "Q1083839", "Q18609563", "Q1464082", "Q86111", "Q13104841", "Q1588455", "Q7329863", "Q471646", "Q566363", "Q18067703", "Q98897", "Q2508857", "Q13563217", "Q268912", "Q6220156", "Q6371472", "Q1286956", "Q86730", "Q117072", "Q1444407", "Q621522", "Q2575583", "Q2369617", "Q194856", "Q1795560", "Q3175098", "Q2785843", "Q1594365", "Q6263326", "Q17353085", "Q87733", "Q106479", "Q106576", "Q6217061", "Q16235969", "Q1599180", "Q1599181", "Q15787306", "Q79010", "Q77512", "Q1086066", "Q5659761", "Q1727393", "Q87390", "Q3731615", "Q63875", "Q1086069", "Q574118", "Q2588830", "Q1502520", "Q565886", "Q7626221", "Q2230314", "Q1714659", "Q5127425", "Q1561182", "Q2696231", "Q89236", "Q13426248", "Q1491670", "Q1745841", "Q1745842", "Q2172901", "Q215604", "Q6812821", "Q6150171", "Q1369042", "Q5307358", "Q2166488", "Q15276911", "Q1929751", "Q1594738", "Q1416044", "Q1586864", "Q15840174", "Q19564484", "Q5673274", "Q1603895", "Q1429960", "Q1429961", "Q1658426", "Q76217", "Q1370135", "Q1317869", "Q387675", "Q2159164", "Q19273533", "Q5606400", "Q658828", "Q19297368", "Q2440388", "Q1733306", "Q1733307", "Q3523728", "Q602518", "Q1733308", "Q452802", "Q5225232", "Q1487081", "Q1041485", "Q1896415", "Q1358922", "Q1479816", "Q1082241", "Q2078902", "Q1896418", "Q2078900", "Q6447121", "Q3111535", "Q15059590", "Q2562855", "Q1455833", "Q122163", "Q1566595", "Q72205", "Q13140357", "Q675891", "Q2844588", "Q7984031", "Q2661915", "Q17305236", "Q18552351", "Q107129", "Q2242622", "Q1302302", "Q7384499", "Q16017945", "Q587941", "Q1705993", "Q2428038", "Q3304006", "Q251659", "Q1705994", "Q2225542", "Q1209830", "Q2225544", "Q7789208", "Q19423772", "Q108277", "Q25874", "Q365540", "Q1354178", "Q2348185", "Q5040946", "Q6765450", "Q66916", "Q1287384", "Q2218951", "Q1037631", "Q927687", "Q2040906", "Q945476", "Q18931885", "Q1944791", "Q1984681", "Q6388678", "Q1582999", "Q7940262", "Q1582994", "Q1582997", "Q1039665", "Q571826", "Q1582993", "Q501166", "Q12362800", "Q1804965", "Q1751599", "Q3608074", "Q1444417", "Q16983219", "Q1423170", "Q1601120", "Q2638994", "Q116635", "Q6835251", "Q1259949", "Q19547464", "Q1594605", "Q1557840", "Q275840", "Q1306521", "Q1929012", "Q2060215", "Q3194966", "Q4974125", "Q319687", "Q1529795", "Q1356133", "Q5615990", "Q15858096", "Q1446448", "Q121823", "Q15436975", "Q3519411", "Q15854098", "Q18636888", "Q1878629", "Q2130825", "Q16008125", "Q696503", "Q1731129", "Q1630051", "Q1630052", "Q991871", "Q19630016", "Q18390743", "Q3357854", "Q59448", "Q7831870", "Q3127938", "Q1712121", "Q5487493", "Q1913588", "Q1905205", "Q15454838", "Q1597094", "Q16854629", "Q19279824", "Q3430265", "Q1309651", "Q1894409", "Q6212928", "Q973038", "Q1635695", "Q3611261", "Q16670086", "Q18019433", "Q13424163", "Q18857005", "Q1577977", "Q2839206", "Q1914115", "Q5606757", "Q2418572", "Q1604300", "Q535489", "Q21033310", "Q11974288", "Q3806295", "Q16292924", "Q75683", "Q2760984", "Q2852998", "Q1309190", "Q5535684", "Q1460527", "Q2978580", "Q6074857", "Q1533194", "Q105648", "Q6523072", "Q15438723", "Q2675995", "Q1462748", "Q1478897", "Q1462744", "Q1462747", "Q4105707", "Q4105701", "Q2058554", "Q18624476", "Q367391", "Q764418", "Q816629", "Q3292083", "Q3166444", "Q16214680", "Q15616240", "Q6576802", "Q15734529", "Q19003256", "Q3275748", "Q1510890", "Q2125182", "Q7563080", "Q18334880", "Q18684397", "Q2526428", "Q1237319", "Q16269527", "Q1369112", "Q445015", "Q15874495", "Q4410079", "Q1016513", "Q442832", "Q1280976", "Q125393", "Q2846766", "Q1490760", "Q1299572", "Q4934331", "Q4934330", "Q1412671", "Q3369944", "Q6538104", "Q238107", "Q84500", "Q7634326", "Q7291620", "Q865396", "Q17326561", "Q258975", "Q13518982", "Q1446819", "Q1819867", "Q2575590", "Q17515469", "Q108389", "Q1415041", "Q1684946", "Q436336", "Q948721", "Q2146235", "Q1708214", "Q2087278", "Q1405875", "Q7490259", "Q22213227", "Q5496519", "Q90614", "Q5171253", "Q1929746", "Q877375", "Q16014540", "Q19513673", "Q1929749", "Q1929748", "Q16549997", "Q5202425", "Q2159158", "Q6175244", "Q1271411", "Q1276968", "Q16886480", "Q7963512", "Q3340873", "Q6963067", "Q6205544", "Q1468815", "Q15820045", "Q3484626", "Q701495", "Q15450840", "Q16830915", "Q2830364", "Q1698579", "Q15784586", "Q6233836", "Q13512996", "Q1582996", "Q3499296", "Q1414118", "Q18413011", "Q1677662", "Q1466006", "Q7808419", "Q3134055", "Q501164", "Q2076170", "Q7650989", "Q1708674", "Q752860", "Q18020082", "Q66496", "Q16054269", "Q7498880", "Q1449388", "Q1449389", "Q1261489", "Q7172326", "Q17125660", "Q1449383", "Q15456894", "Q7794941", "Q4679956", "Q6446953", "Q18129176", "Q1910373", "Q1841174", "Q15433289", "Q104556", "Q16216919", "Q104552", "Q15815384", "Q1577116", "Q15444942", "Q74291", "Q18578508", "Q1364514", "Q2591939", "Q4726776", "Q89971", "Q2263210", "Q1707641", "Q764428", "Q64289", "Q1468034", "Q15455945", "Q101197", "Q2644481", "Q348360", "Q7288246", "Q2038796", "Q1716843", "Q2080370", "Q1417389", "Q17254558", "Q1741588", "Q4830374", "Q16205461", "Q63149", "Q1715563", "Q2591686", "Q5085679", "Q1506331", "Q1506330", "Q533768", "Q2428050", "Q1544430", "Q617330", "Q102552", "Q2591688", "Q2591689", "Q1099619", "Q1309137", "Q5481441", "Q214168", "Q2078898", "Q90248", "Q5235513", "Q6989466", "Q1427998", "Q2063007", "Q1729606", "Q1037445", "Q1381804", "Q1903104", "Q21544759", "Q13424164", "Q16524640", "Q5538337", "Q105091", "Q15435862", "Q1505170", "Q1044583", "Q1241401", "Q2848802", "Q1576360", "Q16440277", "Q16863923", "Q16440275", "Q121740", "Q368393", "Q98913", "Q1347268", "Q7235553", "Q2642788", "Q15454020", "Q89156", "Q13101631", "Q869827", "Q495578", "Q1331810", "Q1417546", "Q1545198", "Q19414384", "Q1913592", "Q1582548", "Q2129570", "Q120461", "Q1455889", "Q1545202", "Q1349350", "Q1082867", "Q1543212", "Q378638", "Q2065784", "Q71065", "Q4873291", "Q65739", "Q85846", "Q13101754", "Q5295295", "Q509064", "Q1571596", "Q1819300", "Q1895997", "Q1693452", "Q16005800", "Q1485374", "Q6187546", "Q15450823", "Q1322977", "Q18027198", "Q15837052", "Q19569833", "Q6698565", "Q15448558", "Q1445136", "Q569592", "Q125546", "Q6775782", "Q3991378", "Q1917783", "Q15455220", "Q2163083", "Q95170", "Q1389572", "Q1745121", "Q19278133", "Q2960889", "Q13562105", "Q19003265", "Q95851", "Q2150872", "Q2150873", "Q2150870", "Q13034707", "Q2575580", "Q832750", "Q4135170", "Q2337862", "Q1097856", "Q13102669", "Q86499", "Q12715776", "Q105655", "Q5109626", "Q1464043", "Q5200170", "Q2129814", "Q4756509", "Q551318", "Q1761630", "Q5673277", "Q863267", "Q4886648", "Q19310017", "Q15452964", "Q18707132", "Q1574174", "Q4911306", "Q18021814", "Q15428773", "Q1383578", "Q5217052", "Q15433061", "Q4735828", "Q3637962", "Q3012850", "Q16064495", "Q111408", "Q316765", "Q1642685", "Q17126664", "Q15982317", "Q18507793", "Q4014569", "Q377000", "Q122564", "Q7329865", "Q2575587", "Q16234312", "Q2575584", "Q49709", "Q2546692", "Q1708366", "Q1469018", "Q2163871", "Q5217746", "Q7597951", "Q1159239", "Q11849806", "Q1273239", "Q5083414", "Q1082236", "Q15907030", "Q19209142", "Q123818", "Q2087282", "Q5498819", "Q2593876", "Q18334875", "Q1713048", "Q2797529", "Q19513760", "Q16943798", "Q5361685", "Q1510490", "Q1446105", "Q1693989", "Q5238334", "Q1450021", "Q2546688", "Q15243532", "Q1794231", "Q1468823", "Q2165183", "Q1468821", "Q7499612", "Q1690565", "Q1284514", "Q1498945", "Q3219576", "Q4978439", "Q84464", "Q123686", "Q16266478", "Q10364534", "Q1284996", "Q1720013", "Q1841449", "Q7360811", "Q12305751", "Q5739878", "Q1086064", "Q547289", "Q1360527", "Q1360525", "Q215648", "Q19284750", "Q107927", "Q1231944", "Q1449391", "Q1449390", "Q19059951", "Q98193", "Q2636521", "Q19663002", "Q2418454", "Q1512718", "Q2546704", "Q121251", "Q1440870", "Q4795213", "Q64689", "Q6491266", "Q15842745", "Q724796", "Q1599702", "Q1082239", "Q1159881", "Q426798", "Q5546113", "Q2337864", "Q1224087", "Q509732", "Q535334", "Q1548649", "Q4961587", "Q1803445", "Q1082234", "Q462440", "Q3980862", "Q3440294", "Q1613014", "Q1280349", "Q8009898", "Q1383883", "Q7291828", "Q1295046"], "coreference_resolved_question": "Which people have Weber as their family name and are not working as anthropologist?", "s_expression_fn": "(DIFF (AND (JOIN family_name Weber) (JOIN instance_of common_name)) (JOIN occupation anthropologist))", "predicted_s_expression_fn": "(DIFF (AND (JOIN (R family_name) Weber) (JOIN instance_of common_name)) (AND (JOIN (R occupation) anthropologist) (JOIN instance_of common_name)))", "predicted_s_expression": "", "sparql_attempt_count": 2, "actions": ""}, {"turnID": "67.112.3", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Single_Relation|Incomplete", "question": "Which administrative territory is the native country of Yui Mizuno ? [SEP] Japan [SEP] Who is that administrative territory a distributor of ? [SEP] Dance Dance Revolution SuperNova [SEP] Who produced that application ? [SEP] Konami [SEP] And also Base Wars [CTX]", "answer": "Konami", "s_expression": "(AND (JOIN (R P178) Q1975690) (JOIN P31 Q7397) (JOIN (R P178) Q2034914))", "s_expression_cores": ["(AND (JOIN (R P178) Q1975690) (JOIN P31 Q7397) (JOIN (R P178) Q2034914))"], "sparql_delex": "SELECT ?x WHERE { wd:Q1975690 wdt:P178 ?x . ?x wdt:P31 wd:Q7397 .  wd:Q2034914 wdt:P178 ?x .  }", "results": ["Q45700"], "coreference_resolved_question": "Who produced Base Wars?", "s_expression_fn": "(AND (JOIN (R developer) Dance_Dance_Revolution_SuperNova) (JOIN instance_of software) (JOIN (R developer) Base_Wars))", "predicted_s_expression_fn": "(AND (JOIN (R producer) Base_Wars) (JOIN instance_of common_name))", "predicted_s_expression": "", "sparql_attempt_count": 2, "actions": ""}, {"turnID": "67.30.6", "question_type": "Logical Reasoning (All)", "description": "Logical|Difference|Multiple_Relation", "question": "Which political territories have diplomatic relations with Switzerland and are not the countries of citizenship of Wilhelm Schneider ? [CTX]", "answer": "Australia, Canada", "s_expression": "(DIFF (AND (JOIN (R P530) Q39) (JOIN P31 Q1048835)) (JOIN (R P27) Q2574945))", "s_expression_cores": ["(AND (JOIN (R P530) Q39) (JOIN P31 Q1048835))", "(JOIN (R P27) Q2574945)"], "sparql_delex": "SELECT ?x WHERE { wd:Q39 wdt:P530 ?x . ?x wdt:P31 wd:Q1048835 .  FILTER NOT EXISTS { wd:Q2574945 wdt:P27 ?x .  } }", "results": ["Q408", "Q16"], "coreference_resolved_question": "Which political territories have diplomatic relations with Switzerland and are not the countries of citizenship of Wilhelm Schneider?", "s_expression_fn": "(DIFF (AND (JOIN (R diplomatic_relation) Switzerland) (JOIN instance_of political_territorial_entity)) (JOIN (R country_of_citizenship) Wilhelm_Schneider))", "predicted_s_expression_fn": "(DIFF (AND (JOIN diplomatic_relation Switzerland) (JOIN instance_of political_territorial_entity)) (AND (JOIN country_of_citizenship Wilhelm_Schneider) (JOIN instance_of political_territorial_entity)))", "predicted_s_expression": "", "sparql_attempt_count": 1, "actions": ""}, {"turnID": "1459.111.5", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Single_Relation|Incomplete", "question": "Which administrative territory is Paul K. Carlton an inhabitant of ? [SEP] United States of America [SEP] And also Marlene Behrmann [CTX]", "answer": "United States of America", "s_expression": "(AND (JOIN (R P27) Q7151663) (JOIN P31 Q15617994) (JOIN (R P27) Q6771717))", "s_expression_cores": ["(AND (JOIN (R P27) Q7151663) (JOIN P31 Q15617994) (JOIN (R P27) Q6771717))"], "sparql_delex": "SELECT ?x WHERE { wd:Q7151663 wdt:P27 ?x . ?x wdt:P31 wd:Q15617994 .  wd:Q6771717 wdt:P27 ?x .  }", "results": ["Q30"], "coreference_resolved_question": "Which administrative territory is Marlene Behrmann an inhabitant of?", "s_expression_fn": "(AND (JOIN (R country_of_citizenship) Paul_K._Carlton) (JOIN instance_of designation_for_an_administrative_territorial_entity) (JOIN (R country_of_citizenship) Marlene_Behrmann))", "predicted_s_expression_fn": "(AND (JOIN (R country_of_citizenship) Paul_K._Carlton) (JOIN instance_of designation_for_an_administrative_territorial_entity) (JOIN (R country_of_citizenship) Marlene_Behrmann))", "predicted_s_expression": "(AND (JOIN (R P27) Q7151663) (JOIN P31 Q15617994) (JOIN (R P27) Q6771717))", "sparql_attempt_count": 2, "actions": "SELECT ?x WHERE { wd:Q7151663 wdt:P27 ?x . ?x wdt:P31 wd:Q15617994 . wd:Q6771717 wdt:P27 ?x . }"}, {"turnID": "1459.52.2", "question_type": "Logical Reasoning (All)", "description": "Logical|Union|Multiple_Relation", "question": "Which nucleic acid sequences have genetic relation with colorectal cancer or encode putative Glutathione S-transferase    RSP_1591 ? [CTX]", "answer": "Some of them are CDH1, HSPA12A, NXN, MYNN, CCND2, SMAD7, RHPN2, ACOXL, SLC22A3, DPP6", "s_expression": "(OR (AND (JOIN (R P2293) Q188874) (JOIN P31 Q863908)) (AND (JOIN (R P702) Q23052811) (JOIN P31 Q863908)))", "s_expression_cores": ["(AND (JOIN (R P2293) Q188874) (JOIN P31 Q863908))", "(AND (JOIN (R P702) Q23052811) (JOIN P31 Q863908))"], "sparql_delex": "SELECT ?x WHERE { { wd:Q188874 wdt:P2293 ?x . ?x wdt:P31 wd:Q863908 .  } UNION { wd:Q23052811 wdt:P702 ?x . ?x wdt:P31 wd:Q863908 .  } }", "results": ["Q5198271", "Q14913892", "Q18048027", "Q18041678", "Q18028450", "Q18055322", "Q18045643", "Q14904375", "Q18041733", "Q18053900", "Q18031583", "Q18035617", "Q17914420", "Q17859787", "Q23030534", "Q18031866", "Q18042141", "Q18028460", "Q18038668"], "coreference_resolved_question": "Which nucleic acid sequences have genetic relation with colorectal cancer or encode putative Glutathione S-transferase RSP_1591?", "s_expression_fn": "(OR (AND (JOIN (R genetic_association) colorectal_cancer) (JOIN instance_of nucleic_acid_sequence)) (AND (JOIN (R encoded_by) putative_Glutathione_S-transferase____RSP_1591) (JOIN instance_of nucleic_acid_sequence)))", "predicted_s_expression_fn": "(OR (AND (JOIN (R genetic_association) colorectal_cancer) (JOIN (R encoded_by) putative_Glutathione_S-transferase____RSP_1591))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "1459.23.9", "question_type": "Logical Reasoning (All)", "description": "Logical|Difference|Single_Relation", "question": "Which national sports teams competed in 2002 FIFA World Cup but not 1998 FIFA World Cup ? [CTX]", "answer": "Some of them are Portugal national football team, Ecuador national football team, Republic of Ireland national football team, Russia national football team, Uruguay national football team, Senegal national football team, Sweden national football team, Slovenia national football team, Turkey national football team, Costa Rica national football team", "s_expression": "(DIFF (AND (JOIN (R P1923) Q47735) (JOIN P31 Q1194951)) (JOIN (R P1923) Q101730))", "s_expression_cores": ["(AND (JOIN (R P1923) Q47735) (JOIN P31 Q1194951))", "(JOIN (R P1923) Q101730)"], "sparql_delex": "SELECT ?x WHERE { wd:Q47735 wdt:P1923 ?x . ?x wdt:P31 wd:Q1194951 .  FILTER NOT EXISTS { wd:Q101730 wdt:P1923 ?x .  } }", "results": ["Q166196", "Q130582", "Q267245", "Q194387", "Q163547", "Q987584", "Q172221", "Q134916", "Q726080", "Q207441", "Q483856", "Q160826"], "coreference_resolved_question": "Which national sports teams competed in 2002 FIFA World Cup but not 1998 FIFA World Cup?", "s_expression_fn": "(DIFF (AND (JOIN (R participating_team) 2002_FIFA_World_Cup) (JOIN instance_of national_sports_team)) (JOIN (R participating_team) 1998_FIFA_World_Cup))", "predicted_s_expression_fn": "(DIFF (AND (JOIN sports_discipline_competed_in 2002_FIFA_World_Cup) (JOIN instance_of national_sports_team)) (AND (JOIN sports_discipline_competed_in 1998_FIFA_World_Cup) (JOIN instance_of national_sports_team))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "668.89.2", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Single_Relation|Incomplete", "question": "What did Ram\u00f3n Rodr\u00edguez participate in ? [SEP] association football [SEP] Which sex does that person have ? [SEP] male [SEP] And also Bernard Favre d'Echallens [CTX]", "answer": "male", "s_expression": "(AND (JOIN (R P21) Q7290553) (JOIN P31 Q290) (JOIN (R P21) Q4893118))", "s_expression_cores": ["(AND (JOIN (R P21) Q7290553) (JOIN P31 Q290) (JOIN (R P21) Q4893118))"], "sparql_delex": "SELECT ?x WHERE { wd:Q7290553 wdt:P21 ?x . ?x wdt:P31 wd:Q290 .  wd:Q4893118 wdt:P21 ?x .  }", "results": ["Q6581097"], "coreference_resolved_question": "Which sex does Bernard Favre d'Echallens have?", "s_expression_fn": "(AND (JOIN (R sex_or_gender) Ram\u00f3n_Rodr\u00edguez) (JOIN instance_of sex) (JOIN (R sex_or_gender) Bernard_Favre_d'Echallens))", "predicted_s_expression_fn": "(AND (JOIN (R sex_or_gender) Ram\u00f3n_Rodr\u00edguez) (JOIN instance_of sex) (JOIN (R sex_or_gender) Bernard_Favre_d'Echallens)", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "1052.128.2", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Single_Relation|Incomplete", "question": "Which occupation has Giovanni Masiello as his/her 's career ? [SEP] association football player [SEP] Which sport was that person a part of ? [SEP] association football [SEP] And also Khin Marlar Tun [CTX]", "answer": "association football", "s_expression": "(AND (JOIN (R P641) Q3767706) (JOIN P31 Q349) (JOIN (R P641) Q22162723))", "s_expression_cores": ["(AND (JOIN (R P641) Q3767706) (JOIN P31 Q349) (JOIN (R P641) Q22162723))"], "sparql_delex": "SELECT ?x WHERE { wd:Q3767706 wdt:P641 ?x . ?x wdt:P31 wd:Q349 .  wd:Q22162723 wdt:P641 ?x .  }", "results": ["Q2736"], "coreference_resolved_question": "Which occupation has Khin Marlar Tun as his/her 's career?", "s_expression_fn": "(AND (JOIN (R sport) Giovanni_Masiello) (JOIN instance_of sport) (JOIN (R sport) Khin_Marlar_Tun))", "predicted_s_expression_fn": "(AND (JOIN sports_discipline_competed_in association_football) (JOIN instance_of common_name) (JOIN (R sports_discipline_competed_in) Khin_Marlar_Tun))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "1052.65.2", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Single_Relation|Incomplete", "question": "Where did Stewart Symes die ? [SEP] Folkestone [SEP] Which armed conflict did that person take part in ? [SEP] Second Boer War [SEP] And also John Hoad [CTX]", "answer": "Second Boer War", "s_expression": "(AND (JOIN (R P607) Q432860) (JOIN P31 Q350604) (JOIN (R P607) Q6239428))", "s_expression_cores": ["(AND (JOIN (R P607) Q432860) (JOIN P31 Q350604) (JOIN (R P607) Q6239428))"], "sparql_delex": "SELECT ?x WHERE { wd:Q432860 wdt:P607 ?x . ?x wdt:P31 wd:Q350604 .  wd:Q6239428 wdt:P607 ?x .  }", "results": ["Q215112"], "coreference_resolved_question": "Which armed conflict did John Hoad take part in?", "s_expression_fn": "(AND (JOIN (R conflict) Stewart_Symes) (JOIN instance_of armed_conflict) (JOIN (R conflict) John_Hoad))", "predicted_s_expression_fn": "(AND (JOIN (R conflict) Stewart_Symes) (JOIN (R conflict) John_Hoad))", "predicted_s_expression": "(AND (JOIN (R P607) Q432860) (JOIN (R P607) Q6239428))", "sparql_attempt_count": 1, "actions": "SELECT ?x WHERE { wd:Q432860 wdt:P607 ?x . wd:Q6239428 wdt:P607 ?x . }"}, {"turnID": "1052.4.3", "question_type": "Logical Reasoning (All)", "description": "Logical|Difference|Single_Relation", "question": "Which applications as distributed via floppy disk but not CD-ROM ? [CTX]", "answer": "Some of them are Captain Comic, World Games, Bubble and Squeak, The Elder Scrolls: Arena, Raid on Bungeling Bay, Asuka 120% Burning Fest, Typhoon Thompson, Raptor: Call of the Shadows, The Ancient Art of War, Elvira II: The Jaws of Cerberus", "s_expression": "(DIFF (AND (JOIN P437 Q5293) (JOIN P31 Q166142)) (JOIN P437 Q7982))", "s_expression_cores": ["(AND (JOIN P437 Q5293) (JOIN P31 Q166142))", "(JOIN P437 Q7982)"], "sparql_delex": "SELECT ?x WHERE { ?x wdt:P437 wd:Q5293 . ?x wdt:P31 wd:Q166142 .  FILTER NOT EXISTS { ?x wdt:P437 wd:Q7982 .  } }", "results": ["Q2319782", "Q5584569", "Q1976440", "Q2891842", "Q16267045", "Q5305280", "Q3968366", "Q74401", "Q2290750", "Q5256222", "Q7624301", "Q2264526", "Q1767176", "Q7405545", "Q3803365", "Q5592862", "Q3477254", "Q902612", "Q5174043", "Q16258837", "Q932875", "Q3143659", "Q3154519", "Q2846940", "Q6503495", "Q11753661", "Q4929118", "Q4018803", "Q4053202", "Q476514", "Q15037092", "Q7861395", "Q8062794", "Q1126146", "Q7451346", "Q6985656", "Q683590", "Q3552302", "Q5402741", "Q99730", "Q2993575", "Q7687275", "Q3639260", "Q8025300", "Q5216083", "Q189784", "Q88649", "Q3986235", "Q1151634", "Q940755", "Q4020810", "Q4354303", "Q44346", "Q576773", "Q2840757", "Q5618529", "Q3958950", "Q479267", "Q4986261", "Q4747366", "Q5619390", "Q2358082", "Q5188264", "Q7813600", "Q7353366", "Q7757466", "Q100042", "Q4843952", "Q3964194", "Q3397888", "Q15121695", "Q2836815", "Q7727695", "Q2240236", "Q7201037", "Q54853", "Q5027753", "Q512485", "Q7132034", "Q2073449", "Q2163504", "Q681057", "Q2708024", "Q2196385", "Q2138242", "Q3007751", "Q4869961", "Q7645090", "Q3569963", "Q4829138", "Q3401632", "Q6680164", "Q928987", "Q2353348", "Q7249329", "Q2521832", "Q2026413", "Q3498071", "Q2316017", "Q3843605", "Q245284", "Q7643426", "Q1142344", "Q1115523", "Q5245447", "Q7389524", "Q3127480", "Q1651027", "Q3907266", "Q3907267", "Q3907264", "Q816152", "Q2815984", "Q7798674", "Q7120933", "Q13390015", "Q16267624", "Q6002392", "Q644433", "Q2268000", "Q4927058", "Q3020724", "Q7811077", "Q3928090", "Q5054963", "Q7077649", "Q6352793", "Q2518506", "Q438394", "Q7575927", "Q5241254", "Q7674064", "Q4393076", "Q2129938", "Q7911556", "Q936016", "Q4977861", "Q3538279", "Q3300211", "Q1990991", "Q2669973", "Q2788891", "Q2693436", "Q2539481", "Q7683036", "Q686277", "Q6907718", "Q2321832", "Q4837424", "Q8036311", "Q3965806", "Q19602528", "Q3965804", "Q3965803", "Q3228640", "Q3356423", "Q4751673", "Q1052386", "Q1571488", "Q6382691", "Q2710703", "Q2592213", "Q2874682", "Q4021865", "Q1025077", "Q6472552", "Q7659292", "Q960288", "Q3519780", "Q2023210", "Q6938137", "Q5215764", "Q2462346", "Q16259657", "Q3049661", "Q6842765", "Q3888921", "Q5197693", "Q1200546", "Q7575853", "Q383868", "Q6546573", "Q11188571", "Q7635526", "Q3482155", "Q7317933", "Q7572185", "Q2800857", "Q2453548", "Q7832451", "Q3529233", "Q4650273", "Q7147981", "Q12155666", "Q1958699", "Q179247", "Q5075219", "Q18940", "Q7251388", "Q2679012", "Q5576059", "Q7762601", "Q3496955", "Q2742505", "Q16267810", "Q1445841", "Q599522", "Q965458", "Q8020502", "Q3368707", "Q1523204", "Q2783606", "Q6808060", "Q3255718", "Q5306211", "Q6220778", "Q257540", "Q7758082", "Q4049891", "Q3927705", "Q5250165", "Q7761800", "Q1493792", "Q5419922", "Q1751705", "Q3057369", "Q7974208", "Q8029798", "Q1759413", "Q3050834", "Q4048416", "Q1089369", "Q7207609", "Q2805289", "Q885249", "Q5249255", "Q1824307", "Q6517712", "Q7096709", "Q939597", "Q966207", "Q1457176", "Q7927878", "Q1749543", "Q1851926", "Q7687268", "Q1239831", "Q7625561", "Q6422348", "Q7853329", "Q8034284", "Q1872394", "Q1291936", "Q5474798", "Q7628778", "Q1995964", "Q6056318", "Q4649130", "Q4908891", "Q1634660", "Q7885413", "Q7572477", "Q3785570", "Q737653", "Q368286", "Q4781143", "Q490786", "Q91268", "Q6773165", "Q3565398", "Q2956460", "Q187116", "Q2662389", "Q2328923", "Q1114985", "Q1395352", "Q5529749", "Q8025299", "Q2496806", "Q3303799", "Q3001971", "Q7601888", "Q3283769", "Q11707605", "Q4049460", "Q689380", "Q5505259", "Q3179162", "Q6929139", "Q3611758", "Q1959814", "Q2717834", "Q3492583", "Q7537495", "Q1636289", "Q3658019", "Q3954072", "Q7577947", "Q5197711", "Q3520514", "Q4921219", "Q1528440", "Q3869173", "Q7622912", "Q5423591", "Q4646847", "Q4036348", "Q144559", "Q6571544", "Q7621442", "Q3506678", "Q4964164", "Q4780064", "Q4043259", "Q835761", "Q739658", "Q1152304", "Q2364133", "Q3397859", "Q5228843", "Q6826908", "Q1114596", "Q7861327", "Q1753152", "Q3352809", "Q6913388", "Q16259709", "Q3566206", "Q7600978", "Q7601073", "Q1114758", "Q4052351", "Q5037252", "Q1973612", "Q3966420", "Q5305307", "Q2858740", "Q7539546", "Q3140324", "Q7577965", "Q2370268", "Q731566", "Q16258811", "Q14654035", "Q5958463", "Q6730725", "Q1790249", "Q6460616", "Q11313863", "Q429994", "Q4033714", "Q1985756", "Q7505686", "Q16259387", "Q6146248", "Q7763027", "Q1410730", "Q1269114", "Q3520704", "Q4752987", "Q1454006", "Q6864535", "Q4787747", "Q1738113", "Q4652331", "Q7271442", "Q2482386", "Q5305404", "Q2299128", "Q6010763", "Q8043622", "Q5274319", "Q5707049", "Q2499122", "Q1421541", "Q7537483", "Q15036797", "Q4811852", "Q4740835", "Q2955873", "Q7810960", "Q3537356", "Q1242214", "Q351027", "Q3262992", "Q3666089", "Q843485", "Q2127543", "Q1406407", "Q2192007", "Q2278570", "Q393114", "Q6981517", "Q537071", "Q7712620", "Q3357671", "Q4726426", "Q3501384", "Q7097482", "Q5122372", "Q6890040", "Q2593002", "Q7100143", "Q5527458", "Q3198011", "Q7833695", "Q1921408", "Q5447760", "Q864177", "Q1473424", "Q16267544", "Q1923697", "Q2407494", "Q2829264", "Q1114108", "Q3855491", "Q3855490", "Q1857162", "Q2927391", "Q1997680", "Q845327", "Q2268809", "Q2662802", "Q634943", "Q4399887", "Q7064010", "Q7828748", "Q15036770", "Q15036777", "Q4021847", "Q7169579", "Q7919926", "Q510308", "Q1359413", "Q5958622", "Q3153299", "Q2438733", "Q2452600", "Q5519755", "Q1264434", "Q1264433", "Q7601024", "Q9050128", "Q6422350", "Q1074499", "Q5419358", "Q1140164", "Q583063", "Q3968290", "Q4675779", "Q7894198", "Q979571", "Q1939440", "Q1798032", "Q7575884", "Q537381", "Q1470234", "Q1462499", "Q16150648", "Q3541168", "Q3566234", "Q493603", "Q55605", "Q7131763", "Q1438437", "Q3066602", "Q6945458", "Q2033784", "Q27296", "Q1421188", "Q2748421", "Q2542131", "Q2433684", "Q1607957", "Q2023451", "Q4038498", "Q3099263", "Q5308246", "Q15052201", "Q1467531", "Q1871245", "Q8042374", "Q2191592", "Q5595478", "Q6517969", "Q1059847", "Q7642466", "Q2295252", "Q2457824", "Q4957989", "Q7805184", "Q7676257", "Q955289", "Q1051875", "Q2786897", "Q2026208", "Q5530766", "Q5530764", "Q970101", "Q3862744", "Q3259851", "Q1139264", "Q5645691", "Q2145385", "Q1155168", "Q1255124", "Q5413262", "Q2527040", "Q4808478", "Q7728547", "Q831664", "Q4788883", "Q686072", "Q2746450", "Q3634428", "Q990783", "Q7517255", "Q1083317", "Q4043185", "Q8028764", "Q8028765", "Q4869963", "Q7836700", "Q3687141", "Q3968313", "Q8028768", "Q8028769", "Q7359993", "Q1428892", "Q7455114", "Q2453705", "Q5556500", "Q2442485", "Q1967833", "Q2103845", "Q4916110", "Q3144969", "Q6034394", "Q3282935", "Q3953603", "Q1632099", "Q10334191", "Q5631063", "Q895143", "Q3811898", "Q7105842", "Q2268736", "Q8141343", "Q1254394", "Q1721167", "Q1076255", "Q3851793", "Q755186", "Q1983421", "Q102303", "Q2699180", "Q1133627", "Q3927708", "Q5299706", "Q4833650", "Q16267587", "Q2928581", "Q614831", "Q7642821", "Q2568153", "Q3621830", "Q1177767", "Q1192945", "Q2521841", "Q2732169", "Q7575877", "Q7575874", "Q7575875", "Q5944131", "Q6750568", "Q15036780", "Q269487", "Q15036782", "Q15036783", "Q302300", "Q3281433", "Q4907840", "Q1742178", "Q16250171", "Q3520211", "Q4655016", "Q928439", "Q2411285", "Q1288651", "Q11291191", "Q1891590", "Q1406142", "Q257469", "Q7361282", "Q5331922", "Q7301349", "Q7301345", "Q15726502", "Q3901280", "Q3052927", "Q2610664", "Q3645172", "Q1045068", "Q648302", "Q1931622", "Q3481164", "Q1068006", "Q1051844", "Q771292", "Q1886140", "Q2340473", "Q612088", "Q1224616", "Q2067756", "Q4051101", "Q3726821", "Q7387148", "Q3576040", "Q795399", "Q5598821", "Q262757", "Q3129033", "Q7581693", "Q2015519", "Q7770100", "Q596631", "Q6735695", "Q631275", "Q5149066", "Q2499818", "Q2881306", "Q11544710", "Q2487267", "Q7674078", "Q3293323", "Q2121676", "Q7829778", "Q6960387", "Q4038477", "Q7629123", "Q220174", "Q5321469", "Q5565937", "Q1788165", "Q4356382", "Q4037980", "Q3968321", "Q514680", "Q4021200", "Q4021729", "Q5223409", "Q240143", "Q1642809", "Q11299567", "Q1366813", "Q3683591", "Q1621077", "Q7767301", "Q845645", "Q938696", "Q1507141", "Q2884098", "Q16266989", "Q5329789", "Q2609804", "Q2269596", "Q1110216", "Q6005648", "Q7830768", "Q5152196", "Q7809721", "Q441629", "Q7671289", "Q2014560", "Q2269605", "Q847977", "Q1385731", "Q2676472", "Q2517350", "Q8043166", "Q5636885", "Q4833757", "Q11866441", "Q3399441", "Q685421", "Q3014196", "Q6941300", "Q7737088", "Q1775788", "Q4020596", "Q5397053", "Q2877637", "Q4840184", "Q4636278", "Q55312", "Q4052992", "Q7111404", "Q2168378", "Q1423930", "Q5557490", "Q1345063", "Q7252130", "Q7734693", "Q7824552", "Q1867725", "Q2837508", "Q2524818", "Q5570203", "Q1261715", "Q5414201", "Q2881332", "Q541988", "Q4952870", "Q2679454", "Q841755", "Q955755", "Q5051162", "Q2721726", "Q4994329", "Q6888443", "Q4735142", "Q7575506", "Q3493000", "Q7729412", "Q804628", "Q4788926", "Q5459780", "Q2414187", "Q1043375", "Q16267078"], "coreference_resolved_question": "Which applications are distributed via floppy disk but not CD-ROM?", "s_expression_fn": "(DIFF (AND (JOIN distribution_format floppy_disk) (JOIN instance_of application)) (JOIN distribution_format CD-ROM))", "predicted_s_expression_fn": "(DIFF (AND (JOIN (R distribution_format) (JOIN instance_of application_software)) (JOIN instance_of floppy_disk)) (AND (JOIN (R distribution_format) (JOIN instance_of application_software)) (JOIN instance_of CD-ROM)))", "predicted_s_expression": "(DIFF (AND (JOIN (R P437) (JOIN P31 Q676202)) (JOIN P31 Q3251801)) (AND (JOIN (R P437) (JOIN P31 Q9158658)) (JOIN P31 Q7982)))", "sparql_attempt_count": 2, "actions": "SELECT ?x WHERE { ?x0 wdt:P31 wd:Q676202 . ?x0 wdt:P437 ?x . ?x wdt:P31 wd:Q3251801 . FILTER NOT EXISTS { ?x0 wdt:P31 wd:Q9158658 . ?x0 wdt:P437 ?x . ?x wdt:P31 wd:Q7982 . } }"}, {"turnID": "566.41.4", "question_type": "Logical Reasoning (All)", "description": "Logical|Difference|Multiple_Relation", "question": "Which applications were produced by Sega and do n't Have narratives at Japan ? [CTX]", "answer": "Some of them are Metal Head, WaveRunner, Marksman Shooting & Trap Shooting, Phantasy Star Collection, Dark Wizard, Defenders of Oasis, Dark Edge, Jurassic Park, Dreamcast Collection, Great Ice Hockey", "s_expression": "(DIFF (AND (JOIN P178 Q122741) (JOIN P31 Q166142)) (JOIN P840 Q17))", "s_expression_cores": ["(AND (JOIN P178 Q122741) (JOIN P31 Q166142))", "(JOIN P840 Q17)"], "sparql_delex": "SELECT ?x WHERE { ?x wdt:P178 wd:Q122741 . ?x wdt:P31 wd:Q166142 .  FILTER NOT EXISTS { ?x wdt:P840 wd:Q17 .  } }", "results": ["Q16259337", "Q2485950", "Q4698164", "Q2947736", "Q1142419", "Q1136366", "Q6850237", "Q6850236", "Q1322492", "Q7642559", "Q11187499", "Q7975259", "Q7370844", "Q3477719", "Q5884342", "Q2320846", "Q973462", "Q3676177", "Q3359668", "Q3570110", "Q4047120", "Q5361069", "Q4811604", "Q5907997", "Q20874564", "Q6014157", "Q6553284", "Q1313693", "Q3378066", "Q5457618", "Q16259427", "Q16259248", "Q7754665", "Q1112940", "Q5136729", "Q15588417", "Q863036", "Q11286752", "Q326851", "Q7262651", "Q2740256", "Q3493434", "Q553201", "Q11278422", "Q7853801", "Q3038729", "Q5424163", "Q16267796", "Q3504211", "Q6444457", "Q5910297", "Q2110427", "Q3357305", "Q1046574", "Q2274675", "Q2933153", "Q16259348", "Q4633384", "Q2712635", "Q1892615", "Q3502377", "Q22019772", "Q6034100", "Q3425578", "Q4037828", "Q10290397", "Q7171535", "Q3110163", "Q3416250", "Q7673660", "Q3476413", "Q3487108", "Q2290347", "Q3011983", "Q11541449", "Q625063", "Q5654167", "Q4810523", "Q4032932", "Q5306537", "Q2939793", "Q3574942", "Q4923689", "Q1120208", "Q3110022", "Q19766127", "Q7418067", "Q24204139", "Q860047", "Q5874018", "Q21780566", "Q7460497", "Q5227936", "Q7975258", "Q7446171", "Q7692737", "Q2066844", "Q3284178", "Q7259616", "Q3282498", "Q8068680", "Q8025077", "Q2904000", "Q21472026", "Q8035787", "Q2651563", "Q2339542", "Q877004", "Q3013926", "Q15891020", "Q14629467", "Q16967182", "Q11351697", "Q1592239", "Q3504131", "Q19840171", "Q3059230", "Q2569030", "Q6953706", "Q851032", "Q4034913", "Q3504236", "Q3502593", "Q2411036", "Q5118994", "Q3108122", "Q2742272", "Q3570005", "Q5235054", "Q7728537", "Q3521350", "Q2160091", "Q2762472", "Q2293119", "Q5599351", "Q7698879", "Q3084448", "Q3783659", "Q3422429", "Q2157521", "Q4545526", "Q15197255", "Q7833605", "Q842155", "Q787462", "Q7209241", "Q5681886", "Q3482277", "Q5681883", "Q5681882", "Q2842078", "Q5250293", "Q6507191", "Q55607", "Q5985049", "Q3482279", "Q3517073", "Q7572374", "Q3273389", "Q2069294", "Q2471057", "Q16267620", "Q3517739", "Q2626447", "Q2444946", "Q2864226", "Q2361509", "Q3494169", "Q2785213", "Q3020084", "Q1143285", "Q4169527", "Q2536351", "Q1354273", "Q625305", "Q3461250", "Q1355850", "Q3943319", "Q2745925", "Q3320087", "Q3792575", "Q3532854", "Q3067167", "Q2746118", "Q2197488", "Q3400072", "Q2962094", "Q1974863", "Q11285916", "Q2880343", "Q7575831", "Q2742518", "Q3307213", "Q5646835", "Q18928696", "Q7572361", "Q54323", "Q593781", "Q3129158", "Q2656687", "Q17634308", "Q684160", "Q2190748", "Q2350825", "Q17213743", "Q3627626", "Q1099141", "Q5197892", "Q3496992", "Q1705552", "Q2979513", "Q2377056", "Q3735087", "Q7256164", "Q7706794", "Q3005986", "Q8041477", "Q5150223", "Q6884408", "Q2064091", "Q16259623", "Q4867652", "Q3110025", "Q4955732", "Q3936461", "Q4026850", "Q6948735", "Q2093486", "Q2468410", "Q4944681", "Q16259011", "Q3276785", "Q3152918", "Q8033694", "Q1894954", "Q2825577", "Q7243526", "Q6951407", "Q11278009", "Q1140411", "Q5203545", "Q1915791", "Q2413475", "Q2398038", "Q2248863", "Q2700150", "Q7749689", "Q3036969", "Q626822", "Q4920767", "Q3827361", "Q7198561", "Q3091076", "Q864340", "Q3016286", "Q4034500", "Q5465225", "Q7446162", "Q7446215", "Q1125773", "Q7757155", "Q3046535", "Q4724695", "Q3073673", "Q379017", "Q5223212", "Q2864518", "Q7968158", "Q2742747", "Q2078759", "Q2075272", "Q1608476", "Q6412492", "Q7314753", "Q3568137", "Q7660673", "Q7106582", "Q721001"], "coreference_resolved_question": "Which applications were produced by Sega and don't have narratives at Japan?", "s_expression_fn": "(DIFF (AND (JOIN developer Sega) (JOIN instance_of application)) (JOIN narrative_location Japan))", "predicted_s_expression_fn": "(DIFF (AND (JOIN (R developer) Sega) (AND (JOIN (R narrative_location) Japan) (JOIN instance_of application))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "566.99.9", "question_type": "Logical Reasoning (All)", "description": "Logical|Difference|Multiple_Relation", "question": "Which political territories have diplomatic relationships with United Kingdom and are not Niagara District Secondary School present in ? [CTX]", "answer": "Australia, Germany", "s_expression": "(DIFF (AND (JOIN (R P530) Q145) (JOIN P31 Q1048835)) (JOIN (R P17) Q7023617))", "s_expression_cores": ["(AND (JOIN (R P530) Q145) (JOIN P31 Q1048835))", "(JOIN (R P17) Q7023617)"], "sparql_delex": "SELECT ?x WHERE { wd:Q145 wdt:P530 ?x . ?x wdt:P31 wd:Q1048835 .  FILTER NOT EXISTS { wd:Q7023617 wdt:P17 ?x .  } }", "results": ["Q408", "Q183"], "coreference_resolved_question": "Which political territories have diplomatic relationships with United Kingdom and are not Niagara District Secondary School present in?", "s_expression_fn": "(DIFF (AND (JOIN (R diplomatic_relation) United_Kingdom) (JOIN instance_of political_territorial_entity)) (JOIN (R country) Niagara_District_Secondary_School))", "predicted_s_expression_fn": "(DIFF (AND (JOIN diplomatic_relation United_Kingdom) (JOIN instance_of political_territorial_entity)) (JOIN present_in_work Niagara_District_Secondary_School))", "predicted_s_expression": "(DIFF (AND (JOIN P530 Q145) (JOIN P31 Q1048835)) (JOIN P1441 Q7023617))", "sparql_attempt_count": 2, "actions": "SELECT ?x WHERE { ?x wdt:P530 wd:Q145 . ?x wdt:P31 wd:Q1048835 . FILTER NOT EXISTS { ?x wdt:P1441 wd:Q7023617 . } }"}, {"turnID": "1123.83.8", "question_type": "Logical Reasoning (All)", "description": "Logical|Difference|Multiple_Relation", "question": "Which people were born at Schwerin and do not have gender of female ? [CTX]", "answer": "Some of them are Franz Fischer, Duke John Albert of Mecklenburg, Hermann III. K\u00f6ppen, Duke Henry of Mecklenburg-Schwerin, J\u00fcrgen Brickmann, Friedrich Jentzen, Emil Jacob Jonas, Otto Wickede, Ulrich, Duke of Mecklenburg, Kurt Nolze", "s_expression": "(DIFF (AND (JOIN P19 Q1709) (JOIN P31 Q502895)) (JOIN P21 Q6581072))", "s_expression_cores": ["(AND (JOIN P19 Q1709) (JOIN P31 Q502895))", "(JOIN P21 Q6581072)"], "sparql_delex": "SELECT ?x WHERE { ?x wdt:P19 wd:Q1709 . ?x wdt:P31 wd:Q502895 .  FILTER NOT EXISTS { ?x wdt:P21 wd:Q6581072 .  } }", "results": ["Q120612", "Q1491934", "Q15794266", "Q1870088", "Q15849032", "Q1730528", "Q20767213", "Q1126832", "Q84424", "Q1581499", "Q15447020", "Q364368", "Q45520", "Q890018", "Q1694506", "Q1358837", "Q363030", "Q17747591", "Q15448546", "Q1690623", "Q1280940", "Q89628", "Q1717219", "Q3436283", "Q18029575", "Q1733720", "Q91150", "Q2754379", "Q60697", "Q16739574", "Q72553", "Q1303360", "Q364508", "Q85691", "Q1714489", "Q15436858", "Q1581425", "Q1717047", "Q1528723", "Q686422", "Q1353175", "Q215283", "Q63357", "Q764502", "Q1347671", "Q1037365", "Q471186", "Q1460064", "Q561980", "Q1510459", "Q1587559", "Q1545082", "Q1684046", "Q213877", "Q18021575", "Q822464", "Q1599191", "Q2524454", "Q18628837", "Q1329566", "Q2173510", "Q1403584", "Q1668912", "Q4871649", "Q325874", "Q1556608", "Q1717070", "Q24197438", "Q1288756", "Q15713708", "Q63876", "Q962050", "Q75095", "Q3420261", "Q1279148", "Q1382982", "Q2086549", "Q98013", "Q322296", "Q19595213", "Q98462", "Q1580963", "Q1201470", "Q8005498", "Q1444395", "Q2473172", "Q1510502", "Q1323723", "Q1885345", "Q216201", "Q2140970", "Q2572296", "Q19964226", "Q2440137", "Q15991970", "Q1704989", "Q825198", "Q1431370", "Q1352628", "Q1545155", "Q19964189", "Q472933", "Q1080922", "Q1751893", "Q1163135", "Q72206", "Q2262976", "Q1634839", "Q2283594", "Q60423", "Q1665767", "Q100539", "Q121679", "Q1263235", "Q1439401", "Q2588521", "Q1596699", "Q1272791", "Q1038211", "Q215989", "Q1578225", "Q1369194", "Q57805", "Q1611852", "Q18224081", "Q120075", "Q17123237", "Q473885", "Q102856", "Q1388736", "Q1112476", "Q1459648", "Q1302131", "Q11171851", "Q102340", "Q95305", "Q1464756", "Q106284", "Q1359407", "Q98443", "Q1731543", "Q1382776", "Q2158702", "Q15445464", "Q827481", "Q763091", "Q2546611", "Q1608834", "Q17122669", "Q15818687", "Q97584", "Q2149648", "Q827123", "Q215791", "Q15843506", "Q15432420", "Q1162235", "Q89055", "Q108703", "Q61464", "Q1581456", "Q1714538", "Q64472", "Q1462712", "Q1874826", "Q111242", "Q15794334", "Q19286800", "Q1555648", "Q836252", "Q1288347", "Q500087", "Q1695751", "Q1889907", "Q1336813", "Q2038396", "Q87518", "Q1629846", "Q1564524", "Q15845230", "Q464807", "Q204356", "Q1290194", "Q1446737", "Q100494", "Q15791305", "Q2824697", "Q16888133", "Q101092", "Q18612998", "Q2033852", "Q15428111", "Q19959411", "Q87209", "Q1874485", "Q1293849", "Q1544443", "Q99776", "Q2474954", "Q15446548", "Q2343307", "Q19964409", "Q1580622", "Q1355618", "Q1353576", "Q365288", "Q1039916", "Q60554", "Q57461", "Q503991", "Q16269068", "Q7980254", "Q1233625", "Q1446782", "Q22918523", "Q810634", "Q97667", "Q1084795", "Q1732560", "Q1694564", "Q1458941", "Q15834366", "Q1352396", "Q224666", "Q570989", "Q1460429", "Q1612789", "Q1511363", "Q64251", "Q2287738", "Q1353593", "Q1684018", "Q1874430", "Q1358857", "Q1358856", "Q91721", "Q1459163", "Q361663", "Q1037356", "Q825045", "Q2158325", "Q1418397", "Q214726", "Q1372637", "Q1638850", "Q15440088", "Q58025", "Q15434363", "Q70782", "Q1575420", "Q4205935", "Q15479595", "Q1659501", "Q95670", "Q15793349", "Q96759", "Q18182248", "Q2560941", "Q1440365", "Q108579", "Q91194", "Q22057402", "Q26272271", "Q15820958", "Q687028", "Q321983", "Q1609110", "Q26157450", "Q1160663", "Q553158", "Q63788", "Q877447", "Q91144", "Q1352814", "Q108347", "Q4280656", "Q1358012", "Q764522", "Q110297", "Q1555695"], "coreference_resolved_question": "Which people were born at Schwerin and do not have gender of female?", "s_expression_fn": "(DIFF (AND (JOIN place_of_birth Schwerin) (JOIN instance_of common_name)) (JOIN sex_or_gender female))", "predicted_s_expression_fn": "(DIFF (AND (JOIN place_of_birth Schwerin) (JOIN instance_of common_name)) (AND (JOIN sex_or_gender female) (JOIN instance_of common_name))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "1123.31.7", "question_type": "Logical Reasoning (All)", "description": "Logical|Difference|Multiple_Relation", "question": "Which administrative territories have diplomatic relationships with Italy and are not the countries of citizenship of Robert Capa ? [CTX]", "answer": "Some of them are Kenya, Serbia, South Africa, Slovenia, Bulgaria, Armenia, Iran, Estonia, Georgia, Paraguay", "s_expression": "(DIFF (AND (JOIN (R P530) Q38) (JOIN P31 Q15617994)) (JOIN (R P27) Q152524))", "s_expression_cores": ["(AND (JOIN (R P530) Q38) (JOIN P31 Q15617994))", "(JOIN (R P27) Q152524)"], "sparql_delex": "SELECT ?x WHERE { wd:Q38 wdt:P530 ?x . ?x wdt:P31 wd:Q15617994 .  FILTER NOT EXISTS { wd:Q152524 wdt:P27 ?x .  } }", "results": ["Q805", "Q219", "Q801", "Q189", "Q843", "Q184", "Q423", "Q822", "Q419", "Q668", "Q347", "Q414", "Q227", "Q225", "Q224", "Q55", "Q222", "Q221", "Q145", "Q148", "Q96", "Q31", "Q229", "Q228", "Q33", "Q32", "Q17", "Q37", "Q36", "Q79", "Q34", "Q77", "Q39", "Q1016", "Q739", "Q948", "Q191", "Q733", "Q928", "Q298", "Q45", "Q252", "Q114", "Q399", "Q403", "Q230", "Q233", "Q258", "Q43", "Q212", "Q213", "Q236", "Q211", "Q159", "Q217", "Q214", "Q215", "Q155", "Q218", "Q41", "Q238", "Q796", "Q794", "Q20", "Q1045", "Q889", "Q27", "Q869", "Q29", "Q884", "Q881"], "coreference_resolved_question": "Which administrative territories have diplomatic relationships with Italy and are not the countries of citizenship of Robert Capa?", "s_expression_fn": "(DIFF (AND (JOIN (R diplomatic_relation) Italy) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (JOIN (R country_of_citizenship) Robert_Capa))", "predicted_s_expression_fn": "(DIFF (AND (JOIN diplomatic_relation Italy) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (AND (JOIN country_of_citizenship Robert_Capa) (JOIN instance_of designation_for_an_administrative_territorial_entity)))", "predicted_s_expression": "", "sparql_attempt_count": 1, "actions": ""}, {"turnID": "14.70.4", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Single_Relation|Incomplete", "question": "Which work of art stars Cecil Beaton as actor ? [SEP] Gigi [SEP] Which work of art has that person as the creator of production designs ? [SEP] Gigi [SEP] Which language was used originally for the creation of that work of art ? [SEP] English [SEP] And also Immunotoxin Therapies for the Treatment of Epidermal Growth Factor Receptor-Dependent Cancers [CTX]", "answer": "English", "s_expression": "(AND (JOIN (R P364) Q577757) (JOIN P31 Q34770) (JOIN (R P364) Q26751473))", "s_expression_cores": ["(AND (JOIN (R P364) Q577757) (JOIN P31 Q34770) (JOIN (R P364) Q26751473))"], "sparql_delex": "SELECT ?x WHERE { wd:Q577757 wdt:P364 ?x . ?x wdt:P31 wd:Q34770 .  wd:Q26751473 wdt:P364 ?x .  }", "results": ["Q1860"], "coreference_resolved_question": "Which language was used originally for the creation of Immunotoxin Therapies for the Treatment of Epidermal Growth Factor Receptor-Dependent Cancers?", "s_expression_fn": "(AND (JOIN (R original_language_of_film_or_TV_show) Gigi) (JOIN instance_of language) (JOIN (R original_language_of_film_or_TV_show) Immunotoxin_Therapies_for_the_Treatment_of_Epidermal_Growth_Factor_Receptor-Dependent_Cancers))", "predicted_s_expression_fn": "(AND (JOIN original_language Immunotoxin_Therapies_for_the_Treatment_of_Epidermal_Growth_Factor_Receptor-Dependent_Cancers) (JOIN instance_of language))", "predicted_s_expression": "(AND (JOIN (R P364) Q26751473) (JOIN P31 Q34770))", "sparql_attempt_count": 3, "actions": "SELECT ?x WHERE { wd:Q26751473 wdt:P364 ?x . ?x wdt:P31 wd:Q34770 . }"}, {"turnID": "635.85.2", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Single_Relation|Incomplete", "question": "Which sex does Hans Vo\u00df have ? [SEP] male [SEP] And also Fernando Ortiz Fern\u00e1ndez [CTX]", "answer": "male", "s_expression": "(AND (JOIN (R P21) Q1582909) (JOIN P31 Q290) (JOIN (R P21) Q535415))", "s_expression_cores": ["(AND (JOIN (R P21) Q1582909) (JOIN P31 Q290) (JOIN (R P21) Q535415))"], "sparql_delex": "SELECT ?x WHERE { wd:Q1582909 wdt:P21 ?x . ?x wdt:P31 wd:Q290 .  wd:Q535415 wdt:P21 ?x .  }", "results": ["Q6581097"], "coreference_resolved_question": "Which sex does Fernando Ortiz Fern\u00e1ndez have?", "s_expression_fn": "(AND (JOIN (R sex_or_gender) Hans_Vo\u00df) (JOIN instance_of sex) (JOIN (R sex_or_gender) Fernando_Ortiz_Fern\u00e1ndez))", "predicted_s_expression_fn": "(AND (JOIN (R sex_or_gender) Hans_Vo\u00df) (JOIN (R sex_or_gender) Fernando_Ortiz_Fern\u00e1ndez))", "predicted_s_expression": "(AND (JOIN (R P21) Q1582909) (JOIN (R P21) Q535415))", "sparql_attempt_count": 1, "actions": "SELECT ?x WHERE { wd:Q1582909 wdt:P21 ?x . wd:Q535415 wdt:P21 ?x . }"}, {"turnID": "635.43.2", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Single_Relation|Incomplete", "question": "Which political organization is Jan Johansen a member of ? [SEP] Social Democrats [SEP] Where was that person elected successfully from ? [SEP] Danish general election, 2015 [SEP] And also Simon Emil Ammitzb\u00f8ll [CTX]", "answer": "Danish general election, 2015", "s_expression": "(AND (JOIN P991 Q12319037) (JOIN P31 Q1076105) (JOIN P991 Q952472))", "s_expression_cores": ["(AND (JOIN P991 Q12319037) (JOIN P31 Q1076105) (JOIN P991 Q952472))"], "sparql_delex": "SELECT ?x WHERE { ?x wdt:P991 wd:Q12319037 . ?x wdt:P31 wd:Q1076105 .  ?x wdt:P991 wd:Q952472 .  }", "results": ["Q1964961"], "coreference_resolved_question": "Which political organization is Simon Emil Ammitzb\u00f8ll a member of?", "s_expression_fn": "(AND (JOIN successful_candidate Jan_Johansen) (JOIN instance_of general_election) (JOIN successful_candidate Simon_Emil_Ammitzb\u00f8ll))", "predicted_s_expression_fn": "(AND (JOIN (R elected_in) Jan_Johansen) (JOIN instance_of election) (JOIN (R elected_in) Simon_Emil_Ammitzb\u00f8ll))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "635.105.2", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Single_Relation|Incomplete", "question": "Where was Antonio Schinella Conti born ? [SEP] Padua [SEP] Which sex does that person have ? [SEP] male [SEP] And also Stephen Jones [CTX]", "answer": "male", "s_expression": "(AND (JOIN (R P21) Q2087202) (JOIN P31 Q290) (JOIN (R P21) Q7609623))", "s_expression_cores": ["(AND (JOIN (R P21) Q2087202) (JOIN P31 Q290) (JOIN (R P21) Q7609623))"], "sparql_delex": "SELECT ?x WHERE { wd:Q2087202 wdt:P21 ?x . ?x wdt:P31 wd:Q290 .  wd:Q7609623 wdt:P21 ?x .  }", "results": ["Q6581097"], "coreference_resolved_question": "Which sex does Stephen Jones have?", "s_expression_fn": "(AND (JOIN (R sex_or_gender) Antonio_Schinella_Conti) (JOIN instance_of sex) (JOIN (R sex_or_gender) Stephen_Jones))", "predicted_s_expression_fn": "(AND (JOIN (R sex_or_gender) Antonio_Schinella_Conti) (JOIN instance_of sex) (JOIN (R sex_or_gender) Stephen_Jones))", "predicted_s_expression": "(AND (JOIN (R P21) Q2087202) (JOIN P31 Q290) (JOIN (R P21) Q25345871))", "sparql_attempt_count": 2, "actions": "SELECT ?x WHERE { wd:Q2087202 wdt:P21 ?x . ?x wdt:P31 wd:Q290 . wd:Q25345871 wdt:P21 ?x . }"}, {"turnID": "635.59.3", "question_type": "Logical Reasoning (All)", "description": "Logical|Difference|Multiple_Relation", "question": "Which people had Yunti as brother and do not have gender of male ? [CTX]", "answer": "State Princess Chunque, State Princess Kejing, Princess Dunke of the Second Rank, eighth daughter of Kangxi, Princess Quejing of the Second Rank, State Princess Rongxian, Princess Duanjing of the Second Rank, Princess Wenke of the Second Rank, Kurun Princess Wenxian", "s_expression": "(DIFF (AND (JOIN P7 Q3375172) (JOIN P31 Q502895)) (JOIN P21 Q6581097))", "s_expression_cores": ["(AND (JOIN P7 Q3375172) (JOIN P31 Q502895))", "(JOIN P21 Q6581097)"], "sparql_delex": "SELECT ?x WHERE { ?x wdt:P7 wd:Q3375172 . ?x wdt:P31 wd:Q502895 .  FILTER NOT EXISTS { ?x wdt:P21 wd:Q6581097 .  } }", "results": ["Q7368398", "Q7362690", "Q7369212", "Q15940598", "Q7369135", "Q7362099", "Q7362335", "Q7368998", "Q7367744"], "coreference_resolved_question": "Which people had Yunti as brother and do not have gender of male?", "s_expression_fn": "(DIFF (AND (JOIN brother Yunti) (JOIN instance_of common_name)) (JOIN sex_or_gender male))", "predicted_s_expression_fn": "(DIFF (AND (JOIN brother Yunti) (JOIN instance_of common_name)) (AND (JOIN (R sex_or_gender) male) (JOIN instance_of common_name)))", "predicted_s_expression": "", "sparql_attempt_count": 1, "actions": ""}, {"turnID": "635.58.3", "question_type": "Logical Reasoning (All)", "description": "Logical|Difference|Multiple_Relation", "question": "Which people have Abe as their family name and do not have gender of female ? [CTX]", "answer": "Some of them are Daiki Abe, J\u014dji Abe, Shir\u014d Abe, Tsukasa Abe, Abe Masatane, Abe K\u014dbei, K\u014dru Abe, Y\u014dichi Abe, Tsuyoshi Abe, Takuya Abe", "s_expression": "(DIFF (AND (JOIN P734 Q11160829) (JOIN P31 Q502895)) (JOIN P21 Q6581072))", "s_expression_cores": ["(AND (JOIN P734 Q11160829) (JOIN P31 Q502895))", "(JOIN P21 Q6581072)"], "sparql_delex": "SELECT ?x WHERE { ?x wdt:P734 wd:Q11160829 . ?x wdt:P31 wd:Q502895 .  FILTER NOT EXISTS { ?x wdt:P21 wd:Q6581072 .  } }", "results": ["Q11657939", "Q3306842", "Q11451603", "Q11451610", "Q11657782", "Q939679", "Q11657845", "Q926432", "Q318212", "Q11657897", "Q11450326", "Q3331296", "Q17128892", "Q11657890", "Q6527463", "Q11450334", "Q3545433", "Q2750636", "Q5771472", "Q596666", "Q10565406", "Q16263720", "Q11657954", "Q7678572", "Q16263725", "Q11657953", "Q11657950", "Q11657951", "Q16263729", "Q11657816", "Q11657766", "Q11657813", "Q11657958", "Q1975693", "Q17988458", "Q11657913", "Q5772380", "Q6849900", "Q16263717", "Q3245481", "Q339104", "Q4166304", "Q5701131", "Q16263724", "Q8049976", "Q11657980", "Q11657889", "Q16263733", "Q11657880", "Q11657881", "Q11657882", "Q11657883", "Q763957", "Q11657886", "Q11657887", "Q13365017", "Q860214", "Q10565418", "Q11657968", "Q11451575", "Q11450328", "Q11450329", "Q10565412", "Q10565413", "Q10565410", "Q10565416", "Q11657966", "Q11450320", "Q10565415", "Q11657800", "Q6527504", "Q16263730", "Q11657803", "Q16263737", "Q11657778", "Q11657779", "Q11657776", "Q11657777", "Q11657774", "Q16263739", "Q11657772", "Q11657773", "Q11657771", "Q4456851", "Q1934931", "Q9325156", "Q11657893", "Q16263718", "Q5353636", "Q1364714", "Q331984", "Q11657924", "Q11451579", "Q6381593", "Q479788", "Q11450313", "Q11450311", "Q11450310", "Q11657978", "Q315574", "Q10565429", "Q6527446", "Q11657974", "Q11657975", "Q11657976", "Q11657970", "Q11657971", "Q10565420", "Q11657742", "Q11657877", "Q11657876", "Q11657871", "Q11657746", "Q22276684", "Q11657872", "Q10565405", "Q11657802", "Q11657748", "Q11657730", "Q16263726", "Q11657862", "Q15103850", "Q17191687", "Q382211", "Q11657964", "Q11451629", "Q7477225", "Q11657838", "Q11657734", "Q2715938", "Q3247057", "Q418663", "Q2280320", "Q3616500", "Q11450305", "Q11657983", "Q845316", "Q11450301", "Q10565437", "Q11657952", "Q10565473", "Q11657738", "Q6528666", "Q763588", "Q7105677", "Q11657908", "Q11657864", "Q11657757", "Q11657750", "Q16263727", "Q10565433", "Q10565431", "Q11657900", "Q11657818", "Q11657758", "Q11657759", "Q11657907", "Q11657869", "Q31768", "Q11657765", "Q11451615", "Q11450307", "Q17191690", "Q11657740", "Q17191692", "Q17191693", "Q1739011", "Q940531", "Q3101367", "Q10565435", "Q11657806", "Q970603", "Q11657868", "Q2185725", "Q11657847", "Q11657896", "Q1653522", "Q2708110", "Q10565445", "Q10565447", "Q17685849", "Q17685848", "Q10565443", "Q10565439", "Q11657853", "Q11657852", "Q11657851", "Q11657850", "Q10565449", "Q11657856", "Q11657855", "Q11451493", "Q11657918", "Q11450343", "Q11657912", "Q479775", "Q11657910", "Q3312085", "Q11657917", "Q17362533", "Q10565408", "Q11657721", "Q11657720", "Q11657725", "Q11657727", "Q11451599", "Q11657729", "Q11657762", "Q6782737", "Q6526165", "Q4981360", "Q11451633", "Q11657754", "Q8056222", "Q11657755", "Q11657787", "Q11657785", "Q11657741", "Q7677213", "Q8056027", "Q11657781", "Q11657931", "Q10565457", "Q10565454", "Q10565455", "Q10565452", "Q11657849", "Q10565450", "Q11451619", "Q11657844", "Q11451578", "Q17685855", "Q1522870", "Q11657841", "Q11657842", "Q11657751", "Q6144671", "Q11451616", "Q7496339", "Q11657929", "Q11657928", "Q8916084", "Q11657926", "Q11657726", "Q11657753", "Q6389223", "Q11657922", "Q11657920", "Q11657732", "Q11657733", "Q5933157", "Q11657736", "Q11451613", "Q11451608", "Q11657735", "Q11451606", "Q11451604", "Q11657739", "Q11451602", "Q1070088", "Q11451600", "Q11657979", "Q10565441", "Q17191710", "Q11657792", "Q11657793", "Q11657794", "Q1385614", "Q11657797", "Q10565463", "Q16769508", "Q186273", "Q10565460", "Q10565467", "Q11657843", "Q10565465", "Q17685861", "Q17685866", "Q10565426", "Q2549218", "Q11657914", "Q318151", "Q10565425", "Q16769512", "Q6391979", "Q11657936", "Q11657937", "Q11657938", "Q10565423", "Q11657833", "Q11657788", "Q11657837", "Q11657836", "Q4666449", "Q1150592", "Q763641", "Q10565461", "Q8916109", "Q11657909", "Q195094", "Q195091", "Q629360", "Q364271", "Q3514217", "Q11657763", "Q11657241", "Q11657783", "Q11657840", "Q10565428", "Q10565471", "Q11657885", "Q11450349", "Q15406083", "Q11657911", "Q11450340", "Q11657747", "Q6782359", "Q2313992", "Q11657945", "Q11657944", "Q11657947", "Q11657829", "Q11657941", "Q11657943", "Q2734864", "Q11657822", "Q11657769", "Q11657826", "Q11657969", "Q11657825", "Q11451626", "Q11451627", "Q6527481", "Q11451622", "Q11451623", "Q11657848", "Q11451582", "Q11451628", "Q6782542", "Q4666432"], "coreference_resolved_question": "Which people have Abe as their family name and do not have gender of female?", "s_expression_fn": "(DIFF (AND (JOIN family_name Abe) (JOIN instance_of common_name)) (JOIN sex_or_gender female))", "predicted_s_expression_fn": "(DIFF (AND (JOIN (R family_name) Abe) (JOIN instance_of common_name) (AND (JOIN (R sex_or_gender) female) (JOIN instance_of common_name)))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "1500.114.2", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Single_Relation|Incomplete", "question": "Which administrative territory is John of G\u0142og\u00f3w an inhabitant of ? [SEP] Poland [SEP] What is the sex of that person ? [SEP] male [SEP] And also Sunao Hozaki [CTX]", "answer": "male", "s_expression": "(AND (JOIN (R P21) Q579504) (JOIN P31 Q290) (JOIN (R P21) Q7638836))", "s_expression_cores": ["(AND (JOIN (R P21) Q579504) (JOIN P31 Q290) (JOIN (R P21) Q7638836))"], "sparql_delex": "SELECT ?x WHERE { wd:Q579504 wdt:P21 ?x . ?x wdt:P31 wd:Q290 .  wd:Q7638836 wdt:P21 ?x .  }", "results": ["Q6581097"], "coreference_resolved_question": "What is the sex of Sunao Hozaki?", "s_expression_fn": "(AND (JOIN (R sex_or_gender) John_of_G\u0142og\u00f3w) (JOIN instance_of sex) (JOIN (R sex_or_gender) Sunao_Hozaki))", "predicted_s_expression_fn": "(AND (JOIN (R sex_or_gender) John_of_G\u0142og\u00f3w) (JOIN instance_of sex) (JOIN (R sex_or_gender) Sunao_Hozaki))", "predicted_s_expression": "(AND (JOIN (R P21) Q579504) (JOIN P31 Q290) (JOIN (R P21) Q7638836))", "sparql_attempt_count": 2, "actions": "SELECT ?x WHERE { wd:Q579504 wdt:P21 ?x . ?x wdt:P31 wd:Q290 . wd:Q7638836 wdt:P21 ?x . }"}, {"turnID": "52.63.2", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Single_Relation|Incomplete", "question": "Which musical instrument can Pejman Akbarzadeh perform with ? [SEP] piano [SEP] And also Lachi [CTX]", "answer": "piano", "s_expression": "(AND (JOIN (R P1303) Q4352419) (JOIN P31 Q34379) (JOIN (R P1303) Q6468392))", "s_expression_cores": ["(AND (JOIN (R P1303) Q4352419) (JOIN P31 Q34379) (JOIN (R P1303) Q6468392))"], "sparql_delex": "SELECT ?x WHERE { wd:Q4352419 wdt:P1303 ?x . ?x wdt:P31 wd:Q34379 .  wd:Q6468392 wdt:P1303 ?x .  }", "results": ["Q5994"], "coreference_resolved_question": "Which musical instrument can Lachi perform with?", "s_expression_fn": "(AND (JOIN (R instrument) Pejman_Akbarzadeh) (JOIN instance_of musical_instrument) (JOIN (R instrument) Lachi))", "predicted_s_expression_fn": "(AND (JOIN (R instrument) Pejman_Akbarzadeh) (JOIN instance_of musical_instrument) (JOIN (R instrument) Lachi)", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "52.113.9", "question_type": "Logical Reasoning (All)", "description": "Logical|Difference|Single_Relation", "question": "Which parts are the components of Apoptosis regulator Bcl-2 but not Signal peptide peptidase-like 3 ? [CTX]", "answer": "mitochondrion, cytoplasm, nucleus", "s_expression": "(DIFF (AND (JOIN (R P681) Q425201) (JOIN P31 Q15989253)) (JOIN (R P681) Q21122091))", "s_expression_cores": ["(AND (JOIN (R P681) Q425201) (JOIN P31 Q15989253))", "(JOIN (R P681) Q21122091)"], "sparql_delex": "SELECT ?x WHERE { wd:Q425201 wdt:P681 ?x . ?x wdt:P31 wd:Q15989253 .  FILTER NOT EXISTS { wd:Q21122091 wdt:P681 ?x .  } }", "results": ["Q39572", "Q79899", "Q40260"], "coreference_resolved_question": "Which parts are the components of Apoptosis regulator Bcl-2 but not Signal peptide peptidase-like 3?", "s_expression_fn": "(DIFF (AND (JOIN (R cell_component) Apoptosis_regulator_Bcl-2) (JOIN instance_of part)) (JOIN (R cell_component) Signal_peptide_peptidase-like_3))", "predicted_s_expression_fn": "(DIFF (AND (JOIN (R cell_component) Apoptosis_regulator_Bcl-2) (JOIN instance_of part)) (AND (JOIN (R cell_component) Signal_peptide_peptidase-like_3) (JOIN instance_of part)))", "predicted_s_expression": "", "sparql_attempt_count": 1, "actions": ""}, {"turnID": "52.60.5", "question_type": "Logical Reasoning (All)", "description": "Logical|Difference|Multiple_Relation", "question": "Which people held the position of Surgeon General of the United States and do not have gender of male ? [CTX]", "answer": "Antonia Novello, Regina Benjamin", "s_expression": "(DIFF (AND (JOIN P39 Q1434880) (JOIN P31 Q502895)) (JOIN P21 Q6581097))", "s_expression_cores": ["(AND (JOIN P39 Q1434880) (JOIN P31 Q502895))", "(JOIN P21 Q6581097)"], "sparql_delex": "SELECT ?x WHERE { ?x wdt:P39 wd:Q1434880 . ?x wdt:P31 wd:Q502895 .  FILTER NOT EXISTS { ?x wdt:P21 wd:Q6581097 .  } }", "results": ["Q3246738", "Q2137851"], "coreference_resolved_question": "Which people held the position of Surgeon General of the United States and do not have gender of male?", "s_expression_fn": "(DIFF (AND (JOIN position_held Surgeon_General_of_the_United_States) (JOIN instance_of common_name)) (JOIN sex_or_gender male))", "predicted_s_expression_fn": "(DIFF (AND (JOIN position_held Surgeon_General_of_the_United_States) (JOIN instance_of common_name)) (AND (JOIN sex_or_gender male) (JOIN instance_of common_name)))", "predicted_s_expression": "", "sparql_attempt_count": 1, "actions": ""}, {"turnID": "1447.136.4", "question_type": "Logical Reasoning (All)", "description": "Logical|Difference|Single_Relation", "question": "Which applications have survival horror but not first-person shooter as genre ? [CTX]", "answer": "Some of them are Ghost Theory, Noct, Silent Hill: The Escape, Yomawari: Night Alone, Five Nights at Freddy's 2, 7 Days to Die, The Evil Dead, Dead Rising 4, Michigan: Report from Hell, ShiChiya", "s_expression": "(DIFF (AND (JOIN P136 Q333967) (JOIN P31 Q166142)) (JOIN P136 Q185029))", "s_expression_cores": ["(AND (JOIN P136 Q333967) (JOIN P31 Q166142))", "(JOIN P136 Q185029)"], "sparql_delex": "SELECT ?x WHERE { ?x wdt:P136 wd:Q333967 . ?x wdt:P31 wd:Q166142 .  FILTER NOT EXISTS { ?x wdt:P136 wd:Q185029 .  } }", "results": ["Q2055124", "Q5075219", "Q1900280", "Q7935278", "Q2891411", "Q17618314", "Q5658155", "Q3603390", "Q2466882", "Q945340", "Q20642625", "Q3876783", "Q20538692", "Q1050284", "Q16267721", "Q4018803", "Q22019789", "Q5962336", "Q1248594", "Q3407139", "Q3407138", "Q3383465", "Q1145336", "Q5937281", "Q24576564", "Q2241501", "Q3080135", "Q1138864", "Q2743775", "Q5176850", "Q13426706", "Q16267610", "Q2742904", "Q16267594", "Q19824810", "Q5606973", "Q2337997", "Q6128329", "Q6488257", "Q15121353", "Q7063524", "Q20712663", "Q23763209", "Q20011212", "Q622336", "Q7735013", "Q19057897", "Q13426504", "Q17048666", "Q3094583", "Q2421908", "Q2641452", "Q5306230", "Q20992418", "Q16625874", "Q11323923", "Q16528616", "Q4305839", "Q7897632", "Q20538678", "Q17501827", "Q3989021", "Q3399693", "Q19954835", "Q16742835", "Q18913274", "Q3936461", "Q1323428", "Q1755259", "Q1662360", "Q21662718", "Q3112747", "Q2627223", "Q24060042", "Q16354817", "Q7759126", "Q2742896", "Q21421256", "Q3736146", "Q24679822", "Q967889", "Q24577667", "Q1056069", "Q24514682", "Q17182512", "Q20160264", "Q2742397", "Q733992", "Q2182389", "Q6434917", "Q613124", "Q1154266", "Q349375", "Q10279881", "Q4038405", "Q4051354", "Q8036651", "Q1226632", "Q739784", "Q22909661", "Q3177419", "Q6545027", "Q7397374", "Q2337936", "Q2055688", "Q17600332", "Q5517684", "Q3266613", "Q4053183", "Q2734104", "Q3012057", "Q16574736", "Q7647179", "Q2165750", "Q15850576", "Q1010211", "Q14753828", "Q18203301", "Q2819910", "Q2569617", "Q697555", "Q3178569", "Q4674489", "Q15613717", "Q26694917", "Q3263142", "Q21039888", "Q2176374", "Q536833", "Q17506006", "Q2075966", "Q24031928", "Q18182633", "Q7913004", "Q3704216", "Q12972341", "Q18215878", "Q14838050", "Q22019756"], "coreference_resolved_question": "Which applications have survival horror but not first-person shooter as genre?", "s_expression_fn": "(DIFF (AND (JOIN genre survival_horror) (JOIN instance_of application)) (JOIN genre first-person_shooter))", "predicted_s_expression_fn": "(DIFF (AND (JOIN (R genre) survival_horror) (JOIN (R genre) first-person_shooter))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "1058.134.2", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Single_Relation|Incomplete", "question": "What degree or diploma was awarded to Wilhelm Koppers ? [SEP] doctoral degree [SEP] And also Christoph Schweigert [CTX]", "answer": "doctoral degree", "s_expression": "(AND (JOIN (R P512) Q87175) (JOIN P31 Q3412758) (JOIN (R P512) Q1085833))", "s_expression_cores": ["(AND (JOIN (R P512) Q87175) (JOIN P31 Q3412758) (JOIN (R P512) Q1085833))"], "sparql_delex": "SELECT ?x WHERE { wd:Q87175 wdt:P512 ?x . ?x wdt:P31 wd:Q3412758 .  wd:Q1085833 wdt:P512 ?x .  }", "results": ["Q849697"], "coreference_resolved_question": "What degree or diploma was awarded to Christoph Schweigert?", "s_expression_fn": "(AND (JOIN (R academic_degree) Wilhelm_Koppers) (JOIN instance_of qualification) (JOIN (R academic_degree) Christoph_Schweigert))", "predicted_s_expression_fn": "(AND (JOIN (R academic_degree) Wilhelm_Koppers) (JOIN instance_of academic_degree) (JOIN (R academic_degree) Christoph_Schweigert)", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "1058.10.4", "question_type": "Logical Reasoning (All)", "description": "Logical|Difference|Multiple_Relation", "question": "Which people were awarded with Order of Merit for Arts and Science and are not working as singer ? [CTX]", "answer": "Some of them are Fran\u00e7ois Guizot, Carl Joseph Anton Mittermaier, Jean-Baptiste Dumas, Feodor Felix Konrad Lynen, Martin Walser, Wilhelm Furtw\u00e4ngler, Rolf Gutbrod, Louis Daguerre, Robert Weinberg, Sir George Stokes, 1st Baronet", "s_expression": "(DIFF (AND (JOIN P166 Q15056034) (JOIN P31 Q502895)) (JOIN P106 Q177220))", "s_expression_cores": ["(AND (JOIN P166 Q15056034) (JOIN P31 Q502895))", "(JOIN P106 Q177220)"], "sparql_delex": "SELECT ?x WHERE { ?x wdt:P166 wd:Q15056034 . ?x wdt:P31 wd:Q502895 .  FILTER NOT EXISTS { ?x wdt:P106 wd:Q177220 .  } }", "results": ["Q67515", "Q104267", "Q156896", "Q156890", "Q44872", "Q156892", "Q76416", "Q63035", "Q115641", "Q155087", "Q62400", "Q76892", "Q445407", "Q702700", "Q701506", "Q820018", "Q446338", "Q653434", "Q1556395", "Q57078", "Q150630", "Q1468144", "Q85929", "Q514741", "Q153185", "Q155794", "Q449119", "Q164699", "Q61863", "Q78711", "Q12830", "Q309602", "Q152513", "Q123022", "Q49767", "Q455549", "Q138850", "Q65311", "Q76564", "Q9068", "Q69849", "Q64481", "Q76360", "Q64561", "Q301438", "Q77606", "Q572686", "Q122701", "Q69651", "Q69799", "Q451331", "Q109480", "Q3084633", "Q216224", "Q117983", "Q61888", "Q61889", "Q57497", "Q1896428", "Q66209", "Q326010", "Q76514", "Q1512158", "Q66165", "Q57317", "Q92380", "Q246758", "Q77286", "Q44286", "Q1680622", "Q58575", "Q58577", "Q937", "Q57387", "Q569045", "Q122972", "Q567361", "Q151403", "Q111643", "Q7085", "Q71013", "Q171485", "Q62365", "Q68004", "Q64341", "Q1500200", "Q77031", "Q476162", "Q78496", "Q155136", "Q57538", "Q102196", "Q70855", "Q76423", "Q2979435", "Q454758", "Q569940", "Q336497", "Q70329", "Q76745", "Q57294", "Q92449", "Q150526", "Q155777", "Q61864", "Q61862", "Q157623", "Q548266", "Q328369", "Q60080", "Q106434", "Q124045", "Q84675", "Q505173", "Q48184", "Q123807", "Q95229", "Q553258", "Q76707", "Q60108", "Q60060", "Q85818", "Q57103", "Q77540", "Q515914", "Q67335", "Q65196", "Q76327", "Q20018", "Q157242", "Q12807", "Q127944", "Q700638", "Q77883", "Q76934", "Q84991", "Q157324", "Q85224", "Q503318", "Q78275", "Q443786", "Q77081", "Q564888", "Q61745", "Q66531", "Q1242", "Q76889", "Q215466", "Q65617", "Q57192", "Q57191", "Q57190", "Q78686", "Q316819", "Q61697", "Q45662", "Q78526", "Q69102", "Q65292", "Q112106", "Q644595", "Q705048", "Q104898", "Q120356", "Q57992", "Q557375", "Q1064", "Q62249", "Q58847", "Q320298", "Q160640", "Q77174", "Q451655", "Q76464", "Q311223", "Q76951", "Q77072", "Q2639967", "Q77074", "Q76959", "Q832730", "Q56189", "Q109300", "Q6722", "Q73419", "Q581258", "Q643621", "Q164824", "Q125230", "Q95595", "Q89733", "Q77104", "Q81244", "Q73096", "Q821537", "Q1179170", "Q77109", "Q155768", "Q1247346", "Q67612", "Q91166", "Q7294", "Q91169", "Q155764", "Q470349", "Q60024", "Q80064", "Q37030", "Q76474", "Q155626", "Q95325", "Q40904", "Q61749", "Q61652", "Q84734", "Q472235", "Q61090", "Q72120", "Q85162", "Q168401", "Q72205", "Q71886", "Q70554", "Q1793886", "Q314567", "Q75845", "Q682376", "Q76356", "Q315560", "Q155538", "Q151911", "Q1119077", "Q560321", "Q448426", "Q9726", "Q131405", "Q57067", "Q152788", "Q57065", "Q72371", "Q72374", "Q80884", "Q61774", "Q322440", "Q61678", "Q66375", "Q91862", "Q58685", "Q57244", "Q76509", "Q240788", "Q519108", "Q68214", "Q2039606", "Q61256", "Q72194", "Q8814", "Q160252", "Q92604", "Q4517", "Q95496", "Q1035", "Q289739", "Q71031", "Q151556", "Q165668", "Q1579774", "Q66092", "Q451305", "Q75744", "Q1819801", "Q216041", "Q84473", "Q84148", "Q155907", "Q76820", "Q77142", "Q64356", "Q37767", "Q74379", "Q155371", "Q567374", "Q76432", "Q1357551", "Q5333", "Q169311", "Q164961", "Q112507", "Q82840", "Q44584", "Q25973", "Q157282", "Q60070", "Q123466", "Q68062", "Q124505", "Q699662", "Q58328", "Q60052", "Q76641", "Q61280", "Q315485", "Q9130", "Q61753", "Q543081", "Q8442", "Q319969", "Q78605", "Q18913", "Q321245", "Q72861", "Q240526", "Q535748", "Q76897", "Q76894", "Q66135", "Q23380", "Q168452", "Q704552", "Q116244", "Q168356", "Q76549", "Q158062", "Q159976", "Q62833", "Q47812", "Q1325", "Q122720", "Q89546", "Q37193", "Q157672", "Q61421", "Q538478", "Q92317", "Q125716", "Q99134", "Q1629129", "Q705090", "Q1637256", "Q77184", "Q151097", "Q58812", "Q58811", "Q1556306", "Q896685", "Q66332", "Q1336322", "Q64797", "Q108246", "Q444237", "Q78857", "Q61407", "Q102913", "Q110691", "Q170259", "Q876888", "Q116960", "Q44252", "Q561089", "Q604107", "Q156472", "Q65803", "Q65807", "Q1352542", "Q86955", "Q67667", "Q694726", "Q158354", "Q90073", "Q60554", "Q316202", "Q707856", "Q60428", "Q85907", "Q63183", "Q61882", "Q1760476", "Q62518", "Q154260", "Q114408", "Q703356", "Q68093", "Q44412", "Q41585", "Q88586", "Q156058", "Q44205", "Q1501879", "Q714972", "Q88907", "Q49601", "Q64262", "Q57656", "Q77628", "Q93401", "Q60644", "Q481453", "Q62767", "Q875950", "Q77231", "Q320656", "Q160888", "Q155529", "Q164401", "Q85083", "Q364808", "Q168485", "Q51989", "Q529094", "Q311115", "Q161143", "Q120251", "Q116064", "Q311461", "Q551149", "Q481307", "Q560042", "Q167112", "Q35149", "Q560132", "Q96406", "Q74203", "Q91471", "Q7317", "Q154353", "Q64607", "Q66147", "Q77313", "Q2429435", "Q481421", "Q538173", "Q1449446", "Q61300", "Q154331", "Q119594", "Q69685", "Q62304", "Q120183", "Q66729", "Q60465", "Q336089", "Q706867", "Q481605", "Q64049", "Q57349", "Q312503", "Q75594", "Q113596", "Q156736", "Q322582", "Q142472", "Q640991", "Q65600", "Q741482", "Q6701", "Q737794", "Q44597", "Q5327", "Q703980", "Q2074208", "Q520915", "Q102822", "Q156942", "Q46706", "Q574368", "Q441154", "Q13894", "Q86755", "Q528840", "Q71112", "Q67526", "Q118909", "Q90241", "Q328439", "Q701104", "Q44086", "Q94701", "Q18425", "Q64421", "Q77788", "Q427319", "Q60163", "Q30693", "Q678094", "Q78610", "Q108748", "Q157268", "Q61507", "Q41688", "Q105237", "Q123528", "Q77876", "Q454770", "Q319594", "Q77629", "Q57125", "Q555308", "Q76571", "Q61721", "Q168468", "Q57760", "Q96524", "Q78504", "Q64556", "Q77616", "Q652952", "Q71975", "Q78919", "Q46096", "Q70672", "Q76784", "Q703564", "Q655484", "Q61342", "Q57281", "Q703569", "Q57285", "Q16571", "Q116882", "Q315488", "Q61151", "Q466319", "Q520594", "Q156349", "Q29193", "Q75712", "Q213545", "Q63458", "Q662727", "Q549208", "Q160706", "Q76610", "Q75780", "Q57164", "Q527201", "Q14281", "Q316041", "Q41508", "Q8750", "Q157501", "Q509471", "Q156193", "Q571426", "Q451744", "Q107815", "Q573847", "Q703458", "Q77126", "Q443648", "Q14278", "Q156749", "Q78483", "Q78480", "Q544646", "Q113090", "Q334187", "Q66936", "Q321624", "Q77431", "Q99480", "Q87567", "Q76756", "Q550815", "Q63078", "Q154632", "Q73874", "Q559235", "Q472212", "Q201763", "Q950726", "Q83297", "Q514178", "Q36067", "Q155856", "Q153159", "Q161145", "Q60074", "Q72739", "Q169011", "Q47755", "Q2589392", "Q84444", "Q302970", "Q287822", "Q657402", "Q150445", "Q76332", "Q76623", "Q76624", "Q84861", "Q96676", "Q157239", "Q708414", "Q315989", "Q2589683", "Q1694310", "Q124348", "Q555885", "Q29297", "Q61975", "Q578152", "Q274404", "Q65350", "Q603105", "Q77314", "Q170342", "Q9021", "Q57227", "Q57226", "Q75814", "Q312397", "Q287097", "Q427123", "Q122968", "Q43523", "Q2028738", "Q1668107", "Q6694", "Q44993", "Q107690", "Q58833", "Q670054", "Q151794", "Q57358", "Q275013", "Q25351", "Q76600", "Q55411", "Q820709", "Q156700", "Q57239", "Q158080", "Q75883", "Q41309", "Q106346"], "coreference_resolved_question": "Which people were awarded with Order of Merit for Arts and Science and are not working as singer?", "s_expression_fn": "(DIFF (AND (JOIN award_received Order_of_Merit_for_Arts_and_Science) (JOIN instance_of common_name)) (JOIN occupation singer))", "predicted_s_expression_fn": "(DIFF (AND (JOIN (R award_received) Order_of_Merit_for_Arts_and_Science) (JOIN instance_of common_name)) (AND (JOIN (R occupation) singer) (JOIN instance_of common_name))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "1058.34.2", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Single_Relation|Incomplete", "question": "Which sport was Manny Banuelos a part of ? [SEP] baseball [SEP] What is the sex of that person ? [SEP] male [SEP] And also Mike McCurry [CTX]", "answer": "male", "s_expression": "(AND (JOIN (R P21) Q6750974) (JOIN P31 Q290) (JOIN (R P21) Q6847909))", "s_expression_cores": ["(AND (JOIN (R P21) Q6750974) (JOIN P31 Q290) (JOIN (R P21) Q6847909))"], "sparql_delex": "SELECT ?x WHERE { wd:Q6750974 wdt:P21 ?x . ?x wdt:P31 wd:Q290 .  wd:Q6847909 wdt:P21 ?x .  }", "results": ["Q6581097"], "coreference_resolved_question": "What is the sex of Mike McCurry?", "s_expression_fn": "(AND (JOIN (R sex_or_gender) Manny_Banuelos) (JOIN instance_of sex) (JOIN (R sex_or_gender) Mike_McCurry))", "predicted_s_expression_fn": "(AND (JOIN (R sex_or_gender) Manny_Banuelos) (JOIN instance_of sex) (JOIN (R sex_or_gender) Mike_McCurry))", "predicted_s_expression": "(AND (JOIN (R P21) Q6750974) (JOIN P31 Q290) (JOIN (R P21) Q6847909))", "sparql_attempt_count": 2, "actions": "SELECT ?x WHERE { wd:Q6750974 wdt:P21 ?x . ?x wdt:P31 wd:Q290 . wd:Q6847909 wdt:P21 ?x . }"}, {"turnID": "396.29.11", "question_type": "Logical Reasoning (All)", "description": "Logical|Difference|Multiple_Relation", "question": "Which people speaks Akkadian and do n't have nationality of Germany ? [CTX]", "answer": "Betina Faist, Mikayel Chamchian, Akhenaten, Daniel E. Fleming, Hammurabi, Sh. Shifra, Joost Hazenbos, Elena Cassin, Naram-Sin of Akkad", "s_expression": "(DIFF (AND (JOIN P1412 Q35518) (JOIN P31 Q502895)) (JOIN P27 Q183))", "s_expression_cores": ["(AND (JOIN P1412 Q35518) (JOIN P31 Q502895))", "(JOIN P27 Q183)"], "sparql_delex": "SELECT ?x WHERE { ?x wdt:P1412 wd:Q35518 . ?x wdt:P31 wd:Q502895 .  FILTER NOT EXISTS { ?x wdt:P27 wd:Q183 .  } }", "results": ["Q26742858", "Q4507011", "Q81794", "Q23016853", "Q36359", "Q12411491", "Q1703552", "Q1327855", "Q297506"], "coreference_resolved_question": "Which people speak Akkadian and don't have nationality of Germany?", "s_expression_fn": "(DIFF (AND (JOIN languages_spoken,_written_or_signed Akkadian) (JOIN instance_of common_name)) (JOIN country_of_citizenship Germany))", "predicted_s_expression_fn": "(DIFF (AND (JOIN (R language) Akkadian) (JOIN instance_of common_name)) (AND (JOIN (R country_of_citizenship) Germany) (JOIN instance_of common_name)))", "predicted_s_expression": "", "sparql_attempt_count": 2, "actions": ""}, {"turnID": "396.6.4", "question_type": "Logical Reasoning (All)", "description": "Logical|Difference|Multiple_Relation", "question": "Which administrative territories have diplomatic relationships with Germany and are not the countries of citizenship of Halina Biegun ? [CTX]", "answer": "Some of them are Libya, Chile, United States of America, Vietnam, Liechtenstein, Guinea, Switzerland, Mongolia, South Sudan, Nicaragua", "s_expression": "(DIFF (AND (JOIN (R P530) Q183) (JOIN P31 Q15617994)) (JOIN (R P27) Q5642360))", "s_expression_cores": ["(AND (JOIN (R P530) Q183) (JOIN P31 Q15617994))", "(JOIN (R P27) Q5642360)"], "sparql_delex": "SELECT ?x WHERE { wd:Q183 wdt:P530 ?x . ?x wdt:P31 wd:Q15617994 .  FILTER NOT EXISTS { wd:Q5642360 wdt:P27 ?x .  } }", "results": ["Q804", "Q801", "Q800", "Q419", "Q668", "Q414", "Q142", "Q55", "Q145", "Q262", "Q148", "Q783", "Q265", "Q833", "Q711", "Q717", "Q252", "Q403", "Q657", "Q258", "Q45", "Q159", "Q43", "Q41", "Q155", "Q796", "Q794", "Q954", "Q889", "Q884", "Q958", "Q881", "Q739", "Q241", "Q242", "Q811", "Q33", "Q32", "Q31", "Q30", "Q924", "Q34", "Q929", "Q39", "Q38", "Q986", "Q423", "Q983", "Q851", "Q733", "Q734", "Q736", "Q730", "Q230", "Q232", "Q233", "Q238", "Q20", "Q1045", "Q1041", "Q27", "Q28", "Q29", "Q1049", "Q189", "Q843", "Q184", "Q1029", "Q1028", "Q786", "Q347", "Q227", "Q225", "Q224", "Q222", "Q96", "Q229", "Q228", "Q17", "Q902", "Q1036", "Q1037", "Q1008", "Q1032", "Q1033", "Q1030", "Q965", "Q967", "Q962", "Q963", "Q298", "Q115", "Q114", "Q117", "Q750", "Q212", "Q213", "Q217", "Q214", "Q215", "Q218", "Q219", "Q912", "Q917", "Q916", "Q1007", "Q1006", "Q1005", "Q1009", "Q974", "Q971", "Q79", "Q77", "Q878", "Q774", "Q948", "Q810", "Q1019", "Q1016", "Q1011", "Q945", "Q869", "Q953"], "coreference_resolved_question": "Which administrative territories have diplomatic relationships with Germany and are not the countries of citizenship of Halina Biegun?", "s_expression_fn": "(DIFF (AND (JOIN (R diplomatic_relation) Germany) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (JOIN (R country_of_citizenship) Halina_Biegun))", "predicted_s_expression_fn": "(DIFF (AND (JOIN diplomatic_relation Germany) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (AND (JOIN (R country_of_citizenship) Halina_Biegun) (JOIN instance_of designation_for_an_administrative_territorial_entity)))", "predicted_s_expression": "", "sparql_attempt_count": 1, "actions": ""}, {"turnID": "787.17.4", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Single_Relation|Incomplete", "question": "Which sex does Michel Roussin possess ? [SEP] male [SEP] And also Shunten [CTX]", "answer": "male", "s_expression": "(AND (JOIN (R P21) Q3310773) (JOIN P31 Q290) (JOIN (R P21) Q1059918))", "s_expression_cores": ["(AND (JOIN (R P21) Q3310773) (JOIN P31 Q290) (JOIN (R P21) Q1059918))"], "sparql_delex": "SELECT ?x WHERE { wd:Q3310773 wdt:P21 ?x . ?x wdt:P31 wd:Q290 .  wd:Q1059918 wdt:P21 ?x .  }", "results": ["Q6581097"], "coreference_resolved_question": "Which sex does Shunten possess?", "s_expression_fn": "(AND (JOIN (R sex_or_gender) Michel_Roussin) (JOIN instance_of sex) (JOIN (R sex_or_gender) Shunten))", "predicted_s_expression_fn": "(AND (JOIN (R sex_or_gender) Michel_Roussin) (JOIN instance_of sex) (JOIN (R sex_or_gender) Shunten))", "predicted_s_expression": "(AND (JOIN (R P21) Q3310773) (JOIN P31 Q290) (JOIN (R P21) Q1059918))", "sparql_attempt_count": 2, "actions": "SELECT ?x WHERE { wd:Q3310773 wdt:P21 ?x . ?x wdt:P31 wd:Q290 . wd:Q1059918 wdt:P21 ?x . }"}, {"turnID": "832.65.2", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Single_Relation|Incomplete", "question": "Which award was received by G\u00e9rard Antoine Louis de Champflour ? [SEP] Knight of the Legion of Honour [SEP] And also Alain Holleville [CTX]", "answer": "Knight of the Legion of Honour", "s_expression": "(AND (JOIN (R P166) Q21855958) (JOIN P31 Q618779) (JOIN (R P166) Q2636430))", "s_expression_cores": ["(AND (JOIN (R P166) Q21855958) (JOIN P31 Q618779) (JOIN (R P166) Q2636430))"], "sparql_delex": "SELECT ?x WHERE { wd:Q21855958 wdt:P166 ?x . ?x wdt:P31 wd:Q618779 .  wd:Q2636430 wdt:P166 ?x .  }", "results": ["Q10855271"], "coreference_resolved_question": "Which award was received by Alain Holleville?", "s_expression_fn": "(AND (JOIN (R award_received) G\u00e9rard_Antoine_Louis_de_Champflour) (JOIN instance_of award) (JOIN (R award_received) Alain_Holleville))", "predicted_s_expression_fn": "(AND (JOIN (R award_received) G\u00e9rard_Antoine_Louis_de_Champflour) (JOIN (R award_received) Alain_Holleville))", "predicted_s_expression": "(AND (JOIN (R P166) Q21855958) (JOIN (R P166) Q2636430))", "sparql_attempt_count": 1, "actions": "SELECT ?x WHERE { wd:Q21855958 wdt:P166 ?x . wd:Q2636430 wdt:P166 ?x . }"}, {"turnID": "31.67.3", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Single_Relation|Incomplete", "question": "What does Ion Luchianov do for a living ? [SEP] athletics competitor [SEP] And also Airese Currie [CTX]", "answer": "athletics competitor", "s_expression": "(AND (JOIN (R P106) Q1487450) (JOIN P31 Q151885) (JOIN (R P106) Q4698673))", "s_expression_cores": ["(AND (JOIN (R P106) Q1487450) (JOIN P31 Q151885) (JOIN (R P106) Q4698673))"], "sparql_delex": "SELECT ?x WHERE { wd:Q1487450 wdt:P106 ?x . ?x wdt:P31 wd:Q151885 .  wd:Q4698673 wdt:P106 ?x .  }", "results": ["Q11513337"], "coreference_resolved_question": "What does Airese Currie do for a living?", "s_expression_fn": "(AND (JOIN (R occupation) Ion_Luchianov) (JOIN instance_of concept) (JOIN (R occupation) Airese_Currie))", "predicted_s_expression_fn": "(AND (JOIN (R occupation) Ion_Luchianov) (JOIN instance_of athletics_competitor) (JOIN (R occupation) Airese_Currie))", "predicted_s_expression": "(AND (JOIN (R P106) Q1487450) (JOIN P31 Q151885) (JOIN (R P106) Q4698673))", "sparql_attempt_count": 2, "actions": "SELECT ?x WHERE { wd:Q1487450 wdt:P106 ?x . ?x wdt:P31 wd:Q151885 . wd:Q4698673 wdt:P106 ?x . }"}, {"turnID": "724.107.2", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Single_Relation|Incomplete", "question": "Where did Joan Esteva live ? [SEP] Palafrugell [SEP] Which people does that person have as ethnic origin ? [SEP] Catalan people [SEP] And also Josep Barris i Buix\u00f3 [CTX]", "answer": "Catalan people", "s_expression": "(AND (JOIN (R P172) Q21905294) (JOIN P31 Q2472587) (JOIN (R P172) Q11928458))", "s_expression_cores": ["(AND (JOIN (R P172) Q21905294) (JOIN P31 Q2472587) (JOIN (R P172) Q11928458))"], "sparql_delex": "SELECT ?x WHERE { wd:Q21905294 wdt:P172 ?x . ?x wdt:P31 wd:Q2472587 .  wd:Q11928458 wdt:P172 ?x .  }", "results": ["Q244504"], "coreference_resolved_question": "Which people does Josep Barris i Buix\u00f3 have as ethnic origin?", "s_expression_fn": "(AND (JOIN (R ethnic_group) Joan_Esteva) (JOIN instance_of people) (JOIN (R ethnic_group) Josep_Barris_i_Buix\u00f3))", "predicted_s_expression_fn": "(AND (JOIN (R ethnic_group) Joan_Esteva) (JOIN instance_of ethnic_group) (JOIN (R ethnic_group) Josep_Barris_i_Buix\u00f3))", "predicted_s_expression": "(AND (JOIN (R P172) Q21905294) (JOIN P31 Q2472587) (JOIN (R P172) Q11928458))", "sparql_attempt_count": 2, "actions": "SELECT ?x WHERE { wd:Q21905294 wdt:P172 ?x . ?x wdt:P31 wd:Q2472587 . wd:Q11928458 wdt:P172 ?x . }"}, {"turnID": "724.89.2", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Single_Relation|Incomplete", "question": "Which military branch was Edgar Keatinge a part of ? [SEP] British Army [SEP] Which language can that person understand ? [SEP] English [SEP] And also William Hart [CTX]", "answer": "English", "s_expression": "(AND (JOIN (R P1412) Q5337326) (JOIN P31 Q34770) (JOIN (R P1412) Q16030985))", "s_expression_cores": ["(AND (JOIN (R P1412) Q5337326) (JOIN P31 Q34770) (JOIN (R P1412) Q16030985))"], "sparql_delex": "SELECT ?x WHERE { wd:Q5337326 wdt:P1412 ?x . ?x wdt:P31 wd:Q34770 .  wd:Q16030985 wdt:P1412 ?x .  }", "results": ["Q1860"], "coreference_resolved_question": "Which language can William Hart understand?", "s_expression_fn": "(AND (JOIN (R languages_spoken,_written_or_signed) Edgar_Keatinge) (JOIN instance_of language) (JOIN (R languages_spoken,_written_or_signed) William_Hart))", "predicted_s_expression_fn": "(AND (JOIN (R languages_spoken,_written_or_signed) Edgar_Keatinge) (JOIN (R languages_spoken,_written_or_signed) William_Hart))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "724.30.8", "question_type": "Logical Reasoning (All)", "description": "Logical|Difference|Multiple_Relation", "question": "Which administrative territories have diplomatic relations with Australia and are not Willy La Croixstraat present in ? [CTX]", "answer": "Some of them are Dominican Republic, Mauritius, Switzerland, Namibia, Jordan, Samoa, South Korea, Ghana, People's Republic of China, Argentina", "s_expression": "(DIFF (AND (JOIN (R P530) Q408) (JOIN P31 Q15617994)) (JOIN (R P17) Q19658517))", "s_expression_cores": ["(AND (JOIN (R P530) Q408) (JOIN P31 Q15617994))", "(JOIN (R P17) Q19658517)"], "sparql_delex": "SELECT ?x WHERE { wd:Q408 wdt:P530 ?x . ?x wdt:P31 wd:Q15617994 .  FILTER NOT EXISTS { wd:Q19658517 wdt:P17 ?x .  } }", "results": ["Q702", "Q801", "Q800", "Q419", "Q668", "Q414", "Q142", "Q145", "Q148", "Q783", "Q786", "Q924", "Q712", "Q711", "Q836", "Q837", "Q252", "Q403", "Q258", "Q45", "Q159", "Q43", "Q41", "Q155", "Q792", "Q796", "Q794", "Q954", "Q889", "Q884", "Q881", "Q822", "Q244", "Q33", "Q921", "Q31", "Q30", "Q37", "Q36", "Q34", "Q928", "Q39", "Q38", "Q739", "Q423", "Q424", "Q851", "Q733", "Q854", "Q734", "Q736", "Q233", "Q20", "Q1041", "Q27", "Q29", "Q1027", "Q1020", "Q843", "Q1029", "Q225", "Q224", "Q221", "Q96", "Q229", "Q17", "Q902", "Q1036", "Q1033", "Q1030", "Q191", "Q963", "Q697", "Q298", "Q695", "Q115", "Q114", "Q117", "Q754", "Q750", "Q212", "Q213", "Q211", "Q215", "Q218", "Q219", "Q916", "Q833", "Q977", "Q1009", "Q683", "Q686", "Q574", "Q79", "Q77", "Q878", "Q774", "Q817", "Q810", "Q811", "Q819", "Q678", "Q33788", "Q869", "Q953"], "coreference_resolved_question": "Which administrative territories have diplomatic relations with Australia and are not Willy La Croixstraat present in?", "s_expression_fn": "(DIFF (AND (JOIN (R diplomatic_relation) Australia) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (JOIN (R country) Willy_La_Croixstraat))", "predicted_s_expression_fn": "(DIFF (AND (JOIN diplomatic_relation Australia) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (JOIN (R present_in) Willy_La_Croixstraat))", "predicted_s_expression": "(DIFF (AND (JOIN P530 Q408) (JOIN P31 Q15617994)) (JOIN (R P1441) Q19658517))", "sparql_attempt_count": 2, "actions": "SELECT ?x WHERE { ?x wdt:P530 wd:Q408 . ?x wdt:P31 wd:Q15617994 . FILTER NOT EXISTS { wd:Q19658517 wdt:P1441 ?x . } }"}, {"turnID": "1282.80.3", "question_type": "Logical Reasoning (All)", "description": "Logical|Difference|Single_Relation", "question": "Which occupations are the job of Edwige Lemoine but not Vytautas Pranas Bi\u010di\u016bnas ? [CTX]", "answer": "dub actor", "s_expression": "(DIFF (AND (JOIN (R P106) Q3048751) (JOIN P31 Q12737077)) (JOIN (R P106) Q4087635))", "s_expression_cores": ["(AND (JOIN (R P106) Q3048751) (JOIN P31 Q12737077))", "(JOIN (R P106) Q4087635)"], "sparql_delex": "SELECT ?x WHERE { wd:Q3048751 wdt:P106 ?x . ?x wdt:P31 wd:Q12737077 .  FILTER NOT EXISTS { wd:Q4087635 wdt:P106 ?x .  } }", "results": ["Q11481802"], "coreference_resolved_question": "Which occupations are the job of Edwige Lemoine but not Vytautas Pranas Bi\u010di\u016bnas?", "s_expression_fn": "(DIFF (AND (JOIN (R occupation) Edwige_Lemoine) (JOIN instance_of occupation)) (JOIN (R occupation) Vytautas_Pranas_Bi\u010di\u016bnas))", "predicted_s_expression_fn": "(DIFF (AND (JOIN (R occupation) Edwige_Lemoine) (JOIN instance_of occupation) (AND (JOIN (R occupation) Vytautas_Pranas_Bi\u010di\u016bnas) (JOIN instance_of occupation)))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "1282.64.8", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Single_Relation|Incomplete", "question": "What is the name of the patron saint of composer ? [SEP] Saint Cecilia [SEP] What is the sex of that person ? [SEP] female [SEP] And also Arline Friscia [CTX]", "answer": "female", "s_expression": "(AND (JOIN (R P21) Q80513) (JOIN P31 Q290) (JOIN (R P21) Q4792241))", "s_expression_cores": ["(AND (JOIN (R P21) Q80513) (JOIN P31 Q290) (JOIN (R P21) Q4792241))"], "sparql_delex": "SELECT ?x WHERE { wd:Q80513 wdt:P21 ?x . ?x wdt:P31 wd:Q290 .  wd:Q4792241 wdt:P21 ?x .  }", "results": ["Q6581072"], "coreference_resolved_question": "What is the sex of Arline Friscia?", "s_expression_fn": "(AND (JOIN (R sex_or_gender) Saint_Cecilia) (JOIN instance_of sex) (JOIN (R sex_or_gender) Arline_Friscia))", "predicted_s_expression_fn": "(AND (JOIN (R sex_or_gender) Saint_Cecilia) (JOIN instance_of sex) (JOIN (R sex_or_gender) Arline_Friscia)", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "1356.16.2", "question_type": "Logical Reasoning (All)", "description": "Logical|Difference|Multiple_Relation", "question": "Which paintings belong to British Museum and do not use watercolor to make their product ? [CTX]", "answer": "Icon of the Triumph of Orthodoxy, The Death of Earl Goodwin, Design for the dedication of Blair's 'The Grave', The Judgment of Paris, Jacob's Dream, Jacques and the Wounded Stag", "s_expression": "(DIFF (AND (JOIN P195 Q6373) (JOIN P31 Q3305213)) (JOIN P186 Q50030))", "s_expression_cores": ["(AND (JOIN P195 Q6373) (JOIN P31 Q3305213))", "(JOIN P186 Q50030)"], "sparql_delex": "SELECT ?x WHERE { ?x wdt:P195 wd:Q6373 . ?x wdt:P31 wd:Q3305213 .  FILTER NOT EXISTS { ?x wdt:P186 wd:Q50030 .  } }", "results": ["Q20087452", "Q23700508", "Q23691640", "Q23692163", "Q23691577", "Q23691618"], "coreference_resolved_question": "Which paintings belong to British Museum and do not use watercolor to make their product?", "s_expression_fn": "(DIFF (AND (JOIN collection British_Museum) (JOIN instance_of painting)) (JOIN made_from_material watercolor))", "predicted_s_expression_fn": "(DIFF (AND (JOIN (R collection) British_Museum) (JOIN instance_of painting)) (AND (JOIN (R medium) watercolor) (JOIN instance_of painting)))", "predicted_s_expression": "", "sparql_attempt_count": 2, "actions": ""}, {"turnID": "1057.79.2", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Single_Relation|Incomplete", "question": "Which sex does Daniel Emilfork have ? [SEP] male [SEP] Which minerals come from that sex ? [SEP] mendeleevite-(Ce), reynoldsite, urusovite [SEP] And also Carlos do Prado Barbosa [CTX]", "answer": "carlosbarbosaite", "s_expression": "(AND (JOIN P138 Q6581097) (JOIN P31 Q7946) (JOIN P138 Q24264101))", "s_expression_cores": ["(AND (JOIN P138 Q6581097) (JOIN P31 Q7946) (JOIN P138 Q24264101))"], "sparql_delex": "SELECT ?x WHERE { ?x wdt:P138 wd:Q6581097 . ?x wdt:P31 wd:Q7946 .  ?x wdt:P138 wd:Q24264101 .  }", "results": ["Q19833301"], "coreference_resolved_question": "Which sex does Carlos do Prado Barbosa have?", "s_expression_fn": "(AND (JOIN named_after male) (JOIN instance_of mineral) (JOIN named_after Carlos_do_Prado_Barbosa))", "predicted_s_expression_fn": "(AND (JOIN (R sex_or_gender) Daniel_Emilfork) (JOIN instance_of sex) (JOIN (R sex_or_gender) Carlos_do_Prado_Barbosa))", "predicted_s_expression": "(AND (JOIN (R P21) Q2465528) (JOIN P31 Q290) (JOIN (R P21) Q24264101))", "sparql_attempt_count": 2, "actions": "SELECT ?x WHERE { wd:Q2465528 wdt:P21 ?x . ?x wdt:P31 wd:Q290 . wd:Q24264101 wdt:P21 ?x . }"}, {"turnID": "1222.36.3", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Single_Relation|Incomplete", "question": "Which administrative territory does James T. Nulty belong to ? [SEP] United States of America [SEP] And also Horace Henderson [CTX]", "answer": "United States of America", "s_expression": "(AND (JOIN (R P27) Q16987881) (JOIN P31 Q15617994) (JOIN (R P27) Q1627876))", "s_expression_cores": ["(AND (JOIN (R P27) Q16987881) (JOIN P31 Q15617994) (JOIN (R P27) Q1627876))"], "sparql_delex": "SELECT ?x WHERE { wd:Q16987881 wdt:P27 ?x . ?x wdt:P31 wd:Q15617994 .  wd:Q1627876 wdt:P27 ?x .  }", "results": ["Q30"], "coreference_resolved_question": "Which administrative territory does Horace Henderson belong to?", "s_expression_fn": "(AND (JOIN (R country_of_citizenship) James_T._Nulty) (JOIN instance_of designation_for_an_administrative_territorial_entity) (JOIN (R country_of_citizenship) Horace_Henderson))", "predicted_s_expression_fn": "(AND (JOIN (R country_of_citizenship) James_T._Nulty) (JOIN instance_of designation_for_an_administrative_territorial_entity) (JOIN (R country_of_citizenship) Horace_Henderson))", "predicted_s_expression": "(AND (JOIN (R P27) Q16987881) (JOIN P31 Q15617994) (JOIN (R P27) Q1627876))", "sparql_attempt_count": 2, "actions": "SELECT ?x WHERE { wd:Q16987881 wdt:P27 ?x . ?x wdt:P31 wd:Q15617994 . wd:Q1627876 wdt:P27 ?x . }"}, {"turnID": "1222.115.11", "question_type": "Logical Reasoning (All)", "description": "Logical|Difference|Multiple_Relation", "question": "Which people were born at Livorno and are not working as politician ? [CTX]", "answer": "Some of them are Gian Pietro Tagliaferri, Roberto Vestrini, Dino Baccheretti, Alessandro Mirandoli, Eugenia Falleni, Mario Spallino, Giovanni Vincenzi, Dino Pelagatti, Giovanni Cosimo Bonomo, Eugenio Cecconi", "s_expression": "(DIFF (AND (JOIN P19 Q6761) (JOIN P31 Q502895)) (JOIN P106 Q82955))", "s_expression_cores": ["(AND (JOIN P19 Q6761) (JOIN P31 Q502895))", "(JOIN P106 Q82955)"], "sparql_delex": "SELECT ?x WHERE { ?x wdt:P19 wd:Q6761 . ?x wdt:P31 wd:Q502895 .  FILTER NOT EXISTS { ?x wdt:P106 wd:Q82955 .  } }", "results": ["Q3944222", "Q3948216", "Q1356814", "Q16824968", "Q3767145", "Q3932733", "Q3645786", "Q3932736", "Q114685", "Q3723882", "Q3848522", "Q3767663", "Q16575650", "Q3679950", "Q3972371", "Q1445634", "Q3431090", "Q3732619", "Q493374", "Q3757085", "Q3894444", "Q3605230", "Q3659284", "Q3695109", "Q1811427", "Q955360", "Q3617376", "Q3617371", "Q3838030", "Q13415683", "Q2885857", "Q3756591", "Q17285126", "Q3707244", "Q16612691", "Q611603", "Q328719", "Q3839147", "Q3838729", "Q4015438", "Q3804903", "Q3734310", "Q500138", "Q3903258", "Q19985321", "Q1872956", "Q3903096", "Q1448379", "Q3972750", "Q3903205", "Q3608646", "Q3849198", "Q3610484", "Q4003436", "Q6132158", "Q17631697", "Q310034", "Q16580862", "Q1069372", "Q3063999", "Q3887077", "Q3897052", "Q3778501", "Q3941616", "Q3941613", "Q5621312", "Q1495543", "Q3082308", "Q3373149", "Q3659457", "Q2935692", "Q3903148", "Q3659517", "Q3852844", "Q3618850", "Q16566856", "Q3746364", "Q3894091", "Q19819563", "Q3894477", "Q18812145", "Q4000356", "Q1365369", "Q3849006", "Q11774282", "Q3838192", "Q3071894", "Q3763222", "Q5619862", "Q1226624", "Q3839853", "Q23583654", "Q3726460", "Q1897541", "Q3719611", "Q3707945", "Q3894271", "Q1987632", "Q1488705", "Q13435735", "Q3659956", "Q3769587", "Q5994787", "Q3695656", "Q3848411", "Q3619270", "Q3623762", "Q3762466", "Q792158", "Q607190", "Q3839776", "Q3624522", "Q3638353", "Q8157342", "Q16597684", "Q982529", "Q1112867", "Q3620311", "Q786339", "Q15143072", "Q16576733", "Q3936103", "Q3768360", "Q3768207", "Q3735114", "Q3610335", "Q1165965", "Q4015691", "Q3610233", "Q3659082", "Q2451812", "Q3938522", "Q3830266", "Q22966971", "Q93993", "Q1642981", "Q16557476", "Q4013163", "Q17495730", "Q16525947", "Q1485824", "Q3766534", "Q21541755", "Q3627914", "Q1811710", "Q3664225", "Q3840176", "Q4013685", "Q33783", "Q4017902", "Q1547925", "Q3903100", "Q3725732", "Q3707956", "Q3659795", "Q21587913", "Q21587912", "Q3622990", "Q612194", "Q3742626", "Q23309401", "Q3105225", "Q1125205", "Q18811739", "Q3742578", "Q3940719", "Q3839896", "Q19619459", "Q3826314", "Q3844737", "Q3839954", "Q2666453", "Q1522435", "Q17279899", "Q2591305", "Q16559406", "Q3848281", "Q496256", "Q21638140", "Q17620824", "Q610287", "Q3241476", "Q3848453", "Q3701890", "Q3290108", "Q16882829", "Q15653867", "Q3264981", "Q3762753", "Q3749423", "Q2849475", "Q19985118", "Q3743801", "Q3703577", "Q3762006", "Q3619733", "Q1811437", "Q3779323", "Q27453393", "Q18812333", "Q7417310", "Q676233", "Q3725905", "Q3725906", "Q1619403", "Q3734268", "Q3611338", "Q15695792", "Q14526991", "Q3724741", "Q1044694", "Q1553404", "Q1701983", "Q3606563", "Q1993150", "Q3874490", "Q16576944", "Q987624", "Q3605481", "Q3608158", "Q176838", "Q1117471", "Q3763462", "Q3894017", "Q17991959", "Q3938885", "Q5980880", "Q1614677", "Q1465685", "Q3764563", "Q3645776", "Q4003390", "Q3765338", "Q18214175", "Q3762824", "Q3766056", "Q2382450", "Q6830185", "Q3702026", "Q21030401", "Q3713793", "Q1110305", "Q1608603", "Q3619512", "Q3614387", "Q4003324", "Q18202680", "Q330370", "Q3749953", "Q3707920", "Q1824992", "Q3741930", "Q3611505", "Q1748312", "Q573861", "Q16606366", "Q546575", "Q15020696", "Q2354752", "Q16549770", "Q1447950", "Q644420", "Q447810", "Q3694329", "Q3649613", "Q430372", "Q3932992", "Q1553396", "Q5444642", "Q16525084", "Q3796317", "Q1525650", "Q3749775", "Q3611374", "Q2338457", "Q3771000", "Q1538624", "Q3611479", "Q775372", "Q6836812", "Q15789105", "Q3701793", "Q3734026", "Q773275", "Q3838200", "Q3992759", "Q3624518", "Q24205778", "Q1811402", "Q780077", "Q3748812", "Q3880483", "Q1657760", "Q3726063", "Q18071705", "Q3695128", "Q3837026", "Q3638767", "Q3725936", "Q3732299", "Q1702224", "Q3769478", "Q3769805", "Q3301697", "Q3904171", "Q16916355", "Q16533915", "Q1485816", "Q869190", "Q3766014", "Q3832030", "Q3762394", "Q3852839", "Q14524613", "Q3832035", "Q3835735", "Q16528560", "Q3768386", "Q1811418", "Q3703182", "Q16536854", "Q3769659", "Q3939115", "Q24205763", "Q1644529", "Q3764637", "Q5448722", "Q3972455", "Q3059618", "Q1992765", "Q3609282", "Q18747324", "Q10555584", "Q181894", "Q12954830", "Q6379474", "Q3702603", "Q15711375", "Q3702560", "Q19357777", "Q16557465", "Q3617353", "Q173572", "Q3848503", "Q3951063", "Q3932710", "Q3849965", "Q1486234", "Q16606358", "Q3610003", "Q3703137", "Q18420364", "Q3838128", "Q1640602", "Q3838121", "Q3680056", "Q1369029", "Q3723968", "Q3659692", "Q1384388", "Q3897858", "Q3851169", "Q678754", "Q17411686", "Q3609145", "Q16559057", "Q3756621", "Q964405", "Q3659199", "Q3929247", "Q18288596", "Q1441142", "Q3839572", "Q3725489", "Q3874488", "Q581147", "Q3848897", "Q14828752", "Q3617228", "Q3894007", "Q1641590", "Q1993198", "Q1915302", "Q10499304", "Q3749641", "Q3724479", "Q1409149", "Q3766266", "Q15688669", "Q1485841", "Q3724302", "Q7132184", "Q3758747", "Q3765328", "Q3852942", "Q3609928", "Q3852941", "Q3620241", "Q15773545", "Q4716370", "Q1310912", "Q3763607", "Q509624", "Q3938721", "Q3894073", "Q3771361", "Q3741795", "Q2298687", "Q795628", "Q2825077", "Q18812168", "Q3812994", "Q4015356", "Q1540676", "Q3838630", "Q3848629", "Q656230", "Q3804432", "Q19258472", "Q3851333", "Q16549767", "Q3750375", "Q3903052", "Q1609059", "Q3622681", "Q387351", "Q987930", "Q3779270", "Q15630299", "Q3497951", "Q3838652", "Q23829650", "Q259794", "Q3290121", "Q3616780", "Q3749764", "Q14604206", "Q3757797", "Q3757796", "Q3736422", "Q20984656", "Q3802259", "Q1426277", "Q3608445", "Q321351", "Q3617264", "Q31222", "Q3603793", "Q3830597", "Q19402659", "Q3903885", "Q3703109", "Q1341408", "Q593893", "Q1610175", "Q722632", "Q20954138", "Q3826763", "Q3903122", "Q1345590", "Q3960629", "Q4787015", "Q16913790", "Q3767575", "Q1638370", "Q3940645", "Q1811731", "Q3769636", "Q3904324", "Q554393", "Q3665338", "Q977030", "Q3840155", "Q3659201", "Q4003421", "Q3845382", "Q4003424", "Q3617802", "Q3745155", "Q1615707", "Q775800", "Q1465773", "Q1465385", "Q3628083", "Q16557253", "Q1485501", "Q16549787", "Q1992750", "Q1644484", "Q727374", "Q3846560", "Q601682", "Q455383", "Q3903159", "Q16549832", "Q16549781", "Q3903156", "Q988886", "Q16534029", "Q3839772", "Q3725668", "Q3972591", "Q3932708", "Q2700860", "Q3852071", "Q3608559", "Q3719692", "Q344765", "Q3950263", "Q3770235", "Q16576481", "Q3460489", "Q17629563", "Q4788320", "Q18202794", "Q924641", "Q3767813", "Q16562290", "Q3694284", "Q3770009", "Q3694281", "Q23796188", "Q23796185", "Q331076", "Q3731967", "Q3659747", "Q2435906", "Q3616044", "Q3610150", "Q23289439", "Q3848405", "Q733118", "Q4013927", "Q4008865", "Q1642922", "Q16608529", "Q3614134", "Q3737962", "Q710089", "Q589062", "Q3960843", "Q3725493", "Q16658000", "Q2835622", "Q7410221", "Q3807974", "Q4211694", "Q3848279", "Q16552046", "Q3750798", "Q3726002", "Q19984918", "Q3932685", "Q23058111", "Q3662442", "Q1487609", "Q6999251", "Q3779282", "Q3609275", "Q17285789", "Q3758777", "Q3776028", "Q3604908", "Q3779167", "Q3852951", "Q3776021", "Q5241570", "Q522470", "Q354529", "Q3713379", "Q3764713", "Q18672126", "Q1992035", "Q16062697", "Q2295254", "Q4003289", "Q5222851", "Q2502587", "Q4002914", "Q2831800", "Q3659851", "Q783344", "Q3768112", "Q120993", "Q5605391", "Q3763095", "Q3609948", "Q1042654", "Q3737719", "Q3762304", "Q3702629", "Q18812000", "Q1384941"], "coreference_resolved_question": "Which people were born at Livorno and are not working as politician?", "s_expression_fn": "(DIFF (AND (JOIN place_of_birth Livorno) (JOIN instance_of common_name)) (JOIN occupation politician))", "predicted_s_expression_fn": "(DIFF (AND (JOIN place_of_birth Livorno) (JOIN instance_of common_name)) (AND (JOIN occupation politician) (JOIN instance_of common_name)))", "predicted_s_expression": "", "sparql_attempt_count": 1, "actions": ""}, {"turnID": "1413.11.10", "question_type": "Logical Reasoning (All)", "description": "Logical|Difference|Multiple_Relation", "question": "Which applications as sport as their class and were not made for PlayStation ? [CTX]", "answer": "Some of them are Volleyball, Backyard Baseball, Backyard Football '08, Real Football 2010, Championship Manager: Season 97/98, Championship Manager 5, Backyard Soccer, Championship Manager 2007, NBA 09: The Inside, Championship Manager 2006", "s_expression": "(DIFF (AND (JOIN P136 Q349) (JOIN P31 Q166142)) (JOIN P400 Q10677))", "s_expression_cores": ["(AND (JOIN P136 Q349) (JOIN P31 Q166142))", "(JOIN P400 Q10677)"], "sparql_delex": "SELECT ?x WHERE { ?x wdt:P136 wd:Q349 . ?x wdt:P31 wd:Q166142 .  FILTER NOT EXISTS { ?x wdt:P400 wd:Q10677 .  } }", "results": ["Q6786209", "Q2413620", "Q1046160", "Q2819291", "Q4677156", "Q1794108", "Q5529219", "Q3338072", "Q2878448", "Q6842659", "Q2757019", "Q2073648", "Q2735278", "Q6952642", "Q1627471", "Q5875543", "Q5070126", "Q6954049", "Q4839879", "Q2736358", "Q4839872", "Q3023158", "Q2844106", "Q8035532", "Q3314408", "Q5949982", "Q3275484", "Q5070125", "Q2066948", "Q3275487", "Q16259528", "Q16258450", "Q6952681", "Q6952680", "Q2420968", "Q3286083", "Q4677516", "Q7880182", "Q7642589", "Q6954042", "Q7236400", "Q6053233", "Q909912", "Q5413171", "Q1083317", "Q4746203", "Q6786211", "Q4839884", "Q7699288", "Q4393076", "Q4839877", "Q2291507", "Q20890370", "Q3841386", "Q767436", "Q7388963", "Q16258953", "Q3666091", "Q7355075", "Q5369136", "Q5399203", "Q3851682", "Q7927432", "Q5070130", "Q3666089", "Q5070134", "Q5070137", "Q6954053", "Q7300917", "Q7692725", "Q3181983", "Q3486442", "Q5248674", "Q7206416", "Q6405131", "Q6756081", "Q2733052", "Q5174105"], "coreference_resolved_question": "Which applications as sport as their class and were not made for PlayStation?", "s_expression_fn": "(DIFF (AND (JOIN genre sport) (JOIN instance_of application)) (JOIN platform PlayStation))", "predicted_s_expression_fn": "(DIFF (AND (JOIN (R instance_of) sport) (JOIN (R platform) PlayStation))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "1527.47.11", "question_type": "Logical Reasoning (All)", "description": "Logical|Difference|Multiple_Relation", "question": "Which people died in Rio de Janeiro and do n't have nationality of Belgium ? [CTX]", "answer": "Some of them are Ingl\u00eas de Sousa, Artur Azevedo, Jackson de Figueiredo, Eurico Gaspar Dutra, Gra\u00e7a Aranha, Infante Pedro Carlos of Spain and Portugal, Carlos Scliar, Miguel, Prince of Beira, Henric\u00e3o, Princess Ragnhild, Mrs. Lorentzen", "s_expression": "(DIFF (AND (JOIN P20 Q8678) (JOIN P31 Q502895)) (JOIN P27 Q31))", "s_expression_cores": ["(AND (JOIN P20 Q8678) (JOIN P31 Q502895))", "(JOIN P27 Q31)"], "sparql_delex": "SELECT ?x WHERE { ?x wdt:P20 wd:Q8678 . ?x wdt:P31 wd:Q502895 .  FILTER NOT EXISTS { ?x wdt:P27 wd:Q31 .  } }", "results": ["Q2882591", "Q9368616", "Q359451", "Q9669011", "Q269841", "Q3783455", "Q1791015", "Q10283108", "Q3619221", "Q12104693", "Q3608943", "Q23945", "Q10364645", "Q738906", "Q16495208", "Q310209", "Q9587596", "Q3624672", "Q18223956", "Q16930150", "Q769862", "Q3624674", "Q298926", "Q3061118", "Q281078", "Q1793637", "Q2443452", "Q319532", "Q1561690", "Q2558474", "Q2538958", "Q1442041", "Q10282189", "Q10285675", "Q1595976", "Q1229177", "Q24434557", "Q619902", "Q10388883", "Q1092698", "Q9295597", "Q9013943", "Q7299812", "Q561983", "Q16939560", "Q972239", "Q18479173", "Q3992714", "Q963604", "Q5484164", "Q899535", "Q10325692", "Q610816", "Q982366", "Q9697254", "Q2445343", "Q1391980", "Q134165", "Q12087", "Q786371", "Q2262579", "Q10310585", "Q10307482", "Q5683551", "Q10371780", "Q641113", "Q3999068", "Q10262534", "Q4017974", "Q69846", "Q10271705", "Q4058284", "Q10295554", "Q973294", "Q6794015", "Q10331281", "Q298814", "Q3388729", "Q9012245", "Q546734", "Q192377", "Q72308", "Q4350483", "Q16491346", "Q10281226", "Q10364261", "Q4800259", "Q1440648", "Q3735183", "Q7937306", "Q1390036", "Q3893154", "Q9654505", "Q1877588", "Q750957", "Q5340322", "Q610673", "Q1564988", "Q10310530", "Q6291807", "Q13582672", "Q3438247", "Q3937095", "Q4223225", "Q10311327", "Q690608", "Q10298867", "Q456600", "Q4214827", "Q3821470", "Q13012", "Q4990545", "Q5291401", "Q4761573", "Q927595", "Q7077732", "Q9025490", "Q7937912", "Q6300118", "Q653387", "Q2881209", "Q2960116", "Q10268060", "Q642717", "Q4502770", "Q928189", "Q3081987", "Q7982310", "Q3064910", "Q10311068", "Q10391755", "Q383383", "Q5042017", "Q16144393", "Q1116866", "Q535521", "Q3153616", "Q16968954", "Q574025", "Q10280312", "Q10318582", "Q311185", "Q8063749", "Q545032", "Q543417", "Q585725", "Q10269239", "Q10316110", "Q3808578", "Q3186600", "Q1790976", "Q10366317", "Q2607615", "Q16484626", "Q9623910", "Q10340253", "Q195741", "Q9697378", "Q15007982", "Q10311010", "Q118425", "Q5050700", "Q3069492", "Q10324702", "Q10284910", "Q10321552", "Q119281", "Q9262190", "Q4215547", "Q3351795", "Q8188119", "Q6501838", "Q938759", "Q6704682", "Q10345862", "Q2527838", "Q1607279", "Q2013956", "Q10298003", "Q390029", "Q3288710", "Q3431491", "Q660125", "Q9050242", "Q3622966", "Q314696", "Q7299297", "Q10324263", "Q2426470", "Q10331431", "Q4025440", "Q314698", "Q1429490", "Q10394660", "Q311445", "Q16930369", "Q1857321", "Q982354", "Q981423", "Q460717", "Q153845", "Q2917461", "Q16909095", "Q10262855", "Q2226577", "Q4293596", "Q1231921", "Q10281658", "Q122905", "Q1103836", "Q1444882", "Q4280378", "Q16929994", "Q10294986", "Q6527189", "Q2895739", "Q2538550", "Q1710196", "Q18280100", "Q9621252", "Q1710230", "Q295262", "Q17352292", "Q10317050", "Q2658893", "Q1789935", "Q636323", "Q10290531", "Q9604869", "Q1683258", "Q7128994", "Q10384881", "Q4491744", "Q4491743", "Q10330108", "Q5495828", "Q465902", "Q2087429", "Q4139072", "Q1710229", "Q16939994", "Q10365086", "Q2598383", "Q727148", "Q2463446", "Q1449856", "Q2855284", "Q2719829", "Q1791225", "Q1150729", "Q1340957", "Q11685030", "Q2294362", "Q556575", "Q16930117", "Q6206326", "Q727090", "Q145710", "Q144827", "Q9697339", "Q5290431", "Q10262697", "Q15631816", "Q10304400", "Q2871691", "Q10304404", "Q20683523", "Q10366803", "Q1675818", "Q9697643", "Q641844", "Q10266496", "Q4359900", "Q1264246", "Q9184747", "Q1647427", "Q10309983", "Q1791311", "Q2091590", "Q1791098", "Q737839", "Q10393145", "Q10308104", "Q168447", "Q3229637", "Q1797410", "Q1787960", "Q4266785", "Q4118357", "Q604340", "Q1709660", "Q14474103", "Q1791177", "Q1807299", "Q355728", "Q9053598", "Q1679845", "Q10334689", "Q10364050", "Q87493", "Q10334527", "Q927470", "Q6333190", "Q10354183", "Q26247548", "Q10313590", "Q1431599", "Q1513038", "Q12082349", "Q11714123", "Q10285043", "Q1365820", "Q923012", "Q4764707", "Q2899086", "Q7365425", "Q651189", "Q64277", "Q3856483", "Q3113183", "Q1346664", "Q16487396", "Q470334", "Q1797524", "Q1392121", "Q10269292", "Q2712996", "Q117913", "Q4765121", "Q5709961", "Q3186314", "Q1987355", "Q3398505", "Q1395356", "Q4689376", "Q10388222", "Q1710128", "Q2737040", "Q269572", "Q3484791", "Q10346745", "Q4355039", "Q5617038", "Q3640119", "Q10307409", "Q11790937", "Q10375504", "Q8069995", "Q3268180", "Q4350335", "Q9138177", "Q2707766", "Q10324039", "Q10312237", "Q734274", "Q10272598", "Q2939485", "Q8962257", "Q10324032", "Q1221564", "Q3760147", "Q1396551", "Q961743", "Q10325473", "Q248585", "Q7862222", "Q3773732", "Q5017211", "Q965541", "Q1674197", "Q4690359", "Q10359914", "Q2461189", "Q2005413", "Q3187320", "Q3187327", "Q15711545", "Q9697017", "Q6214875", "Q2360260", "Q10330133", "Q9582480", "Q3291000", "Q9014873", "Q176043", "Q1494414", "Q2377295", "Q3145052", "Q235955", "Q296679", "Q8193461", "Q15711542", "Q639379", "Q2762712", "Q2036898", "Q932350", "Q667127", "Q3810588", "Q932925", "Q318419", "Q742361", "Q10382735", "Q1290892", "Q1402657", "Q3175228", "Q1791359", "Q1789913", "Q713005", "Q7966882", "Q382957", "Q717755", "Q203514", "Q10320808", "Q10319904", "Q1791137", "Q16657897", "Q2635164", "Q13420850", "Q2604130", "Q1791035", "Q2714418", "Q10340243", "Q1042813", "Q957869", "Q7926485", "Q1333231", "Q10286870", "Q16090569", "Q10308156", "Q12339159", "Q1718080", "Q1690855", "Q520252", "Q2400968", "Q10299644", "Q156844", "Q9617937", "Q5666905", "Q310870", "Q10328978", "Q10324980", "Q10389316", "Q246903", "Q4022553", "Q612641", "Q2538934", "Q984416", "Q10285754", "Q311121", "Q4765169", "Q1797523", "Q10395742", "Q6752638", "Q5256897", "Q6298069", "Q481486", "Q21837940", "Q1797231", "Q9661780", "Q7844237", "Q9584331", "Q4685523", "Q329698", "Q1710163", "Q7925699", "Q1287161", "Q3191192", "Q26914344", "Q16497976", "Q2422968", "Q9609435", "Q10298296", "Q2655874", "Q455565", "Q456789", "Q3929622", "Q3186250", "Q10312271", "Q10367346", "Q250754", "Q16939721", "Q20972169", "Q90130", "Q2538624", "Q285326", "Q9393154", "Q5368625", "Q951477", "Q10298895", "Q2766113", "Q338693", "Q10326257", "Q464993", "Q10326285", "Q10336600", "Q3045300", "Q2340265", "Q20923280", "Q4725813", "Q1750226", "Q3179480", "Q18015645", "Q600390", "Q3724240", "Q2347483", "Q20054286", "Q928133", "Q1791241", "Q2900525", "Q1791248", "Q2126803", "Q592719", "Q1871208", "Q10294900", "Q4737605", "Q1789350", "Q2366279", "Q1215083", "Q10388882", "Q1606182", "Q2960448", "Q10306977", "Q7128945", "Q10335523", "Q10335522", "Q10272403", "Q2712599", "Q12077", "Q1488215", "Q1789951", "Q12073", "Q1789957", "Q9334815", "Q2711257", "Q10304931", "Q10322248", "Q10307622", "Q10310067", "Q10308168", "Q1164053", "Q640101", "Q10393797", "Q10285013", "Q1613526", "Q1992112", "Q9602507", "Q10330114", "Q2944430", "Q716174", "Q771263", "Q10321947", "Q5102169", "Q435289", "Q10368341", "Q10380250", "Q6233585", "Q1236568", "Q1237485", "Q10321349", "Q10321344", "Q3757103", "Q4777660", "Q1874539", "Q1791364", "Q5237980", "Q6159620", "Q199644", "Q10299768", "Q2384568", "Q2538974", "Q6107195", "Q21282362", "Q1216039", "Q430054", "Q10306773", "Q370782", "Q447984", "Q432260", "Q568860", "Q2037737", "Q1791060", "Q3335227", "Q2538541", "Q1166964", "Q10394655", "Q1409885", "Q3845006", "Q2714449", "Q734711", "Q527112", "Q9638340", "Q23831264", "Q1987642", "Q4241251", "Q978112", "Q773874", "Q4492290", "Q19826834", "Q324819", "Q2142383", "Q312486", "Q8071893", "Q1996425", "Q10369174", "Q299165", "Q2505429", "Q4020261", "Q1797532", "Q322812", "Q10341402", "Q2871225", "Q4778509", "Q696978", "Q4336518", "Q24009982", "Q10304921", "Q10325008", "Q379745", "Q1797307", "Q10307412", "Q4821304", "Q18015709", "Q10292841", "Q9354422", "Q7322864", "Q3034280", "Q11787772", "Q10346612", "Q6701506", "Q1947160", "Q2459965", "Q5200984", "Q705114", "Q3848846", "Q967729", "Q9002511", "Q10395369", "Q1152840", "Q4588951", "Q10363714", "Q1999056", "Q2519043", "Q312361", "Q1752529", "Q3092622", "Q16940249", "Q2538616", "Q2529631", "Q2645312", "Q566312", "Q7357135", "Q2538001", "Q10308660", "Q2865915", "Q2893524", "Q24035090", "Q2475786", "Q3640032", "Q20048207", "Q3839374", "Q3448563", "Q4068875", "Q8962587", "Q10306786", "Q1791520", "Q238688", "Q9005377", "Q636408", "Q10302193", "Q16939756", "Q1606371", "Q16490399", "Q10308315", "Q6334978", "Q6698662", "Q685301", "Q1813394", "Q2072868", "Q55426", "Q10266584", "Q10320690", "Q2817201", "Q2712435", "Q1042647", "Q927101", "Q235236", "Q284250", "Q1478648", "Q327208", "Q456952", "Q1337191", "Q717927", "Q10316596", "Q4455436", "Q10346869", "Q1356808", "Q1442140", "Q84239", "Q3336960", "Q5202392", "Q3186295", "Q10395468", "Q4317480", "Q541758", "Q11964", "Q3886995", "Q528922", "Q940848", "Q10271052", "Q6147067", "Q4253478", "Q1139463", "Q10304386", "Q438483", "Q10321271", "Q10363532", "Q4144912", "Q16488807", "Q2258791", "Q4712188", "Q466574", "Q4356291", "Q4172325", "Q693043", "Q10326399", "Q21344744", "Q10346319", "Q8775188", "Q214308", "Q1797348", "Q4198627", "Q612100", "Q736393", "Q3306241", "Q5217306", "Q1354227", "Q4712223", "Q611165", "Q19844559", "Q4686971", "Q9697381", "Q601214", "Q4068745", "Q1797186", "Q727060", "Q712089", "Q10298747", "Q16917730", "Q9616311", "Q10307225", "Q6949758", "Q23932539", "Q1370535", "Q281086", "Q1363480", "Q16143413", "Q601133", "Q1140743", "Q725109", "Q1243628", "Q3160244", "Q10271934", "Q1789286", "Q1788745", "Q4278491", "Q311145", "Q5561564", "Q5042254", "Q591529", "Q23893345", "Q9601942", "Q10284634", "Q468925", "Q2340277", "Q4418063", "Q1703853", "Q7351882", "Q1703925", "Q9582671", "Q25506606", "Q9612123", "Q2411958", "Q18643464", "Q5560622", "Q1584140", "Q10270479", "Q10304993", "Q1370813", "Q735407", "Q86089", "Q455703", "Q2410553", "Q2645350", "Q438907", "Q332012", "Q1789343", "Q4018985", "Q22053050", "Q6293425", "Q7155132", "Q383442", "Q207358", "Q17388535", "Q5278547", "Q7439648", "Q1791301", "Q10330646", "Q10304471", "Q931197", "Q787225", "Q558615", "Q25973191", "Q172337", "Q390787", "Q3622880", "Q10373009", "Q10385719", "Q471441", "Q926917", "Q3307822", "Q10396479", "Q6609465", "Q9587797", "Q360145", "Q3950698", "Q10346528", "Q403084", "Q434805", "Q1064436", "Q3941028", "Q7159858", "Q18015663", "Q1445955", "Q9256538", "Q199652", "Q10311074", "Q1797442", "Q10285091", "Q261000", "Q10331948", "Q3576443", "Q10391742", "Q2957974", "Q4093475", "Q4821268", "Q550701", "Q12304", "Q10336588", "Q2477747", "Q680627", "Q2773476", "Q10320824", "Q451298", "Q23822678", "Q1791114", "Q820125", "Q1791110", "Q731775", "Q3357523", "Q1790945", "Q10324872", "Q1941339", "Q1634908", "Q1797260", "Q10281013", "Q1791342", "Q3166093", "Q2710419", "Q265288", "Q3857253", "Q10318598", "Q7077807", "Q3470337", "Q3740514", "Q283964", "Q1675988", "Q268288", "Q6298186", "Q1791147", "Q2936235", "Q6979264", "Q5065619", "Q3765616", "Q294241", "Q10307569", "Q769055", "Q10346753", "Q7365839", "Q10270557", "Q180642", "Q10336410", "Q2538915", "Q2017507", "Q742047", "Q5337553", "Q5561534", "Q2939378", "Q16592934", "Q2546156", "Q2201504", "Q430652", "Q10342511", "Q10319943", "Q1749552", "Q1905941", "Q3623015", "Q1284127", "Q3030305", "Q112003", "Q17071442", "Q27306702", "Q10391633", "Q2222293", "Q10348769", "Q4777634", "Q333856", "Q3848706", "Q10393029", "Q2840761", "Q10307946", "Q4801687", "Q44907", "Q1131827", "Q10266505", "Q71991", "Q10312351", "Q15410683", "Q1401969", "Q1797277", "Q12352284", "Q504512", "Q548176", "Q1337113", "Q10376109", "Q3129915", "Q3068276", "Q978042", "Q10323818", "Q945169", "Q11764177", "Q2299640", "Q735899", "Q715032", "Q3059092", "Q3069008", "Q15118835", "Q1241293", "Q950459", "Q3576520", "Q10281301", "Q2398618", "Q3892112", "Q1290983", "Q83329", "Q1305639", "Q43834", "Q10340522", "Q2748268", "Q10303849", "Q3030431", "Q975468", "Q3028244", "Q2550245", "Q16490537", "Q1891444", "Q10295248", "Q768258", "Q10295219", "Q1797253", "Q2862073", "Q1363464", "Q1789876", "Q4713403", "Q973949", "Q3603887", "Q17401424", "Q2480556", "Q8199622", "Q496241", "Q974355"], "coreference_resolved_question": "Which people died in Rio de Janeiro and don't have nationality of Belgium?", "s_expression_fn": "(DIFF (AND (JOIN place_of_death Rio_de_Janeiro) (JOIN instance_of common_name)) (JOIN country_of_citizenship Belgium))", "predicted_s_expression_fn": "(DIFF (AND (JOIN (R place_of_death) Rio_de_Janeiro) (JOIN instance_of common_name)) (AND (JOIN (R country_of_citizenship) Belgium) (JOIN instance_of common_name))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "1527.77.7", "question_type": "Logical Reasoning (All)", "description": "Logical|Difference|Single_Relation", "question": "Which administrative territories are twin cities of Taranto but not Tokyo ? [CTX]", "answer": "Sparti, Alicante, Donetsk", "s_expression": "(DIFF (AND (JOIN (R P190) Q13498) (JOIN P31 Q56061)) (JOIN (R P190) Q1490))", "s_expression_cores": ["(AND (JOIN (R P190) Q13498) (JOIN P31 Q56061))", "(JOIN (R P190) Q1490)"], "sparql_delex": "SELECT ?x WHERE { wd:Q13498 wdt:P190 ?x . ?x wdt:P31 wd:Q56061 .  FILTER NOT EXISTS { wd:Q1490 wdt:P190 ?x .  } }", "results": ["Q2308046", "Q11959", "Q43070"], "coreference_resolved_question": "Which administrative territories are twin cities of Taranto but not Tokyo?", "s_expression_fn": "(DIFF (AND (JOIN (R twinned_administrative_body) Taranto) (JOIN instance_of administrative_territorial_entity)) (JOIN (R twinned_administrative_body) Tokyo))", "predicted_s_expression_fn": "(DIFF (AND (JOIN twinned_administrative_body Taranto) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (JOIN twinned_administrative_body Tokyo))", "predicted_s_expression": "(DIFF (AND (JOIN P190 Q13498) (JOIN P31 Q56061)) (JOIN P190 Q1490))", "sparql_attempt_count": 2, "actions": "SELECT ?x WHERE { ?x wdt:P190 wd:Q13498 . ?x wdt:P31 wd:Q56061 . FILTER NOT EXISTS { ?x wdt:P190 wd:Q1490 . } }"}, {"turnID": "773.22.5", "question_type": "Logical Reasoning (All)", "description": "Logical|Difference|Single_Relation", "question": "Which administrative territories are G20 but not 19 And 21, High Wych Road situated in ? [CTX]", "answer": "Some of them are South Korea, Indonesia, India, Brazil, Argentina, Saudi Arabia, United States of America, South Africa, People's Republic of China, Japan", "s_expression": "(DIFF (AND (JOIN (R P17) Q19771) (JOIN P31 Q15617994)) (JOIN (R P17) Q26395362))", "s_expression_cores": ["(AND (JOIN (R P17) Q19771) (JOIN P31 Q15617994))", "(JOIN (R P17) Q26395362)"], "sparql_delex": "SELECT ?x WHERE { wd:Q19771 wdt:P17 ?x . ?x wdt:P31 wd:Q15617994 .  FILTER NOT EXISTS { wd:Q26395362 wdt:P17 ?x .  } }", "results": ["Q142", "Q884", "Q159", "Q43", "Q155", "Q851", "Q148", "Q96", "Q17", "Q30", "Q252", "Q668", "Q38", "Q414", "Q258"], "coreference_resolved_question": "Which administrative territories are G20 but not 19 And 21, High Wych Road situated in?", "s_expression_fn": "(DIFF (AND (JOIN (R country) G20) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (JOIN (R country) 19_And_21,_High_Wych_Road))", "predicted_s_expression_fn": "(DIFF (AND (JOIN (R country) G20) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (AND (JOIN (R country) (VALUES 19_And_21 High_Wych_Road)) (JOIN instance_of designation_for_an_administrative_territorial_entity)))", "predicted_s_expression": "", "sparql_attempt_count": 1, "actions": ""}, {"turnID": "773.100.6", "question_type": "Logical Reasoning (All)", "description": "Logical|Difference|Multiple_Relation", "question": "Which administrative territories have a diplomatic relationship with United States of America and are not the countries of citizenship of Sergey Afanasyev ? [CTX]", "answer": "Some of them are Japan, Serbia, Iraq, People's Republic of China, Zambia, Argentina, Afghanistan, Albania, Yemen, Liechtenstein", "s_expression": "(DIFF (AND (JOIN (R P530) Q30) (JOIN P31 Q15617994)) (JOIN (R P27) Q4072665))", "s_expression_cores": ["(AND (JOIN (R P530) Q30) (JOIN P31 Q15617994))", "(JOIN (R P27) Q4072665)"], "sparql_delex": "SELECT ?x WHERE { wd:Q30 wdt:P530 ?x . ?x wdt:P31 wd:Q15617994 .  FILTER NOT EXISTS { wd:Q4072665 wdt:P27 ?x .  } }", "results": ["Q805", "Q38", "Q222", "Q801", "Q155", "Q148", "Q1011", "Q889", "Q796", "Q17", "Q37", "Q953", "Q668", "Q403", "Q347", "Q414"], "coreference_resolved_question": "Which administrative territories have a diplomatic relationship with United States of America and are not the countries of citizenship of Sergey Afanasyev?", "s_expression_fn": "(DIFF (AND (JOIN (R diplomatic_relation) United_States_of_America) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (JOIN (R country_of_citizenship) Sergey_Afanasyev))", "predicted_s_expression_fn": "(DIFF (AND (JOIN diplomatic_relation United_States_of_America) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (AND (JOIN (R country_of_citizenship) Sergey_Afanasyev) (JOIN instance_of designation_for_an_administrative_territorial_entity)))", "predicted_s_expression": "", "sparql_attempt_count": 1, "actions": ""}, {"turnID": "565.79.2", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Single_Relation|Incomplete", "question": "What did Samy-Oyame Mawene participate in ? [SEP] association football [SEP] And also 2013 Campeonato Carioca [CTX]", "answer": "association football", "s_expression": "(AND (JOIN (R P641) Q5195469) (JOIN P31 Q349) (JOIN (R P641) Q975242))", "s_expression_cores": ["(AND (JOIN (R P641) Q5195469) (JOIN P31 Q349) (JOIN (R P641) Q975242))"], "sparql_delex": "SELECT ?x WHERE { wd:Q5195469 wdt:P641 ?x . ?x wdt:P31 wd:Q349 .  wd:Q975242 wdt:P641 ?x .  }", "results": ["Q2736"], "coreference_resolved_question": "What did Samy-Oyame Mawene participate in? [SEP] association football [SEP] And also 2013 Campeonato Carioca [ENTITIES] United States of America: designation_for_an_administrative_territorial_entity; Horace Henderson: common_name; Livorno: administrative_territorial_entity; PlayStation: computing_platform; Rio de Janeiro: administrative_territorial_entity; Belgium: designation_for_an_administrative_territorial_entity; Taranto: administrative_territorial_entity; Tokyo: administrative_territorial_entity; G20: international_organization; High Wych Road: release; Samy-Oyame Mawene: common_name; association football: sport; 2013 Campeonato Carioca: football_tournament\n\nOutput: What did Samy-Oyame Mawene participate in? [SEP] association football [SEP] And also 2013 Campeonato Carioca [ENTITIES] United States of America: designation_for_an_administrative_territorial_entity; Horace Henderson: common_name; Livorno: administrative_territorial_entity; PlayStation: computing_platform", "s_expression_fn": "(AND (JOIN (R sport) Samy-Oyame_Mawene) (JOIN instance_of sport) (JOIN (R sport) 2013_Campeonato_Carioca))", "predicted_s_expression_fn": "(AND (JOIN sports_discipline_competed_in association_football) (JOIN sports_discipline_competed_in 2013_Campeonato_Carioca))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "565.51.8", "question_type": "Logical Reasoning (All)", "description": "Logical|Difference|Single_Relation", "question": "Which national sports teams were participants in 1966 FIFA World Cup but not 1978 FIFA World Cup ? [CTX]", "answer": "Bulgaria national football team, Soviet Union national football team, North Korea national football team, Portugal national football team, Chile national football team, Uruguay national football team, England national football team, Swiss national football team", "s_expression": "(DIFF (AND (JOIN (R P1923) Q134202) (JOIN P31 Q1194951)) (JOIN (R P1923) Q46943))", "s_expression_cores": ["(AND (JOIN (R P1923) Q134202) (JOIN P31 Q1194951))", "(JOIN (R P1923) Q46943)"], "sparql_delex": "SELECT ?x WHERE { wd:Q134202 wdt:P1923 ?x . ?x wdt:P31 wd:Q1194951 .  FILTER NOT EXISTS { wd:Q46943 wdt:P1923 ?x .  } }", "results": ["Q180845", "Q189275", "Q14132", "Q267245", "Q172025", "Q134916", "Q47762", "Q165141"], "coreference_resolved_question": "Which national sports teams were participants in 1966 FIFA World Cup but not 1978 FIFA World Cup?", "s_expression_fn": "(DIFF (AND (JOIN (R participating_team) 1966_FIFA_World_Cup) (JOIN instance_of national_sports_team)) (JOIN (R participating_team) 1978_FIFA_World_Cup))", "predicted_s_expression_fn": "(DIFF (AND (JOIN sports_discipline_competed_in 1966_FIFA_World_Cup) (JOIN instance_of national_sports_team)) (AND (JOIN sports_discipline_competed_in 1978_FIFA_World_Cup) (JOIN instance_of national_sports_team)))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "664.97.2", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Single_Relation|Incomplete", "question": "Which sex does Tim Simpson have ? [SEP] male [SEP] And also Justin Hunter [CTX]", "answer": "male", "s_expression": "(AND (JOIN (R P21) Q5574371) (JOIN P31 Q290) (JOIN (R P21) Q6317718))", "s_expression_cores": ["(AND (JOIN (R P21) Q5574371) (JOIN P31 Q290) (JOIN (R P21) Q6317718))"], "sparql_delex": "SELECT ?x WHERE { wd:Q5574371 wdt:P21 ?x . ?x wdt:P31 wd:Q290 .  wd:Q6317718 wdt:P21 ?x .  }", "results": ["Q6581097"], "coreference_resolved_question": "Which sex does Justin Hunter have?", "s_expression_fn": "(AND (JOIN (R sex_or_gender) Tim_Simpson) (JOIN instance_of sex) (JOIN (R sex_or_gender) Justin_Hunter))", "predicted_s_expression_fn": "(AND (JOIN (R sex_or_gender) Tim_Simpson) (JOIN (R sex_or_gender) Justin_Hunter))", "predicted_s_expression": "(AND (JOIN (R P21) Q20022459) (JOIN (R P21) Q6317718))", "sparql_attempt_count": 1, "actions": "SELECT ?x WHERE { wd:Q20022459 wdt:P21 ?x . wd:Q6317718 wdt:P21 ?x . }"}, {"turnID": "664.95.2", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Single_Relation|Incomplete", "question": "Which occupation has Jules Vann\u00e9rus as his/her 's career ? [SEP] archivist [SEP] Which sex does that person possess ? [SEP] male [SEP] And also Joseph Barnby [CTX]", "answer": "male", "s_expression": "(AND (JOIN (R P21) Q3188955) (JOIN P31 Q290) (JOIN (R P21) Q5566022))", "s_expression_cores": ["(AND (JOIN (R P21) Q3188955) (JOIN P31 Q290) (JOIN (R P21) Q5566022))"], "sparql_delex": "SELECT ?x WHERE { wd:Q3188955 wdt:P21 ?x . ?x wdt:P31 wd:Q290 .  wd:Q5566022 wdt:P21 ?x .  }", "results": ["Q6581097"], "coreference_resolved_question": "Which sex does Joseph Barnby possess?", "s_expression_fn": "(AND (JOIN (R sex_or_gender) Jules_Vann\u00e9rus) (JOIN instance_of sex) (JOIN (R sex_or_gender) Joseph_Barnby))", "predicted_s_expression_fn": "(AND (JOIN (R sex_or_gender) Jules_Vann\u00e9rus) (JOIN instance_of sex) (JOIN (R sex_or_gender) Joseph_Barnby))", "predicted_s_expression": "(AND (JOIN (R P21) Q3188955) (JOIN P31 Q290) (JOIN (R P21) Q5566022))", "sparql_attempt_count": 2, "actions": "SELECT ?x WHERE { wd:Q3188955 wdt:P21 ?x . ?x wdt:P31 wd:Q290 . wd:Q5566022 wdt:P21 ?x . }"}, {"turnID": "664.139.5", "question_type": "Logical Reasoning (All)", "description": "Logical|Intersection|Single_Relation|Incomplete", "question": "What is the military school where F\u00e9nelon Fran\u00e7ois Germain Passaga was educated ? [SEP] Ecole Sp\u00e9ciale Militaire de Saint-Cyr [SEP] And also Symphorien Boittelle [CTX]", "answer": "Ecole Sp\u00e9ciale Militaire de Saint-Cyr", "s_expression": "(AND (JOIN (R P69) Q8299178) (JOIN P31 Q1935049) (JOIN (R P69) Q3507913))", "s_expression_cores": ["(AND (JOIN (R P69) Q8299178) (JOIN P31 Q1935049) (JOIN (R P69) Q3507913))"], "sparql_delex": "SELECT ?x WHERE { wd:Q8299178 wdt:P69 ?x . ?x wdt:P31 wd:Q1935049 .  wd:Q3507913 wdt:P69 ?x .  }", "results": ["Q1132066"], "coreference_resolved_question": "What is the military school where Symphorien Boittelle was educated?", "s_expression_fn": "(AND (JOIN (R educated_at) F\u00e9nelon_Fran\u00e7ois_Germain_Passaga) (JOIN instance_of military_school) (JOIN (R educated_at) Symphorien_Boittelle))", "predicted_s_expression_fn": "(AND (JOIN (R educated_at) Symphorien_Boittelle) (JOIN instance_of military_school))", "predicted_s_expression": "(AND (JOIN (R P69) Q3507913) (JOIN P31 Q1935049))", "sparql_attempt_count": 2, "actions": "SELECT ?x WHERE { wd:Q3507913 wdt:P69 ?x . ?x wdt:P31 wd:Q1935049 . }"}, {"turnID": "664.37.6", "question_type": "Logical Reasoning (All)", "description": "Logical|Difference|Multiple_Relation", "question": "Which works of art have Edmund Lowe in their star cast and do n't have United Kingdom as their origination points ? [CTX]", "answer": "Some of them are Under Cover of Night, The Bad One, In Old Arizona, The Wizard, I Love That Man, Klondike Fury, Born Reckless, Women of All Nations, Honor Among Men, Black Sheep", "s_expression": "(DIFF (AND (JOIN P161 Q952690) (JOIN P31 Q838948)) (JOIN P495 Q145))", "s_expression_cores": ["(AND (JOIN P161 Q952690) (JOIN P31 Q838948))", "(JOIN P495 Q145)"], "sparql_delex": "SELECT ?x WHERE { ?x wdt:P161 wd:Q952690 . ?x wdt:P31 wd:Q838948 .  FILTER NOT EXISTS { ?x wdt:P495 wd:Q145 .  } }", "results": ["Q21527947", "Q722648", "Q22000570", "Q1185095", "Q7786283", "Q12061142", "Q5021584", "Q21869421", "Q16029063", "Q20715310", "Q6875825", "Q278127", "Q18636435", "Q21527687", "Q1672976", "Q7737803", "Q7730017", "Q18636472", "Q2870146", "Q2061796", "Q19363706", "Q776337", "Q7731999", "Q7764209", "Q2348773", "Q21527580", "Q23796986", "Q7080390", "Q21869729", "Q16679996", "Q3742374", "Q19878536", "Q3027987", "Q2592150", "Q19363611", "Q18636640", "Q19363640", "Q20649166", "Q21528065", "Q21999943", "Q2707270", "Q5560030", "Q16250644", "Q2943549", "Q5910215", "Q23797178", "Q3822665", "Q16946240", "Q21528244", "Q21528243", "Q739708", "Q2409342"], "coreference_resolved_question": "Which works of art have Edmund Lowe in their star cast and don't have United Kingdom as their origination points?", "s_expression_fn": "(DIFF (AND (JOIN cast_member Edmund_Lowe) (JOIN instance_of work_of_art)) (JOIN country_of_origin United_Kingdom))", "predicted_s_expression_fn": "(DIFF (AND (JOIN cast_member Edmund_Lowe) (JOIN instance_of work_of_art)) (AND (JOIN country_of_origin United_Kingdom) (JOIN instance_of work_of_art)))", "predicted_s_expression": "", "sparql_attempt_count": 1, "actions": ""}, {"turnID": "137.129.6", "question_type": "Logical Reasoning (All)", "description": "Logical|Difference|Single_Relation", "question": "Which metabolic processes are 6-phospho-beta-glucosidase    AMED_1157 but not Dimethylaniline monooxygenase [N-oxide-forming] 3 involved in ? [CTX]", "answer": "carbohydrate metabolic process", "s_expression": "(DIFF (AND (JOIN (R P682) Q23580903) (JOIN P31 Q1057)) (JOIN (R P682) Q14914446))", "s_expression_cores": ["(AND (JOIN (R P682) Q23580903) (JOIN P31 Q1057))", "(JOIN (R P682) Q14914446)"], "sparql_delex": "SELECT ?x WHERE { wd:Q23580903 wdt:P682 ?x . ?x wdt:P31 wd:Q1057 .  FILTER NOT EXISTS { wd:Q14914446 wdt:P682 ?x .  } }", "results": ["Q14762260"], "coreference_resolved_question": "Which metabolic processes are 6-phospho-beta-glucosidase AMED_1157 but not Dimethylaniline monooxygenase [N-oxide-forming] 3 involved in?", "s_expression_fn": "(DIFF (AND (JOIN (R biological_process) 6-phospho-beta-glucosidase____AMED_1157) (JOIN instance_of metabolic_process)) (JOIN (R biological_process) Dimethylaniline_monooxygenase_[N-oxide-forming]_3))", "predicted_s_expression_fn": "(DIFF (AND (JOIN (R involved_in) 6-phospho-beta-glucosidase____AMED_1157) (JOIN instance_of metabolic_process)) (AND (JOIN (R involved_in) Dimethylaniline_monooxygenase_[N-oxide-forming]_3) (JOIN instance_of metabolic_process)))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "137.81.9", "question_type": "Logical Reasoning (All)", "description": "Logical|Difference|Single_Relation", "question": "Which administrative territories have ambassadorial relations with Australia but not Canada ? [CTX]", "answer": "Some of them are Greece, Tonga, Lithuania, Spain, France, Nepal, Brunei, Myanmar, East Timor, Nauru", "s_expression": "(DIFF (AND (JOIN P530 Q408) (JOIN P31 Q15617994)) (JOIN P530 Q16))", "s_expression_cores": ["(AND (JOIN P530 Q408) (JOIN P31 Q15617994))", "(JOIN P530 Q16)"], "sparql_delex": "SELECT ?x WHERE { ?x wdt:P530 wd:Q408 . ?x wdt:P31 wd:Q15617994 .  FILTER NOT EXISTS { ?x wdt:P530 wd:Q16 .  } }", "results": ["Q1027", "Q96", "Q869", "Q1020", "Q800", "Q977", "Q1009", "Q686", "Q702", "Q736", "Q822", "Q419", "Q683", "Q244", "Q668", "Q774", "Q810", "Q414", "Q837", "Q142", "Q225", "Q224", "Q55", "Q221", "Q148", "Q783", "Q31", "Q786", "Q233", "Q1041", "Q921", "Q17", "Q37", "Q924", "Q574", "Q902", "Q1036", "Q712", "Q817", "Q836", "Q811", "Q191", "Q733", "Q219", "Q854", "Q734", "Q963", "Q697", "Q298", "Q695", "Q678", "Q114", "Q117", "Q403", "Q211", "Q754", "Q750", "Q213", "Q45", "Q41", "Q33788", "Q792", "Q215", "Q796", "Q794", "Q954", "Q1033", "Q424", "Q29", "Q819", "Q881", "Q916"], "coreference_resolved_question": "Which administrative territories have ambassadorial relations with Australia but not Canada?", "s_expression_fn": "(DIFF (AND (JOIN diplomatic_relation Australia) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (JOIN diplomatic_relation Canada))", "predicted_s_expression_fn": "(DIFF (AND (JOIN diplomatic_relation Australia) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (AND (JOIN diplomatic_relation Canada) (JOIN instance_of designation_for_an_administrative_territorial_entity))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "137.95.7", "question_type": "Logical Reasoning (All)", "description": "Logical|Difference|Single_Relation", "question": "Which works of art express David but not man ? [CTX]", "answer": "David vainqueur de Goliath", "s_expression": "(DIFF (AND (JOIN P180 Q41370) (JOIN P31 Q838948)) (JOIN P180 Q8441))", "s_expression_cores": ["(AND (JOIN P180 Q41370) (JOIN P31 Q838948))", "(JOIN P180 Q8441)"], "sparql_delex": "SELECT ?x WHERE { ?x wdt:P180 wd:Q41370 . ?x wdt:P31 wd:Q838948 .  FILTER NOT EXISTS { ?x wdt:P180 wd:Q8441 .  } }", "results": ["Q18191123"], "coreference_resolved_question": "Which works of art express David but not man?", "s_expression_fn": "(DIFF (AND (JOIN depicts David) (JOIN instance_of work_of_art)) (JOIN depicts man))", "predicted_s_expression_fn": "(DIFF (AND (JOIN (R depicts) David) (AND (JOIN (R depicts) man) (JOIN instance_of work_of_art)))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "1017.42.6", "question_type": "Logical Reasoning (All)", "description": "Logical|Difference|Multiple_Relation", "question": "Which administrative territories holds diplomatic relationship with Germany and are not Mersin Tennis Complex present in ? [CTX]", "answer": "Some of them are Slovenia, Peru, Niger, Ukraine, Bosnia and Herzegovina, Italy, Ecuador, Malta, Namibia, Cyprus", "s_expression": "(DIFF (AND (JOIN (R P530) Q183) (JOIN P31 Q15617994)) (JOIN (R P17) Q15253170))", "s_expression_cores": ["(AND (JOIN (R P530) Q183) (JOIN P31 Q15617994))", "(JOIN (R P17) Q15253170)"], "sparql_delex": "SELECT ?x WHERE { wd:Q183 wdt:P530 ?x . ?x wdt:P31 wd:Q15617994 .  FILTER NOT EXISTS { wd:Q15253170 wdt:P17 ?x .  } }", "results": ["Q804", "Q801", "Q800", "Q419", "Q668", "Q414", "Q142", "Q55", "Q145", "Q262", "Q148", "Q783", "Q265", "Q833", "Q711", "Q717", "Q252", "Q403", "Q657", "Q258", "Q45", "Q159", "Q41", "Q155", "Q796", "Q794", "Q954", "Q889", "Q884", "Q958", "Q881", "Q739", "Q241", "Q242", "Q811", "Q33", "Q32", "Q31", "Q30", "Q924", "Q36", "Q34", "Q929", "Q39", "Q38", "Q986", "Q423", "Q983", "Q851", "Q733", "Q734", "Q736", "Q730", "Q230", "Q232", "Q233", "Q238", "Q20", "Q1045", "Q1041", "Q27", "Q28", "Q29", "Q1049", "Q189", "Q843", "Q184", "Q1029", "Q1028", "Q786", "Q347", "Q227", "Q225", "Q224", "Q222", "Q96", "Q229", "Q228", "Q17", "Q902", "Q1036", "Q1037", "Q1008", "Q1032", "Q1033", "Q1030", "Q965", "Q967", "Q962", "Q963", "Q298", "Q115", "Q114", "Q117", "Q750", "Q212", "Q213", "Q217", "Q214", "Q215", "Q218", "Q219", "Q912", "Q917", "Q916", "Q1007", "Q1006", "Q1005", "Q1009", "Q974", "Q971", "Q79", "Q77", "Q878", "Q774", "Q948", "Q810", "Q1019", "Q1016", "Q1011", "Q945", "Q869", "Q953"], "coreference_resolved_question": "Which administrative territories hold diplomatic relationships with Germany and are not Mersin Tennis Complex present in?", "s_expression_fn": "(DIFF (AND (JOIN (R diplomatic_relation) Germany) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (JOIN (R country) Mersin_Tennis_Complex))", "predicted_s_expression_fn": "(DIFF (AND (JOIN diplomatic_relation Germany) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (JOIN (R present_in) Mersin_Tennis_Complex))", "predicted_s_expression": "(DIFF (AND (JOIN P530 Q183) (JOIN P31 Q15617994)) (JOIN (R P1441) Q15253170))", "sparql_attempt_count": 2, "actions": "SELECT ?x WHERE { ?x wdt:P530 wd:Q183 . ?x wdt:P31 wd:Q15617994 . FILTER NOT EXISTS { wd:Q15253170 wdt:P1441 ?x . } }"}, {"turnID": "315.76.9", "question_type": "Logical Reasoning (All)", "description": "Logical|Difference|Multiple_Relation", "question": "Which political territories have diplomatic relations with Thailand and are not Clarkes Hill present in ? [CTX]", "answer": "Germany", "s_expression": "(DIFF (AND (JOIN (R P530) Q869) (JOIN P31 Q1048835)) (JOIN (R P17) Q21964159))", "s_expression_cores": ["(AND (JOIN (R P530) Q869) (JOIN P31 Q1048835))", "(JOIN (R P17) Q21964159)"], "sparql_delex": "SELECT ?x WHERE { wd:Q869 wdt:P530 ?x . ?x wdt:P31 wd:Q1048835 .  FILTER NOT EXISTS { wd:Q21964159 wdt:P17 ?x .  } }", "results": ["Q183"], "coreference_resolved_question": "Which political territories have diplomatic relations with Thailand and are not Clarkes Hill present in?", "s_expression_fn": "(DIFF (AND (JOIN (R diplomatic_relation) Thailand) (JOIN instance_of political_territorial_entity)) (JOIN (R country) Clarkes_Hill))", "predicted_s_expression_fn": "(DIFF (AND (JOIN diplomatic_relation Thailand) (JOIN instance_of political_territorial_entity)) (JOIN (R present_in_work) Clarkes_Hill))", "predicted_s_expression": "(DIFF (AND (JOIN P530 Q869) (JOIN P31 Q1048835)) (JOIN (R P1441) Q21964159))", "sparql_attempt_count": 2, "actions": "SELECT ?x WHERE { ?x wdt:P530 wd:Q869 . ?x wdt:P31 wd:Q1048835 . FILTER NOT EXISTS { wd:Q21964159 wdt:P1441 ?x . } }"}, {"turnID": "315.42.8", "question_type": "Logical Reasoning (All)", "description": "Logical|Difference|Multiple_Relation", "question": "Which administrative territories have diplomatic relationships with Argentina and are not Klyuchyovka River present in ? [CTX]", "answer": "Brazil, United States of America, Italy", "s_expression": "(DIFF (AND (JOIN (R P530) Q414) (JOIN P31 Q15617994)) (JOIN (R P17) Q1072196))", "s_expression_cores": ["(AND (JOIN (R P530) Q414) (JOIN P31 Q15617994))", "(JOIN (R P17) Q1072196)"], "sparql_delex": "SELECT ?x WHERE { wd:Q414 wdt:P530 ?x . ?x wdt:P31 wd:Q15617994 .  FILTER NOT EXISTS { wd:Q1072196 wdt:P17 ?x .  } }", "results": ["Q155", "Q30", "Q38"], "coreference_resolved_question": "Which administrative territories have diplomatic relationships with Argentina and are not Klyuchyovka River present in?", "s_expression_fn": "(DIFF (AND (JOIN (R diplomatic_relation) Argentina) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (JOIN (R country) Klyuchyovka_River))", "predicted_s_expression_fn": "(DIFF (AND (JOIN diplomatic_relation Argentina) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (JOIN (R present_in) Klyuchyovka_River))", "predicted_s_expression": "(DIFF (AND (JOIN P530 Q414) (JOIN P31 Q15617994)) (JOIN (R P1441) Q1072196))", "sparql_attempt_count": 2, "actions": "SELECT ?x WHERE { ?x wdt:P530 wd:Q414 . ?x wdt:P31 wd:Q15617994 . FILTER NOT EXISTS { wd:Q1072196 wdt:P1441 ?x . } }"}, {"turnID": "943.8.6", "question_type": "Logical Reasoning (All)", "description": "Logical|Difference|Multiple_Relation", "question": "Which administrative territories have diplomatic relationships with Germany and are not square des Gr\u00e8s present in ? [CTX]", "answer": "Some of them are Bulgaria, Iran, Bosnia and Herzegovina, Kazakhstan, Ukraine, Norway, Sudan, Cameroon, Morocco, South Africa", "s_expression": "(DIFF (AND (JOIN (R P530) Q183) (JOIN P31 Q15617994)) (JOIN (R P17) Q3494997))", "s_expression_cores": ["(AND (JOIN (R P530) Q183) (JOIN P31 Q15617994))", "(JOIN (R P17) Q3494997)"], "sparql_delex": "SELECT ?x WHERE { wd:Q183 wdt:P530 ?x . ?x wdt:P31 wd:Q15617994 .  FILTER NOT EXISTS { wd:Q3494997 wdt:P17 ?x .  } }", "results": ["Q804", "Q801", "Q800", "Q419", "Q668", "Q414", "Q55", "Q145", "Q262", "Q148", "Q783", "Q265", "Q833", "Q711", "Q717", "Q252", "Q403", "Q657", "Q258", "Q45", "Q159", "Q43", "Q41", "Q155", "Q796", "Q794", "Q954", "Q889", "Q884", "Q958", "Q881", "Q739", "Q241", "Q242", "Q811", "Q33", "Q32", "Q31", "Q30", "Q924", "Q36", "Q34", "Q929", "Q39", "Q38", "Q986", "Q423", "Q983", "Q851", "Q733", "Q734", "Q736", "Q730", "Q230", "Q232", "Q233", "Q238", "Q20", "Q1045", "Q1041", "Q27", "Q28", "Q29", "Q1049", "Q189", "Q843", "Q184", "Q1029", "Q1028", "Q786", "Q347", "Q227", "Q225", "Q224", "Q222", "Q96", "Q229", "Q228", "Q17", "Q902", "Q1036", "Q1037", "Q1008", "Q1032", "Q1033", "Q1030", "Q965", "Q967", "Q962", "Q963", "Q298", "Q115", "Q114", "Q117", "Q750", "Q212", "Q213", "Q217", "Q214", "Q215", "Q218", "Q219", "Q912", "Q917", "Q916", "Q1007", "Q1006", "Q1005", "Q1009", "Q974", "Q971", "Q79", "Q77", "Q878", "Q774", "Q948", "Q810", "Q1019", "Q1016", "Q1011", "Q945", "Q869", "Q953"], "coreference_resolved_question": "Which administrative territories have diplomatic relationships with Germany and are not square des Gr\u00e8s present in?", "s_expression_fn": "(DIFF (AND (JOIN (R diplomatic_relation) Germany) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (JOIN (R country) square_des_Gr\u00e8s))", "predicted_s_expression_fn": "(DIFF (AND (JOIN diplomatic_relation Germany) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (AND (JOIN present_in_work square_des_Gr\u00e8s) (JOIN instance_of designation_for_an_administrative_territorial_entity)))", "predicted_s_expression": "", "sparql_attempt_count": 1, "actions": ""}, {"turnID": "943.97.2", "question_type": "Logical Reasoning (All)", "description": "Logical|Difference|Multiple_Relation", "question": "Which people participated in 1964 Winter Olympics and do not have language named French ? [CTX]", "answer": "Some of them are Karen Dokka, Charles Snelling, Oleg Protopopov, Toyofumi Aruga, Yoshinari Kida, George Swarbrick, Koba Zakadze, Yasuko Takano, Horst Urban, Kaneko Takahashi", "s_expression": "(DIFF (AND (JOIN P1344 Q9636) (JOIN P31 Q502895)) (JOIN P1412 Q150))", "s_expression_cores": ["(AND (JOIN P1344 Q9636) (JOIN P31 Q502895))", "(JOIN P1412 Q150)"], "sparql_delex": "SELECT ?x WHERE { ?x wdt:P1344 wd:Q9636 . ?x wdt:P31 wd:Q502895 .  FILTER NOT EXISTS { ?x wdt:P1412 wd:Q150 .  } }", "results": ["Q458197", "Q18599846", "Q5923847", "Q893724", "Q105883", "Q973469", "Q3075795", "Q1647626", "Q1647623", "Q2473622", "Q9179914", "Q3783196", "Q1937275", "Q630525", "Q5109667", "Q1782855", "Q3371038", "Q1459920", "Q6516899", "Q14707", "Q725577", "Q263448", "Q1522054", "Q7878875", "Q9267424", "Q2006036", "Q16105773", "Q3810147", "Q4205943", "Q931765", "Q16018690", "Q1338448", "Q1581399", "Q25044", "Q535861", "Q1894900", "Q11516697", "Q714558", "Q3186743", "Q673541", "Q5964073", "Q524138", "Q1338117", "Q3131852", "Q15840164", "Q965098", "Q7350176", "Q15842904", "Q435783", "Q4891906", "Q6148377", "Q688923", "Q17428484", "Q875572", "Q1992443", "Q4017874", "Q2188992", "Q1964491", "Q444818", "Q3802487", "Q970159", "Q959804", "Q1390562", "Q3645761", "Q661214", "Q16097331", "Q16592011", "Q4292471", "Q3051873", "Q935434", "Q2283592", "Q457584", "Q2271678", "Q176785", "Q7513115", "Q18506977", "Q2425844", "Q548000", "Q2630565", "Q956676", "Q6181177", "Q18506749", "Q16104799", "Q1662811", "Q912015", "Q2793496", "Q12787187", "Q6321921", "Q2630897", "Q2061859", "Q7651849", "Q788035", "Q1362406", "Q1794104", "Q32775", "Q9293333", "Q3106700", "Q469668", "Q452152", "Q2428000", "Q20631080", "Q168878", "Q1579132", "Q9354345", "Q645436", "Q1772779", "Q3104597", "Q2562914", "Q3561726", "Q6302831", "Q1764471", "Q1295668", "Q539406", "Q1603773", "Q7356224", "Q267426", "Q338157", "Q1388974", "Q567096", "Q12796827", "Q9179715", "Q11676411", "Q3486694", "Q1338017", "Q603599", "Q9372080", "Q941788", "Q1357351", "Q5347979", "Q73191", "Q3065792", "Q701127", "Q4362465", "Q16105371", "Q16105279", "Q682389", "Q2544078", "Q5042703", "Q1400763", "Q1649553", "Q11869199", "Q11860402", "Q5649682", "Q445210", "Q1596322", "Q14519491", "Q11971777", "Q1703228", "Q16017617", "Q437211", "Q508334", "Q5297674", "Q4497469", "Q621243", "Q15807796", "Q3126989", "Q3033514", "Q11730309", "Q691384", "Q368539", "Q2133561", "Q537833", "Q270056", "Q6697659", "Q2436222", "Q1298891", "Q692584", "Q4413583", "Q460956", "Q4231880", "Q7149964", "Q7177653", "Q1086882", "Q70514", "Q3751895", "Q1825845", "Q464158", "Q260401", "Q78689", "Q3150995", "Q1340360", "Q608447", "Q16018365", "Q5115465", "Q444441", "Q3815748", "Q16105384", "Q614572", "Q893608", "Q6526996", "Q5506644", "Q9382177", "Q168313", "Q4768493", "Q16104847", "Q1385686", "Q2502464", "Q16106946", "Q5388574", "Q9357370", "Q16104568", "Q2831887", "Q2926611", "Q1976458", "Q3932649", "Q3058064", "Q5110030", "Q692302", "Q16106500", "Q437064", "Q723088", "Q6369604", "Q273516", "Q41522", "Q1436582", "Q1335619", "Q24776", "Q568608", "Q4205942", "Q2982558", "Q6383312", "Q2161077", "Q7360732", "Q175941", "Q435720", "Q18810182", "Q17402350", "Q2040498", "Q17566347", "Q16014811", "Q1282621", "Q3783165", "Q972476", "Q18507209", "Q4716623", "Q21715284", "Q16106269", "Q18507203", "Q1964510", "Q4942283", "Q153036", "Q1066793", "Q52398", "Q1684883", "Q540073", "Q3763056", "Q5081475", "Q427519", "Q9185494", "Q20985588", "Q598619", "Q709880", "Q15781727", "Q17228648", "Q828622", "Q443772", "Q3769729", "Q437247", "Q3645774", "Q20738242", "Q1910915", "Q227371", "Q1338072", "Q234223", "Q744292", "Q735808", "Q3156327", "Q18506944", "Q6382373", "Q20985514", "Q16106073", "Q16105733", "Q20738037", "Q181315", "Q631678", "Q24007423", "Q11999996", "Q2032799", "Q109618", "Q2526297", "Q1757624", "Q469859", "Q89344", "Q11501365", "Q15622332", "Q9162189", "Q12796796", "Q520654", "Q6453640", "Q1304066", "Q523572", "Q2630351", "Q2630357", "Q3435565", "Q5524666", "Q1393598", "Q11978127", "Q21932024", "Q1352592", "Q3804426", "Q3723780", "Q647399", "Q15052265", "Q11893545", "Q7342216", "Q4310507", "Q700085", "Q11670912", "Q1561147", "Q1157928", "Q1893212", "Q11764370", "Q437293", "Q3972255", "Q437009", "Q7379820", "Q7938537", "Q2682637", "Q4910317", "Q16299274", "Q14724", "Q6254918", "Q9199510", "Q7815996", "Q1308005", "Q1777380", "Q598149", "Q4355300", "Q12804287", "Q16104890", "Q24261875", "Q1334914", "Q314683", "Q1066099", "Q6988357", "Q2700693", "Q568547", "Q3769803", "Q981381", "Q701187", "Q954800", "Q8022569", "Q2664022", "Q5438988", "Q1342566", "Q6771447", "Q172427", "Q11892352", "Q4945271", "Q17426397", "Q768365", "Q5388968", "Q11967787", "Q873775", "Q872012", "Q7088280", "Q877829", "Q573696", "Q93453", "Q11491031", "Q469676", "Q455046", "Q876090", "Q1604287", "Q22253142", "Q1360391", "Q5276538", "Q6271679", "Q462097", "Q178860", "Q4532455", "Q2446669", "Q7796034", "Q1933154", "Q1603836", "Q552169", "Q14954957", "Q7344434", "Q3725617", "Q1450681", "Q678727", "Q2546274", "Q16514288", "Q11548097", "Q70943", "Q179341", "Q5462381", "Q9140798", "Q2302361", "Q131982", "Q1715086", "Q11731296", "Q16299800", "Q4579183", "Q4354589", "Q973567", "Q6183599", "Q6198812", "Q3382165", "Q1537696", "Q1348542", "Q2678478", "Q4589513", "Q2602549", "Q7796083", "Q970344", "Q16107239", "Q3487353", "Q6491673", "Q454735", "Q63960", "Q16012569", "Q11733038", "Q435737", "Q637594", "Q401300", "Q233449", "Q1353241", "Q267884", "Q520068", "Q7175333", "Q1252008", "Q1362490", "Q78735", "Q688889", "Q311793", "Q778327", "Q18507198", "Q255353", "Q16104822", "Q709064", "Q22815244", "Q2065752", "Q1340347", "Q1467448", "Q19981258", "Q1400705", "Q459548", "Q180630", "Q1245241", "Q3887286", "Q1346114", "Q748465", "Q5583987", "Q7172704", "Q5111181", "Q507303", "Q3608253", "Q15847276", "Q6426276", "Q1244539", "Q1307391", "Q1622769", "Q9153692", "Q729251", "Q15964335", "Q2016564", "Q347644", "Q671386", "Q876214", "Q691438", "Q3431103", "Q1127807", "Q272503", "Q20740595", "Q3435275", "Q827653", "Q426634", "Q43754", "Q863155", "Q16105043", "Q15842200", "Q1468142", "Q3804901", "Q12794326", "Q4983839", "Q916784", "Q16106879", "Q6279799", "Q862470", "Q6890477", "Q41653", "Q322770", "Q7083165", "Q2580567", "Q18223224", "Q11890219", "Q922436", "Q65682", "Q722295", "Q1119895", "Q363021", "Q2565190", "Q3478868", "Q16017742", "Q16105753", "Q3106219", "Q364090", "Q3380061", "Q11725681", "Q24007865", "Q2545580", "Q993182", "Q389627", "Q12791288", "Q2059445", "Q1627057", "Q3109369", "Q3371029", "Q7599058", "Q2076550", "Q16107079", "Q17111719", "Q472364", "Q6278959", "Q550733", "Q2982571", "Q1594340", "Q233710", "Q977973", "Q717280", "Q499906", "Q268484", "Q16104922", "Q16104925", "Q7385413", "Q1109236", "Q72311", "Q3956191", "Q1988135", "Q1379127", "Q11696149", "Q3080513", "Q6791713", "Q17108531", "Q449719", "Q2006005", "Q1715107", "Q23020140", "Q7166806", "Q976828", "Q5535819", "Q7825247", "Q1289499", "Q740695", "Q958691", "Q1378759", "Q2542103", "Q3499467", "Q256419", "Q9342709", "Q2342566", "Q1522702", "Q4349937", "Q11730888", "Q6377931", "Q12799987", "Q1636838", "Q465032", "Q16091972", "Q1292188", "Q2802392", "Q24038558", "Q1806044", "Q515608", "Q14949073", "Q488039", "Q16670507", "Q16106326", "Q16106436", "Q11554252", "Q573831", "Q497288", "Q6274575", "Q17627320", "Q5268594", "Q14720", "Q490717", "Q64950", "Q11781682", "Q827299", "Q113724", "Q4990202", "Q4762887", "Q11730666", "Q1992377", "Q11708983", "Q16105298", "Q7192620", "Q924245", "Q16106933", "Q619848", "Q2075143", "Q477565", "Q1782628", "Q2639265", "Q520679", "Q16106521", "Q7166756", "Q9348834", "Q4756052", "Q529542", "Q5389837", "Q20985743", "Q554938", "Q1036499", "Q15815270", "Q491097", "Q236546", "Q3743780", "Q445155", "Q24757", "Q1992199", "Q15731497", "Q11731627", "Q11768889", "Q11651418", "Q5492515", "Q540666", "Q1367864", "Q2093501", "Q20983742", "Q952918", "Q11651417", "Q13615173", "Q18507189", "Q9294621", "Q695762", "Q1297714", "Q515884", "Q18507185", "Q373199", "Q3676044", "Q2283761", "Q11818208", "Q890617", "Q7258761", "Q5627029", "Q458005", "Q335873", "Q5273039", "Q3434209", "Q11686155", "Q2058696", "Q522782", "Q504584", "Q7498969", "Q15303907", "Q65675", "Q8125581", "Q1379538", "Q9345503", "Q16722142", "Q16090092", "Q1222697", "Q499418", "Q16105126", "Q6148862", "Q8002098", "Q445208", "Q1776681", "Q710838", "Q457935", "Q4413600", "Q647864", "Q1288462", "Q3430840", "Q550957", "Q3430845", "Q695791", "Q609391", "Q455585", "Q78217", "Q6874100", "Q11725150", "Q24756", "Q11858692", "Q11864547", "Q9354413", "Q2569248", "Q8079330", "Q764826", "Q16019547", "Q269752", "Q11731412", "Q432342", "Q4693151", "Q7336480", "Q1583859", "Q16092882", "Q9151871", "Q23020555", "Q785244", "Q6305092", "Q700342", "Q16982530", "Q495491", "Q16105827", "Q14697", "Q5550945", "Q16095245", "Q3435543", "Q5544977", "Q3430069", "Q1946492", "Q20737979", "Q1547684", "Q260476", "Q86923", "Q1675787", "Q3082627", "Q9288471", "Q7108908", "Q20737976", "Q1933125", "Q20738260"], "coreference_resolved_question": "Which people participated in 1964 Winter Olympics and do not have language named French?", "s_expression_fn": "(DIFF (AND (JOIN participant_in 1964_Winter_Olympics) (JOIN instance_of common_name)) (JOIN languages_spoken,_written_or_signed French))", "predicted_s_expression_fn": "(DIFF (AND (JOIN participant_in 1964_Winter_Olympics) (JOIN instance_of common_name)) (AND (JOIN (R native_language) French) (JOIN instance_of common_name)))", "predicted_s_expression": "", "sparql_attempt_count": 1, "actions": ""}, {"turnID": "943.38.4", "question_type": "Logical Reasoning (All)", "description": "Logical|Difference|Multiple_Relation", "question": "Which political territories have diplomatic relations with Australia and are not the countries of citizenship of Heinrich Anselm Promnitz ? [CTX]", "answer": "Austria, Antigua and Barbuda, The Bahamas, Grenada, Solomon Islands, Denmark, Papua New Guinea, Canada, New Zealand, Jamaica", "s_expression": "(DIFF (AND (JOIN (R P530) Q408) (JOIN P31 Q1048835)) (JOIN (R P27) Q1596573))", "s_expression_cores": ["(AND (JOIN (R P530) Q408) (JOIN P31 Q1048835))", "(JOIN (R P27) Q1596573)"], "sparql_delex": "SELECT ?x WHERE { wd:Q408 wdt:P530 ?x . ?x wdt:P31 wd:Q1048835 .  FILTER NOT EXISTS { wd:Q1596573 wdt:P27 ?x .  } }", "results": ["Q40", "Q781", "Q778", "Q769", "Q685", "Q35", "Q691", "Q16", "Q664", "Q766"], "coreference_resolved_question": "Which political territories have diplomatic relations with Australia and are not the countries of citizenship of Heinrich Anselm Promnitz?", "s_expression_fn": "(DIFF (AND (JOIN (R diplomatic_relation) Australia) (JOIN instance_of political_territorial_entity)) (JOIN (R country_of_citizenship) Heinrich_Anselm_Promnitz))", "predicted_s_expression_fn": "(DIFF (AND (JOIN diplomatic_relation Australia) (JOIN instance_of political_territorial_entity)) (AND (JOIN (R country_of_citizenship) Heinrich_Anselm_Promnitz) (JOIN instance_of political_territorial_entity)))", "predicted_s_expression": "", "sparql_attempt_count": 1, "actions": ""}, {"turnID": "607.80.10", "question_type": "Logical Reasoning (All)", "description": "Logical|Difference|Single_Relation", "question": "Which international organizations were Singapore but not Czech Republic a member of ? [CTX]", "answer": "ASEAN, Alliance of Small Island States, Commonwealth of Nations, Asian Development Bank", "s_expression": "(DIFF (AND (JOIN (R P463) Q334) (JOIN P31 Q484652)) (JOIN (R P463) Q213))", "s_expression_cores": ["(AND (JOIN (R P463) Q334) (JOIN P31 Q484652))", "(JOIN (R P463) Q213)"], "sparql_delex": "SELECT ?x WHERE { wd:Q334 wdt:P463 ?x . ?x wdt:P31 wd:Q484652 .  FILTER NOT EXISTS { wd:Q213 wdt:P463 ?x .  } }", "results": ["Q7768", "Q496967", "Q7785", "Q188822"], "coreference_resolved_question": "Which international organizations were Singapore but not Czech Republic a member of?", "s_expression_fn": "(DIFF (AND (JOIN (R member_of) Singapore) (JOIN instance_of international_organization)) (JOIN (R member_of) Czech_Republic))", "predicted_s_expression_fn": "(DIFF (AND (JOIN member Singapore) (JOIN instance_of international_organization)) (AND (JOIN member Czech_Republic) (JOIN instance_of international_organization)))", "predicted_s_expression": "", "sparql_attempt_count": 2, "actions": ""}, {"turnID": "1503.82.3", "question_type": "Logical Reasoning (All)", "description": "Logical|Difference|Multiple_Relation", "question": "Which administrative territories have a diplomatic relationship with Germany and are not the countries of citizenship of Gazanfer Ayd\u0131n ? [CTX]", "answer": "Some of them are Spain, Czech Republic, Vietnam, Venezuela, Bangladesh, Burundi, Iceland, Ghana, Greece, Tanzania", "s_expression": "(DIFF (AND (JOIN (R P530) Q183) (JOIN P31 Q15617994)) (JOIN (R P27) Q6097490))", "s_expression_cores": ["(AND (JOIN (R P530) Q183) (JOIN P31 Q15617994))", "(JOIN (R P27) Q6097490)"], "sparql_delex": "SELECT ?x WHERE { wd:Q183 wdt:P530 ?x . ?x wdt:P31 wd:Q15617994 .  FILTER NOT EXISTS { wd:Q6097490 wdt:P27 ?x .  } }", "results": ["Q804", "Q801", "Q800", "Q419", "Q668", "Q414", "Q142", "Q55", "Q145", "Q262", "Q148", "Q783", "Q265", "Q833", "Q711", "Q717", "Q252", "Q403", "Q657", "Q258", "Q45", "Q159", "Q41", "Q155", "Q796", "Q794", "Q954", "Q889", "Q884", "Q958", "Q881", "Q739", "Q241", "Q242", "Q811", "Q33", "Q32", "Q31", "Q30", "Q924", "Q36", "Q34", "Q929", "Q39", "Q38", "Q986", "Q423", "Q983", "Q851", "Q733", "Q734", "Q736", "Q730", "Q230", "Q232", "Q233", "Q238", "Q20", "Q1045", "Q1041", "Q27", "Q28", "Q29", "Q1049", "Q189", "Q843", "Q184", "Q1029", "Q1028", "Q786", "Q347", "Q227", "Q225", "Q224", "Q222", "Q96", "Q229", "Q228", "Q17", "Q902", "Q1036", "Q1037", "Q1008", "Q1032", "Q1033", "Q1030", "Q965", "Q967", "Q962", "Q963", "Q298", "Q115", "Q114", "Q117", "Q750", "Q212", "Q213", "Q217", "Q214", "Q215", "Q218", "Q219", "Q912", "Q917", "Q916", "Q1007", "Q1006", "Q1005", "Q1009", "Q974", "Q971", "Q79", "Q77", "Q878", "Q774", "Q948", "Q810", "Q1019", "Q1016", "Q1011", "Q945", "Q869", "Q953"], "coreference_resolved_question": "Which administrative territories have a diplomatic relationship with Germany and are not the countries of citizenship of Gazanfer Ayd\u0131n?", "s_expression_fn": "(DIFF (AND (JOIN (R diplomatic_relation) Germany) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (JOIN (R country_of_citizenship) Gazanfer_Ayd\u0131n))", "predicted_s_expression_fn": "(DIFF (AND (JOIN diplomatic_relation Germany) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (AND (JOIN country_of_citizenship Gazanfer_Ayd\u0131n) (JOIN instance_of designation_for_an_administrative_territorial_entity)))", "predicted_s_expression": "", "sparql_attempt_count": 1, "actions": ""}, {"turnID": "1503.1.7", "question_type": "Logical Reasoning (All)", "description": "Logical|Difference|Single_Relation", "question": "Which people are a native of British Empire but not United States of America ? [CTX]", "answer": "Some of them are William Nicholls, Joseph Bell, Pierre van Ryneveld, William Whitby, Harriet Margaret Louisa Bolus, Anna Wolkoff, James Halliwell-Phillipps, John Dower, William Wyon, James Wood-Mason", "s_expression": "(DIFF (AND (JOIN P27 Q8680) (JOIN P31 Q502895)) (JOIN P27 Q30))", "s_expression_cores": ["(AND (JOIN P27 Q8680) (JOIN P31 Q502895))", "(JOIN P27 Q30)"], "sparql_delex": "SELECT ?x WHERE { ?x wdt:P27 wd:Q8680 . ?x wdt:P31 wd:Q502895 .  FILTER NOT EXISTS { ?x wdt:P27 wd:Q30 .  } }", "results": ["Q4526149", "Q26874381", "Q321691", "Q3161496", "Q4102532", "Q949731", "Q648680", "Q63764", "Q8020269", "Q24206445", "Q3644202", "Q4117185", "Q4766821"], "coreference_resolved_question": "Which people are a native of British Empire but not United States of America?", "s_expression_fn": "(DIFF (AND (JOIN country_of_citizenship British_Empire) (JOIN instance_of common_name)) (JOIN country_of_citizenship United_States_of_America))", "predicted_s_expression_fn": "(DIFF (AND (JOIN (R country_of_citizenship) British_Empire) (JOIN instance_of common_name)) (AND (JOIN (R country_of_citizenship) United_States_of_America) (JOIN instance_of common_name)))", "predicted_s_expression": "", "sparql_attempt_count": 2, "actions": ""}, {"turnID": "1277.88.8", "question_type": "Logical Reasoning (All)", "description": "Logical|Difference|Single_Relation", "question": "Which people have a job as ophthalmologist but not association football player ? [CTX]", "answer": "Some of them are Eric Arnott, Harold Falls, Karl Baas, William Cheselden, Marvin Kwitko, Otto Carl Friedrich Westphal, Ron Gallemore, Max Snodderly, Vivian Balakrishnan, Nicolae Blatt", "s_expression": "(DIFF (AND (JOIN P106 Q12013238) (JOIN P31 Q502895)) (JOIN P106 Q937857))", "s_expression_cores": ["(AND (JOIN P106 Q12013238) (JOIN P31 Q502895))", "(JOIN P106 Q937857)"], "sparql_delex": "SELECT ?x WHERE { ?x wdt:P106 wd:Q12013238 . ?x wdt:P31 wd:Q502895 .  FILTER NOT EXISTS { ?x wdt:P106 wd:Q937857 .  } }", "results": ["Q5541945", "Q6745939", "Q1293521", "Q516221", "Q1712820", "Q16185663", "Q88799", "Q19290866", "Q19613712", "Q15451520", "Q3156081", "Q1148253", "Q1585947", "Q15452999", "Q88262", "Q2572300", "Q5724946", "Q7146739", "Q16225805", "Q5171441", "Q21259060", "Q5650804", "Q14927970", "Q7817174", "Q5534871", "Q536596", "Q15439339", "Q7674629", "Q3381525", "Q123932", "Q2604162", "Q6812653", "Q109808", "Q596386", "Q4399062", "Q88722", "Q6176329", "Q286028", "Q7288872", "Q5076670", "Q3102420", "Q1705267", "Q118013", "Q88867", "Q108791", "Q18921598", "Q6124310", "Q5660643", "Q1403111", "Q949531", "Q3188322", "Q943306", "Q16980765", "Q6145133", "Q1234469", "Q4492523", "Q19803280", "Q690478", "Q5234169", "Q5650069", "Q18705723", "Q19299457", "Q6417473", "Q126672", "Q775137", "Q2416971", "Q2900547", "Q1581985", "Q1733244", "Q117207", "Q8005921", "Q7412088", "Q15300579", "Q1373816", "Q6282574", "Q16744914", "Q329082", "Q1685570", "Q7345570", "Q4707410", "Q574924", "Q5039848", "Q1880759", "Q26456674", "Q16022671", "Q2540254", "Q5235517", "Q108545", "Q126591", "Q16885766", "Q5486114", "Q16095624", "Q3166793", "Q88691", "Q1629656", "Q5585616", "Q6166967", "Q16887181", "Q95531", "Q95537", "Q4701195", "Q695971", "Q32606", "Q5734944", "Q21882799", "Q18377809", "Q15429718", "Q1870301", "Q4679694", "Q74450", "Q1689221", "Q23036663", "Q4718766", "Q109844", "Q118423", "Q21756077", "Q117588", "Q5067839", "Q5644458", "Q6678765", "Q7879847", "Q1064894", "Q88211", "Q87177", "Q7914349", "Q5921007", "Q317556", "Q1912439", "Q7448371", "Q84794", "Q1086022", "Q18911946", "Q15280969", "Q17322754", "Q5485957", "Q22810719", "Q89076", "Q73124", "Q88677", "Q4794452", "Q18686295", "Q5214265", "Q8010362", "Q16059431", "Q7610313", "Q7291460", "Q15100800", "Q78830", "Q6260233", "Q4721385", "Q1683332", "Q5371978", "Q92114", "Q9009173", "Q5237503", "Q6097273", "Q5568313", "Q2000786", "Q7360391", "Q6398738", "Q1803816", "Q12749", "Q4793741", "Q530761", "Q1448887", "Q6720478", "Q5024312", "Q7159371", "Q17199008", "Q15429236", "Q18534967", "Q1715703", "Q4984729", "Q16065770", "Q3165081", "Q4665794", "Q84585", "Q5740892", "Q5349771", "Q73411", "Q7910776", "Q6183174", "Q5644558", "Q15463297", "Q89824", "Q4301230", "Q7150629", "Q2095927", "Q6107436", "Q15457014", "Q1040563", "Q1358632", "Q5536597", "Q664816", "Q16230594", "Q1376280", "Q3131736", "Q1348095", "Q4892918", "Q11849806", "Q4062333", "Q1714544", "Q1499310", "Q60024", "Q97231", "Q6490997", "Q4669287", "Q19043235", "Q4020091", "Q1221054", "Q3383072", "Q18671319", "Q1727360", "Q6769094", "Q3699663", "Q1698023", "Q6286605", "Q15999366", "Q4757684", "Q1796866", "Q3810457", "Q3751742", "Q5301649", "Q7147752", "Q5000871", "Q3188627", "Q16145993", "Q1293100", "Q11696116", "Q512902", "Q2004984", "Q105919", "Q5044560", "Q4821095", "Q7347304", "Q7109550", "Q3186130", "Q6152121", "Q6135461", "Q117569", "Q5940334", "Q5530674", "Q21504210", "Q2848564", "Q18530671", "Q5407665", "Q4340650", "Q5981255", "Q108378", "Q73288", "Q16773169", "Q1215771", "Q5386045", "Q6767104", "Q5344212", "Q1347862", "Q20742631", "Q5987105", "Q20976250", "Q17152217", "Q2149783", "Q18924533", "Q5515394", "Q655736", "Q16239810", "Q7172468", "Q2919473", "Q20685341", "Q1352869", "Q8277714", "Q7235533", "Q96877", "Q24956520", "Q98751", "Q214560", "Q5503888", "Q5079738", "Q87599", "Q5829175", "Q78747", "Q16729381", "Q4241363", "Q11758", "Q6174405", "Q3570679", "Q84438", "Q21166796", "Q2417006", "Q17326992", "Q70616", "Q7937671", "Q6835037", "Q15997344", "Q15854652", "Q15096501", "Q96800", "Q4264486", "Q376319", "Q16330507", "Q44329", "Q17579993", "Q7299163", "Q5980332", "Q12788341", "Q6425876", "Q16001446", "Q15070428", "Q21404486", "Q979712", "Q6216156", "Q7145460", "Q173912", "Q7351951", "Q18645500", "Q14949420", "Q121859", "Q16031442", "Q16243891", "Q16006395", "Q7347343", "Q17495900", "Q7387843", "Q5621515", "Q588798", "Q1040925", "Q8004148", "Q7660380", "Q2679579", "Q3370547", "Q16732280", "Q671930", "Q4993316", "Q2958907", "Q1512020", "Q5544714", "Q7609846", "Q7323940", "Q2062100", "Q104287", "Q15452592", "Q1699656", "Q123315", "Q455868", "Q100745", "Q5250071", "Q89834", "Q1555955", "Q1267600", "Q4793462", "Q7350842", "Q57972", "Q78141", "Q6129039", "Q1048043", "Q95512", "Q20810789", "Q16185360", "Q6227914", "Q16733226", "Q5577184", "Q6793430", "Q1602305", "Q3386627", "Q1505186", "Q16734702", "Q4055631", "Q1505627", "Q2148462", "Q2778350", "Q75103", "Q21023158", "Q27696241", "Q108381", "Q7674491", "Q2364950", "Q3182568", "Q4849922", "Q16016552", "Q1357307", "Q731066", "Q5803828", "Q456449", "Q16011898", "Q16203536", "Q26807776", "Q2856616", "Q6234118", "Q7851325", "Q3560990", "Q6504769", "Q6290197", "Q5040750", "Q16213905", "Q21152144", "Q18534217", "Q5488091", "Q1732991", "Q7790457", "Q1500", "Q6222005", "Q92382", "Q1343970", "Q109840", "Q91838", "Q5556849", "Q2960182", "Q7291887", "Q15064823", "Q4775743", "Q5914996", "Q7358250", "Q7554653", "Q3047163", "Q5238431", "Q18709425", "Q4799217", "Q107354", "Q11285693", "Q6851386", "Q118950", "Q19845096", "Q5339537", "Q4116640", "Q4775763", "Q21528934", "Q4798912", "Q95966", "Q1769966", "Q3936458", "Q5511657", "Q167937", "Q1704416", "Q1675203", "Q21402319", "Q7937846", "Q763138", "Q344522", "Q3089512", "Q4998198", "Q18576353", "Q96883", "Q7153606", "Q16066395", "Q952476", "Q5524385", "Q7648214", "Q16669946", "Q92154", "Q3262360", "Q78970", "Q3086860", "Q5438901", "Q115470", "Q7109711", "Q3141590", "Q5615983", "Q18579871", "Q3749991", "Q3302336", "Q16225046", "Q12324607", "Q17028789", "Q6849623", "Q1558519", "Q571670", "Q11754610", "Q6284165", "Q4123276", "Q120464", "Q16466635", "Q472804", "Q6763638", "Q5340382", "Q1914069", "Q1471379", "Q69692", "Q5344827", "Q1066278", "Q6697086", "Q4216055", "Q4058372", "Q7795024", "Q7494705", "Q2646694", "Q117277", "Q7342462", "Q5498814", "Q4756573", "Q2754563", "Q113801", "Q20742767", "Q6145137", "Q19361429", "Q6390515", "Q6941344", "Q20742112", "Q4400306", "Q5080932", "Q7648848", "Q78860", "Q18546945", "Q16225792", "Q5644976", "Q7117442", "Q214087", "Q16065316", "Q873241", "Q6757391", "Q7332347", "Q7363808", "Q2033800", "Q2871138", "Q6076475", "Q7801037", "Q16733418", "Q15460697", "Q7349546", "Q7929397", "Q3068626", "Q22983013", "Q3112824", "Q15967189", "Q1667755", "Q7171027", "Q7324020", "Q1396979", "Q1492672", "Q13639174", "Q4887384", "Q13534573", "Q1703202", "Q16008178", "Q7173679", "Q119754", "Q85099", "Q95741", "Q6215559", "Q84461", "Q13560773", "Q463557", "Q16731819", "Q5994498", "Q16875293", "Q5721947", "Q7416997", "Q18412505", "Q468579", "Q2172417", "Q87211", "Q4894216", "Q1531814", "Q4828491", "Q7612197", "Q17984400", "Q24141", "Q6698419", "Q26159641", "Q6193328", "Q16000439", "Q2347891", "Q19402633", "Q8010803", "Q826244", "Q7610730", "Q1397809", "Q7412766", "Q7221819", "Q192651", "Q328536", "Q4103270", "Q67987", "Q764397", "Q16206939", "Q5605250", "Q1426704", "Q5039884", "Q1025306", "Q5236068", "Q91929", "Q6989188"], "coreference_resolved_question": "Which people have a job as ophthalmologist but not association football player?", "s_expression_fn": "(DIFF (AND (JOIN occupation ophthalmologist) (JOIN instance_of common_name)) (JOIN occupation association_football_player))", "predicted_s_expression_fn": "(DIFF (AND (JOIN occupation ophthalmologist) (JOIN instance_of common_name)) (AND (JOIN occupation association_football_player) (JOIN instance_of common_name)))", "predicted_s_expression": "", "sparql_attempt_count": 1, "actions": ""}, {"turnID": "390.111.2", "question_type": "Logical Reasoning (All)", "description": "Logical|Difference|Single_Relation|Incomplete", "question": "Which occupations have David Walker as his/her 's career ? [SEP] banker, entrepreneur [SEP] But not Najm Sheikh [CTX]", "answer": "banker", "s_expression": "(DIFF (AND (JOIN (R P106) Q5240781) (JOIN P31 Q12737077)) (JOIN (R P106) Q21105247))", "s_expression_cores": ["(AND (JOIN (R P106) Q5240781) (JOIN P31 Q12737077))", "(JOIN (R P106) Q21105247)"], "sparql_delex": "SELECT ?x WHERE { wd:Q5240781 wdt:P106 ?x . ?x wdt:P31 wd:Q12737077 .  FILTER NOT EXISTS { wd:Q21105247 wdt:P106 ?x .  } }", "results": ["Q806798"], "coreference_resolved_question": "Which occupations have David Walker as his career?", "s_expression_fn": "(DIFF (AND (JOIN (R occupation) David_Walker) (JOIN instance_of occupation)) (JOIN (R occupation) Najm_Sheikh))", "predicted_s_expression_fn": "(DIFF (AND (JOIN (R occupation) David_Walker) (JOIN (R occupation) Najm_Sheikh))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "390.44.12", "question_type": "Logical Reasoning (All)", "description": "Logical|Difference|Single_Relation", "question": "Which political territories are the origins of SheZow but not Maximum Choppage ? [CTX]", "answer": "Canada", "s_expression": "(DIFF (AND (JOIN (R P495) Q1431946) (JOIN P31 Q1048835)) (JOIN (R P495) Q18702359))", "s_expression_cores": ["(AND (JOIN (R P495) Q1431946) (JOIN P31 Q1048835))", "(JOIN (R P495) Q18702359)"], "sparql_delex": "SELECT ?x WHERE { wd:Q1431946 wdt:P495 ?x . ?x wdt:P31 wd:Q1048835 .  FILTER NOT EXISTS { wd:Q18702359 wdt:P495 ?x .  } }", "results": ["Q16"], "coreference_resolved_question": "Which political territories are the origins of SheZow but not Maximum Choppage?", "s_expression_fn": "(DIFF (AND (JOIN (R country_of_origin) SheZow) (JOIN instance_of political_territorial_entity)) (JOIN (R country_of_origin) Maximum_Choppage))", "predicted_s_expression_fn": "(DIFF (AND (JOIN (R country_of_origin) SheZow) (JOIN instance_of political_territorial_entity)) (AND (JOIN (R country_of_origin) Maximum_Choppage) (JOIN instance_of political_territorial_entity)))", "predicted_s_expression": "", "sparql_attempt_count": 1, "actions": ""}, {"turnID": "431.18.6", "question_type": "Logical Reasoning (All)", "description": "Logical|Difference|Single_Relation", "question": "Which collectables have Old Norse language but not English as their original language of creation ? [CTX]", "answer": "Eyrbyggja saga", "s_expression": "(DIFF (AND (JOIN P364 Q35505) (JOIN P31 Q2342494)) (JOIN P364 Q1860))", "s_expression_cores": ["(AND (JOIN P364 Q35505) (JOIN P31 Q2342494))", "(JOIN P364 Q1860)"], "sparql_delex": "SELECT ?x WHERE { ?x wdt:P364 wd:Q35505 . ?x wdt:P31 wd:Q2342494 .  FILTER NOT EXISTS { ?x wdt:P364 wd:Q1860 .  } }", "results": ["Q1385875"], "coreference_resolved_question": "Which collectables have Old Norse language but not English as their original language of creation?", "s_expression_fn": "(DIFF (AND (JOIN original_language_of_film_or_TV_show Old_Norse_language) (JOIN instance_of collectable)) (JOIN original_language_of_film_or_TV_show English))", "predicted_s_expression_fn": "(DIFF (AND (JOIN (R original_language_of_film_or_TV_show) Old_Norse_language) (JOIN instance_of collectable)) (AND (JOIN (R original_language_of_film_or_TV_show) English_language) (JOIN instance_of collectable)))", "predicted_s_expression": "", "sparql_attempt_count": 2, "actions": ""}, {"turnID": "771.152.5", "question_type": "Logical Reasoning (All)", "description": "Logical|Difference|Single_Relation", "question": "Which drugs show a significant interaction with Clarithromycin but not lovastatin ? [CTX]", "answer": "Some of them are Azithromycin, Halofantrine, astemizole, Moxifloxacin, dofetilide, flecainide, droperidol, domperidone, Sparfloxacin, mesoridazine", "s_expression": "(DIFF (AND (JOIN (R P769) Q118551) (JOIN P31 Q8386)) (JOIN (R P769) Q417740))", "s_expression_cores": ["(AND (JOIN (R P769) Q118551) (JOIN P31 Q8386))", "(JOIN (R P769) Q417740)"], "sparql_delex": "SELECT ?x WHERE { wd:Q118551 wdt:P769 ?x . ?x wdt:P31 wd:Q8386 .  FILTER NOT EXISTS { wd:Q417740 wdt:P769 ?x .  } }", "results": ["Q58375", "Q41576", "Q422418", "Q408163", "Q422438", "Q10354103", "Q425120", "Q407972", "Q144085", "Q6821618", "Q424238", "Q410011", "Q412496", "Q4890934", "Q3712521", "Q413591", "Q976559", "Q165399", "Q423757", "Q425295", "Q408637", "Q251347", "Q424940", "Q3791612", "Q417597", "Q174259", "Q419394", "Q417909", "Q947595", "Q423437", "Q409672", "Q179996", "Q421381", "Q7739", "Q416206"], "coreference_resolved_question": "Which drugs show a significant interaction with Clarithromycin but not lovastatin?", "s_expression_fn": "(DIFF (AND (JOIN (R significant_drug_interaction) Clarithromycin) (JOIN instance_of drug)) (JOIN (R significant_drug_interaction) lovastatin))", "predicted_s_expression_fn": "(DIFF (AND (JOIN interacts_with Clarithromycin) (JOIN instance_of drug)) (AND (JOIN interacts_with lovastatin) (JOIN instance_of drug)))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "862.71.2", "question_type": "Logical Reasoning (All)", "description": "Logical|Difference|Single_Relation", "question": "Which occupations have Wilhelm Storck but not Art\u00far Elek as his/her as a career ? [CTX]", "answer": "germanist, romanist, university teacher", "s_expression": "(DIFF (AND (JOIN (R P106) Q105386) (JOIN P31 Q12737077)) (JOIN (R P106) Q988703))", "s_expression_cores": ["(AND (JOIN (R P106) Q105386) (JOIN P31 Q12737077))", "(JOIN (R P106) Q988703)"], "sparql_delex": "SELECT ?x WHERE { wd:Q105386 wdt:P106 ?x . ?x wdt:P31 wd:Q12737077 .  FILTER NOT EXISTS { wd:Q988703 wdt:P106 ?x .  } }", "results": ["Q2599593", "Q2504617", "Q1622272"], "coreference_resolved_question": "Which occupations have Wilhelm Storck but not Art\u00far Elek as his/her as a career?", "s_expression_fn": "(DIFF (AND (JOIN (R occupation) Wilhelm_Storck) (JOIN instance_of occupation)) (JOIN (R occupation) Art\u00far_Elek))", "predicted_s_expression_fn": "(DIFF (AND (JOIN (R occupation) Wilhelm_Storck) (JOIN instance_of occupation)) (AND (JOIN (R occupation) Art\u00far_Elek) (JOIN instance_of occupation)))", "predicted_s_expression": "", "sparql_attempt_count": 1, "actions": ""}, {"turnID": "231.111.7", "question_type": "Logical Reasoning (All)", "description": "Logical|Difference|Single_Relation", "question": "Which works of art originate at Czech Republic but not Hungary ? [CTX]", "answer": "Some of them are Divided We Fall, Little from the Fish Shop, The Damned, Lunacy, Lost in Munich, The Country Teacher, The Ride, Girlie, Golet v \u00fadol\u00ed, An Ambiguous Report About the End of the World", "s_expression": "(DIFF (AND (JOIN P495 Q213) (JOIN P31 Q838948)) (JOIN P495 Q28))", "s_expression_cores": ["(AND (JOIN P495 Q213) (JOIN P31 Q838948))", "(JOIN P495 Q28)"], "sparql_delex": "SELECT ?x WHERE { ?x wdt:P495 wd:Q213 . ?x wdt:P31 wd:Q838948 .  FILTER NOT EXISTS { ?x wdt:P495 wd:Q28 .  } }", "results": ["Q650463", "Q3507676", "Q2368035", "Q12019701", "Q682574", "Q16960278", "Q8057310", "Q3500184", "Q328937", "Q155163", "Q27500565", "Q7548954", "Q5580526", "Q6510710", "Q12020767", "Q3508096", "Q961825", "Q3717045", "Q1138818", "Q1075841", "Q3562744", "Q16160881", "Q3493011", "Q13629026", "Q16946988", "Q18882863", "Q19798911", "Q3502007", "Q7755887", "Q5289110", "Q421835", "Q2428688", "Q3503207", "Q2340628", "Q1310893", "Q7093065", "Q3508003", "Q4636534", "Q13537440", "Q7203905", "Q12035084", "Q5575337", "Q12032430", "Q1812183", "Q492908", "Q1722254", "Q19824677", "Q3501418", "Q7505585", "Q976119", "Q5004118", "Q3274930", "Q23656909", "Q6726709", "Q7426827", "Q12024382", "Q23656959", "Q23305714", "Q20010910", "Q8000525", "Q15951713", "Q18517265", "Q8058481", "Q768103", "Q7096660", "Q3507182", "Q16954342", "Q169296", "Q10859251", "Q7339191", "Q3495139", "Q6798250", "Q6124405", "Q22570084", "Q1343567", "Q5817326", "Q7945043", "Q22075000", "Q11821482", "Q17592291", "Q3504409", "Q3502474", "Q20428287", "Q7903247", "Q6434740", "Q1678575", "Q3399747", "Q12040838", "Q7179532", "Q3123933", "Q7237303", "Q11384898", "Q12049993", "Q25301499", "Q7548533", "Q3505827", "Q5469760", "Q4643911", "Q3497583", "Q20860425", "Q5288786", "Q2631320", "Q7282755", "Q236217", "Q11925830", "Q17270046", "Q10856966", "Q15906152", "Q10860578", "Q14329493", "Q2893352", "Q2640291", "Q213153", "Q3495085", "Q7944818", "Q16956669", "Q5135267", "Q10822367", "Q2535745", "Q26225487", "Q16830050", "Q15534296", "Q19160829", "Q20427937", "Q1169108", "Q1661661", "Q3506769", "Q7749513", "Q12033964", "Q151904", "Q3565938", "Q50929", "Q10855725", "Q11879237", "Q3269855", "Q7546528", "Q1141186", "Q1679422", "Q5966111", "Q11293895", "Q7111727", "Q50941", "Q7907761", "Q7862765", "Q23210483", "Q15627005", "Q5191791", "Q18536141", "Q7108492", "Q11773842", "Q6485059", "Q589953", "Q1794537", "Q10856968", "Q5492613", "Q22117077", "Q10397511", "Q2442813", "Q25339964", "Q3498177", "Q7678491", "Q3503884", "Q3501102", "Q15905872", "Q12041844", "Q2742024", "Q2576243", "Q3512150", "Q20814438", "Q166696", "Q18684463", "Q3009243", "Q7651743", "Q5004784", "Q3561513", "Q7651747", "Q12039065", "Q18507480", "Q12048155", "Q4358469", "Q6989774", "Q20649990", "Q12034614", "Q2566161", "Q18564757", "Q7580780", "Q12031282", "Q3500440", "Q4176279", "Q323275", "Q11719972", "Q2478495", "Q2497808", "Q24521615", "Q4157281", "Q861202", "Q5595418", "Q1195393", "Q538516", "Q3795587", "Q19602481", "Q1490565", "Q3505855", "Q6429064", "Q3501523"], "coreference_resolved_question": "Which works of art originate at Czech Republic but not Hungary?", "s_expression_fn": "(DIFF (AND (JOIN country_of_origin Czech_Republic) (JOIN instance_of work_of_art)) (JOIN country_of_origin Hungary))", "predicted_s_expression_fn": "(DIFF (AND (JOIN (R country_of_origin) Czech_Republic) (JOIN instance_of work_of_art)) (AND (JOIN (R country_of_origin) Hungary) (JOIN instance_of work_of_art)))", "predicted_s_expression": "", "sparql_attempt_count": 2, "actions": ""}, {"turnID": "707.106.6", "question_type": "Logical Reasoning (All)", "description": "Logical|Difference|Single_Relation", "question": "Which drugs interacts with D(2) dopamine receptor but not Muscarinic acetylcholine receptor M1 ? [CTX]", "answer": "Some of them are brexpiprazole, aripiprazole, chlorpromazine, mesoridazine, benzquinamide, sertindole, promazine, pramipexole, pimozide, ziprasidone", "s_expression": "(DIFF (AND (JOIN P129 Q2034004) (JOIN P31 Q8386)) (JOIN P129 Q4847900))", "s_expression_cores": ["(AND (JOIN P129 Q2034004) (JOIN P31 Q8386))", "(JOIN P129 Q4847900)"], "sparql_delex": "SELECT ?x WHERE { ?x wdt:P129 wd:Q2034004 . ?x wdt:P31 wd:Q8386 .  FILTER NOT EXISTS { ?x wdt:P129 wd:Q4847900 .  } }", "results": ["Q419822", "Q58376", "Q424446", "Q423308", "Q4927426", "Q422418", "Q201872", "Q205517", "Q2359690", "Q407972", "Q144085", "Q6821618", "Q269111", "Q424238", "Q6590349", "Q423520", "Q411985", "Q2924764", "Q408588", "Q567927", "Q420590", "Q1752915", "Q4890814", "Q170304", "Q7702355", "Q418050", "Q413581", "Q58614", "Q251347", "Q421304", "Q412443", "Q408535", "Q411188", "Q226905", "Q1452256", "Q420350", "Q415752", "Q418785"], "coreference_resolved_question": "Which drugs interact with D(2) dopamine receptor but not Muscarinic acetylcholine receptor M1?", "s_expression_fn": "(DIFF (AND (JOIN physically_interacts_with D(2)_dopamine_receptor) (JOIN instance_of drug)) (JOIN physically_interacts_with Muscarinic_acetylcholine_receptor_M1))", "predicted_s_expression_fn": "(DIFF (AND (JOIN (R interacts_with) D(2)_dopamine_receptor) (JOIN (R interacts_with) Muscarinic_acetylcholine_receptor_M1))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "908.151.2", "question_type": "Logical Reasoning (All)", "description": "Logical|Difference|Single_Relation", "question": "Which occupations do Jean-Fran\u00e7ois Michel but not Josep F\u00e0brega do for a living ? [CTX]", "answer": "conductor, trumpeter, musicologist", "s_expression": "(DIFF (AND (JOIN (R P106) Q2301899) (JOIN P31 Q12737077)) (JOIN (R P106) Q21088765))", "s_expression_cores": ["(AND (JOIN (R P106) Q2301899) (JOIN P31 Q12737077))", "(JOIN (R P106) Q21088765)"], "sparql_delex": "SELECT ?x WHERE { wd:Q2301899 wdt:P106 ?x . ?x wdt:P31 wd:Q12737077 .  FILTER NOT EXISTS { wd:Q21088765 wdt:P106 ?x .  } }", "results": ["Q158852", "Q17093672", "Q14915627"], "coreference_resolved_question": "Which occupations do Jean-Fran\u00e7ois Michel but not Josep F\u00e0brega do for a living?", "s_expression_fn": "(DIFF (AND (JOIN (R occupation) Jean-Fran\u00e7ois_Michel) (JOIN instance_of occupation)) (JOIN (R occupation) Josep_F\u00e0brega))", "predicted_s_expression_fn": "(DIFF (AND (JOIN (R occupation) Jean-Fran\u00e7ois_Michel) (JOIN instance_of occupation)) (AND (JOIN (R occupation) Josep_F\u00e0brega) (JOIN instance_of occupation)))", "predicted_s_expression": "", "sparql_attempt_count": 1, "actions": ""}, {"turnID": "908.51.7", "question_type": "Logical Reasoning (All)", "description": "Logical|Difference|Single_Relation", "question": "Which recurring events did Argentina national football team but not Alan Hansen participate in ? [CTX]", "answer": "Some of them are 1966 FIFA World Cup, 2014 FIFA World Cup, 1974 FIFA World Cup, 1930 FIFA World Cup, 1962 FIFA World Cup, 1934 FIFA World Cup, 2010 FIFA World Cup, 2002 FIFA World Cup, 1998 FIFA World Cup, 1994 FIFA World Cup", "s_expression": "(DIFF (AND (JOIN (R P1344) Q79800) (JOIN P31 Q15275719)) (JOIN (R P1344) Q374189))", "s_expression_cores": ["(AND (JOIN (R P1344) Q79800) (JOIN P31 Q15275719))", "(JOIN (R P1344) Q374189)"], "sparql_delex": "SELECT ?x WHERE { wd:Q79800 wdt:P1344 ?x . ?x wdt:P31 wd:Q15275719 .  FILTER NOT EXISTS { wd:Q374189 wdt:P1344 ?x .  } }", "results": ["Q176883", "Q166121", "Q48432", "Q101751", "Q134202", "Q1477177", "Q132529", "Q47735", "Q46938", "Q46943", "Q160813", "Q132533", "Q101730", "Q79859"], "coreference_resolved_question": "Which recurring events did Argentina national football team but not Alan Hansen participate in?", "s_expression_fn": "(DIFF (AND (JOIN (R participant_in) Argentina_national_football_team) (JOIN instance_of recurring_event)) (JOIN (R participant_in) Alan_Hansen))", "predicted_s_expression_fn": "(DIFF (AND (JOIN (R participant) Argentina_national_football_team) (JOIN instance_of recurring_event)) (AND (JOIN (R participant) Alan_Hansen) (JOIN instance_of recurring_event)))", "predicted_s_expression": "", "sparql_attempt_count": 2, "actions": ""}, {"turnID": "908.161.6", "question_type": "Logical Reasoning (All)", "description": "Logical|Difference|Single_Relation", "question": "Which chemical bonds represents the molecular function of Zinc finger protein 40 but not Putative pleckstrin homology domain-containing family M member 1P ? [CTX]", "answer": "zinc ion binding", "s_expression": "(DIFF (AND (JOIN (R P680) Q21987236) (JOIN P31 Q44424)) (JOIN (R P680) Q21122004))", "s_expression_cores": ["(AND (JOIN (R P680) Q21987236) (JOIN P31 Q44424))", "(JOIN (R P680) Q21122004)"], "sparql_delex": "SELECT ?x WHERE { wd:Q21987236 wdt:P680 ?x . ?x wdt:P31 wd:Q44424 .  FILTER NOT EXISTS { wd:Q21122004 wdt:P680 ?x .  } }", "results": ["Q14633865"], "coreference_resolved_question": "Which chemical bonds represents the molecular function of Zinc finger protein 40 but not Putative pleckstrin homology domain-containing family M member 1P?", "s_expression_fn": "(DIFF (AND (JOIN (R molecular_function) Zinc_finger_protein_40) (JOIN instance_of chemical_bond)) (JOIN (R molecular_function) Putative_pleckstrin_homology_domain-containing_family_M_member_1P))", "predicted_s_expression_fn": "(DIFF (AND (JOIN (R molecular_function) Zinc_finger_protein_40) (JOIN instance_of chemical_bond)) (AND (JOIN (R molecular_function) Putative_pleckstrin_homology_domain-containing_family_M_member_1P) (JOIN instance_of chemical_bond))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "1344.85.10", "question_type": "Logical Reasoning (All)", "description": "Logical|Difference|Single_Relation", "question": "Which drugs do 5-hydroxytryptamine receptor 2B but not 5-hydroxytryptamine receptor 2C contact with ? [CTX]", "answer": "fluoxetine, melatonin, pindolol, haloperidol, yohimbine", "s_expression": "(DIFF (AND (JOIN (R P129) Q4639596) (JOIN P31 Q8386)) (JOIN (R P129) Q21108118))", "s_expression_cores": ["(AND (JOIN (R P129) Q4639596) (JOIN P31 Q8386))", "(JOIN (R P129) Q21108118)"], "sparql_delex": "SELECT ?x WHERE { wd:Q4639596 wdt:P129 ?x . ?x wdt:P31 wd:Q8386 .  FILTER NOT EXISTS { wd:Q21108118 wdt:P129 ?x .  } }", "results": ["Q422244", "Q180912", "Q418101", "Q251347", "Q412226"], "coreference_resolved_question": "Which drugs do 5-hydroxytryptamine receptor 2B but not 5-hydroxytryptamine receptor 2C contact with?", "s_expression_fn": "(DIFF (AND (JOIN (R physically_interacts_with) 5-hydroxytryptamine_receptor_2B) (JOIN instance_of drug)) (JOIN (R physically_interacts_with) 5-hydroxytryptamine_receptor_2C))", "predicted_s_expression_fn": "(DIFF (AND (JOIN (R target) 5-hydroxytryptamine_receptor_2B) (JOIN instance_of drug)) (AND (JOIN (R target) 5-hydroxytryptamine_receptor_2C) (JOIN instance_of drug)))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "1270.29.5", "question_type": "Logical Reasoning (All)", "description": "Logical|Difference|Single_Relation", "question": "Which political organizations promote conservatism but not Christian democracy ? [CTX]", "answer": "Some of them are National Renewal Alliance Party, National Autonomist Party, Republican Party of Agricultural and Smallholder People, National Union Movement, Homeland Union, Progressive Conservative Party of Ontario, Slovenian Democratic Party, Pakistan Muslim League, Fianna F\u00e1il, New Democratic Party", "s_expression": "(DIFF (AND (JOIN P1142 Q7169) (JOIN P31 Q7210356)) (JOIN P1142 Q209158))", "s_expression_cores": ["(AND (JOIN P1142 Q7169) (JOIN P31 Q7210356))", "(JOIN P1142 Q209158)"], "sparql_delex": "SELECT ?x WHERE { ?x wdt:P1142 wd:Q7169 . ?x wdt:P31 wd:Q7210356 .  FILTER NOT EXISTS { ?x wdt:P1142 wd:Q209158 .  } }", "results": ["Q1807627", "Q602131", "Q2069639", "Q2745857", "Q2330393", "Q2086271", "Q5894952", "Q6106529", "Q1471814", "Q1518057", "Q1067749", "Q667836", "Q887193", "Q1728956", "Q6071313", "Q226085", "Q186867", "Q15890143", "Q7409649", "Q1751732", "Q2035999", "Q5333416", "Q483807", "Q3896654", "Q2823680", "Q7006486", "Q1264535", "Q784586", "Q3181716", "Q2559675", "Q2607801", "Q1054567", "Q3824380", "Q127205", "Q662849", "Q15980705", "Q28699", "Q1054298", "Q1539301", "Q3534813", "Q7314695", "Q1185830", "Q7314659", "Q7200906", "Q1782937", "Q3419948", "Q1288287", "Q15196039", "Q15984928", "Q2064301", "Q420115", "Q7248514", "Q7076484", "Q988305", "Q2496554", "Q3366549", "Q2307833", "Q1247614", "Q548022", "Q2495287", "Q3589480", "Q383693", "Q508898", "Q919043", "Q1277765", "Q1784503", "Q4118786", "Q732852", "Q5594236", "Q1648272", "Q833644", "Q5440412", "Q5163060", "Q6063977", "Q158227", "Q1070371", "Q859825", "Q7165637", "Q4147532", "Q918860", "Q2629532", "Q852304", "Q20916", "Q1155803", "Q6064598", "Q953447", "Q526294", "Q488523", "Q7886824", "Q416916", "Q1422517", "Q9626", "Q1251854", "Q776414", "Q151768", "Q799577", "Q1826873", "Q1124888", "Q3272441", "Q81556", "Q1164022", "Q285457", "Q3326575", "Q2220114", "Q3366632", "Q1254046", "Q832930", "Q833597", "Q667718", "Q5152972", "Q3087604", "Q15980814", "Q1422826", "Q2777993", "Q6063982", "Q2914027", "Q7438011", "Q485704", "Q1432251", "Q457217", "Q1729022", "Q718487", "Q20730633", "Q6540622", "Q7333568", "Q3366634", "Q20081274", "Q2113965", "Q845743", "Q7314631", "Q1123900", "Q2073191", "Q1046657", "Q5440747", "Q948124", "Q2534868", "Q761433", "Q628869", "Q1371314", "Q2992695", "Q284041", "Q5869364", "Q654444", "Q179456", "Q1234101", "Q31360", "Q3513932", "Q1147158", "Q13612721", "Q15980925", "Q7208901", "Q783621", "Q5124481", "Q841253", "Q6017574", "Q2495200", "Q1132236", "Q15980870", "Q784590", "Q783940", "Q826977", "Q5255581", "Q946040", "Q2036754", "Q7981882", "Q1425821", "Q2653155", "Q862603", "Q3366170", "Q739885", "Q4897145", "Q3894843", "Q1164413", "Q932342", "Q692131", "Q1255291", "Q5158911", "Q1540096", "Q808210", "Q1968011", "Q20749344", "Q163347", "Q3929414", "Q567550", "Q2094225", "Q2225652", "Q3366267", "Q2399535", "Q3815065", "Q851087", "Q6317044", "Q15705373", "Q734437", "Q1255232", "Q3243587", "Q7125642", "Q2568847", "Q951851", "Q1523085", "Q2496080", "Q2577092", "Q1148441", "Q216517", "Q651129", "Q1816516", "Q515003", "Q1713552", "Q2113701", "Q14015517", "Q7844512", "Q3657993", "Q2105350", "Q5163022", "Q663461", "Q232595", "Q5187124", "Q23060", "Q1967163", "Q1679630", "Q639673", "Q15980920", "Q15980936", "Q133968", "Q2868020", "Q923401", "Q2610417", "Q3321171", "Q247332", "Q314832", "Q2597606", "Q29468", "Q7248784", "Q15980868", "Q4993358", "Q1559559", "Q7314666", "Q3130920", "Q7570405", "Q3701669", "Q1782535", "Q3612389", "Q3784387", "Q4346005", "Q1140651", "Q1795235", "Q1258654", "Q6122192", "Q223153", "Q2906773", "Q2054654", "Q1185174", "Q4157645", "Q1579466", "Q4902243", "Q3504357", "Q1250133", "Q838448", "Q832976", "Q1770215", "Q1812146", "Q5174899", "Q1143631", "Q1185871", "Q5164300", "Q202609", "Q3366524", "Q143058", "Q694846", "Q3366633", "Q1455532", "Q1968659", "Q864345", "Q6070653", "Q452670", "Q49670", "Q7009697", "Q3401675", "Q339280", "Q6082125", "Q1357724", "Q747333", "Q2632652", "Q117815", "Q7887759", "Q343735", "Q7552735", "Q1270771", "Q14942729", "Q1410626", "Q7550472", "Q241325", "Q489162", "Q644973", "Q372043", "Q529666", "Q15630787", "Q2299546", "Q1048010", "Q15980717", "Q2016845", "Q15980710"], "coreference_resolved_question": "Which political organizations promote conservatism but not Christian democracy?", "s_expression_fn": "(DIFF (AND (JOIN political_ideology conservatism) (JOIN instance_of political_organization)) (JOIN political_ideology Christian_democracy))", "predicted_s_expression_fn": "(DIFF (AND (JOIN (R political_ideology) conservatism) (JOIN instance_of political_organization)) (AND (JOIN (R political_ideology) Christian_democracy) (JOIN instance_of political_organization))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "1436.39.5", "question_type": "Logical Reasoning (All)", "description": "Logical|Difference|Single_Relation", "question": "Which system software are the platforms for which Savage: The Battle for Newerth but not Tomb Raider: Underworld were developed ? [CTX]", "answer": "Linux", "s_expression": "(DIFF (AND (JOIN (R P400) Q1752541) (JOIN P31 Q676202)) (JOIN (R P400) Q915860))", "s_expression_cores": ["(AND (JOIN (R P400) Q1752541) (JOIN P31 Q676202))", "(JOIN (R P400) Q915860)"], "sparql_delex": "SELECT ?x WHERE { wd:Q1752541 wdt:P400 ?x . ?x wdt:P31 wd:Q676202 .  FILTER NOT EXISTS { wd:Q915860 wdt:P400 ?x .  } }", "results": ["Q388"], "coreference_resolved_question": "Which system software are the platforms for which Savage: The Battle for Newerth but not Tomb Raider: Underworld were developed?", "s_expression_fn": "(DIFF (AND (JOIN (R platform) Savage:_The_Battle_for_Newerth) (JOIN instance_of system_software)) (JOIN (R platform) Tomb_Raider:_Underworld))", "predicted_s_expression_fn": "(DIFF (AND (JOIN (R platform) Savage:_The_Battle_for_Newerth) (JOIN instance_of system_software)) (AND (JOIN (R platform) Tomb_Raider:_Underworld) (JOIN instance_of system_software))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "503.125.6", "question_type": "Logical Reasoning (All)", "description": "Logical|Difference|Single_Relation", "question": "Which administrative territories have a diplomatic relationship with Israel but not Germany ? [CTX]", "answer": "Syria, Yemen, Lebanon", "s_expression": "(DIFF (AND (JOIN (R P530) Q801) (JOIN P31 Q15617994)) (JOIN (R P530) Q183))", "s_expression_cores": ["(AND (JOIN (R P530) Q801) (JOIN P31 Q15617994))", "(JOIN (R P530) Q183)"], "sparql_delex": "SELECT ?x WHERE { wd:Q801 wdt:P530 ?x . ?x wdt:P31 wd:Q15617994 .  FILTER NOT EXISTS { wd:Q183 wdt:P530 ?x .  } }", "results": ["Q858", "Q805", "Q822"], "coreference_resolved_question": "Which administrative territories have a diplomatic relationship with Israel but not Germany?", "s_expression_fn": "(DIFF (AND (JOIN (R diplomatic_relation) Israel) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (JOIN (R diplomatic_relation) Germany))", "predicted_s_expression_fn": "(DIFF (AND (JOIN diplomatic_relation Israel) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (AND (JOIN diplomatic_relation Germany) (JOIN instance_of designation_for_an_administrative_territorial_entity)))", "predicted_s_expression": "", "sparql_attempt_count": 1, "actions": ""}, {"turnID": "1445.21.3", "question_type": "Logical Reasoning (All)", "description": "Logical|Difference|Single_Relation", "question": "Which national sports teams took part in 1974 FIFA World Cup but not UEFA Euro 1984 ? [CTX]", "answer": "Some of them are Poland national football team, Congo DR national football team, Chile national football team, Argentina national football team, Uruguay national football team, Sweden national football team, Haiti national football team, Australia national association football team, Netherlands national football team, Brazil national football team", "s_expression": "(DIFF (AND (JOIN (R P1923) Q166121) (JOIN P31 Q1194951)) (JOIN (R P1923) Q182770))", "s_expression_cores": ["(AND (JOIN (R P1923) Q166121) (JOIN P31 Q1194951))", "(JOIN (R P1923) Q182770)"], "sparql_delex": "SELECT ?x WHERE { wd:Q166121 wdt:P1923 ?x . ?x wdt:P31 wd:Q1194951 .  FILTER NOT EXISTS { wd:Q182770 wdt:P1923 ?x .  } }", "results": ["Q180845", "Q166196", "Q34044", "Q676899", "Q83459", "Q172025", "Q236006", "Q268208", "Q47050", "Q152424", "Q79800", "Q134916", "Q270080", "Q160826"], "coreference_resolved_question": "Which national sports teams took part in 1974 FIFA World Cup but not UEFA Euro 1984?", "s_expression_fn": "(DIFF (AND (JOIN (R participating_team) 1974_FIFA_World_Cup) (JOIN instance_of national_sports_team)) (JOIN (R participating_team) UEFA_Euro_1984))", "predicted_s_expression_fn": "(DIFF (AND (JOIN sports_discipline_competed_in 1974_FIFA_World_Cup) (JOIN instance_of national_sports_team)) (AND (JOIN sports_discipline_competed_in UEFA_Euro_1984) (JOIN instance_of national_sports_team)))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "58.42.7", "question_type": "Logical Reasoning (All)", "description": "Logical|Difference|Single_Relation", "question": "Which thoroughfares are situated in Hungary but not Czech Republic ? [CTX]", "answer": "Some of them are Hungarian road 2, Hungarian road 53, Hungarian road 403, Kossuth Street, Eger, M7 motorway, K\u00f6r\u00f6snagyhars\u00e1ny\u2013V\u00e9szt\u0151\u2013Gyoma railway line, M5 motorway, Hungarian road 451, Hungarian road 56, Hungarian road 443", "s_expression": "(DIFF (AND (JOIN P17 Q28) (JOIN P31 Q83620)) (JOIN P17 Q213))", "s_expression_cores": ["(AND (JOIN P17 Q28) (JOIN P31 Q83620))", "(JOIN P17 Q213)"], "sparql_delex": "SELECT ?x WHERE { ?x wdt:P17 wd:Q28 . ?x wdt:P31 wd:Q83620 .  FILTER NOT EXISTS { ?x wdt:P17 wd:Q213 .  } }", "results": ["Q2078433", "Q1485174", "Q589984", "Q1492141", "Q767918", "Q802416", "Q1490221", "Q1491596", "Q18120078", "Q523192", "Q1491059", "Q732625", "Q375312", "Q789446", "Q1484869", "Q1490621", "Q1219870", "Q736543", "Q1490914", "Q854123", "Q724472", "Q47582", "Q1125594", "Q21152436", "Q789476", "Q789471", "Q1492394", "Q789473", "Q686035", "Q789479", "Q689827", "Q947539", "Q1491060", "Q1293193", "Q1490359", "Q678149", "Q788671", "Q2604283", "Q523605", "Q10478772", "Q1490965", "Q789500", "Q678226", "Q1485660", "Q18762183", "Q1491348", "Q1375951", "Q1414711", "Q1492301", "Q258553", "Q468885", "Q1302463", "Q16516109", "Q789466", "Q789464", "Q580571", "Q1490446", "Q789468", "Q962056", "Q17505731", "Q16516080", "Q1485876", "Q1491178", "Q668766", "Q235963", "Q18108316", "Q1491887", "Q1490972", "Q681393", "Q1492253", "Q1484195", "Q1302454", "Q1489853", "Q661444", "Q541426", "Q378610", "Q1413189", "Q1491000", "Q1491769", "Q382905", "Q14571569", "Q1490374", "Q676174", "Q18120080", "Q1490273", "Q429256", "Q674367", "Q1375987", "Q777969", "Q23716490", "Q18099712", "Q1160860", "Q1492083", "Q1492365", "Q1415046", "Q1375386", "Q1415685", "Q16516009", "Q790741", "Q767143", "Q26833668", "Q779833", "Q1317159", "Q12813344", "Q1484928", "Q991853", "Q908195", "Q1490787", "Q630250", "Q788878", "Q723245", "Q851283", "Q851280", "Q1491652", "Q783544", "Q15255963", "Q387023", "Q507442", "Q986792", "Q635177", "Q802551", "Q168020", "Q1375559", "Q233016", "Q1492502", "Q971294", "Q729156", "Q1492293", "Q607298", "Q1111086", "Q1414694", "Q647060", "Q839075", "Q749744", "Q432165", "Q268738", "Q1492344", "Q721768", "Q18116088", "Q1491629", "Q1491362", "Q20439176", "Q1492475", "Q1491287", "Q1489807", "Q780718", "Q1491324", "Q851254", "Q11695050", "Q773910", "Q928483", "Q1491236", "Q1491738", "Q761902", "Q777446", "Q1119484", "Q851265", "Q739236", "Q1414754", "Q851262", "Q733970", "Q1489896", "Q682147", "Q430545", "Q636895", "Q859243", "Q1492034", "Q761443", "Q771331", "Q789506", "Q1486074", "Q178567", "Q789502", "Q9210984", "Q389905", "Q1489722", "Q771134", "Q721757", "Q11695044", "Q20439247", "Q1374957", "Q1491601", "Q629616", "Q1491357", "Q16520734", "Q789490", "Q1491443", "Q918092", "Q1491064", "Q514005", "Q1492320", "Q430998", "Q1125616", "Q1160902", "Q1375976", "Q1492121", "Q9210975", "Q851266"], "coreference_resolved_question": "Which thoroughfares are situated in Hungary but not Czech Republic?", "s_expression_fn": "(DIFF (AND (JOIN country Hungary) (JOIN instance_of thoroughfare)) (JOIN country Czech_Republic))", "predicted_s_expression_fn": "(DIFF (AND (JOIN (R country) Hungary) (JOIN instance_of thoroughfare)) (AND (JOIN (R country) Czech_Republic) (JOIN instance_of thoroughfare))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "1179.0.3", "question_type": "Logical Reasoning (All)", "description": "Logical|Difference|Single_Relation", "question": "Which occupations do George Lamsa but not Antonio Prete do for a living ? [CTX]", "answer": "translator, theologian", "s_expression": "(DIFF (AND (JOIN (R P106) Q721614) (JOIN P31 Q12737077)) (JOIN (R P106) Q3620070))", "s_expression_cores": ["(AND (JOIN (R P106) Q721614) (JOIN P31 Q12737077))", "(JOIN (R P106) Q3620070)"], "sparql_delex": "SELECT ?x WHERE { wd:Q721614 wdt:P106 ?x . ?x wdt:P31 wd:Q12737077 .  FILTER NOT EXISTS { wd:Q3620070 wdt:P106 ?x .  } }", "results": ["Q333634", "Q1234713"], "coreference_resolved_question": "Which occupations do George Lamsa but not Antonio Prete do for a living?", "s_expression_fn": "(DIFF (AND (JOIN (R occupation) George_Lamsa) (JOIN instance_of occupation)) (JOIN (R occupation) Antonio_Prete))", "predicted_s_expression_fn": "(DIFF (AND (JOIN (R occupation) George_Lamsa) (JOIN instance_of occupation)) (AND (JOIN (R occupation) Antonio_Prete) (JOIN instance_of occupation))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "185.91.7", "question_type": "Logical Reasoning (All)", "description": "Logical|Difference|Single_Relation", "question": "Which recurring events did Sweden national football team but not Mexico national football team participate in ? [CTX]", "answer": "1990 FIFA World Cup, 1934 FIFA World Cup, 1938 FIFA World Cup, 1974 FIFA World Cup", "s_expression": "(DIFF (AND (JOIN (R P1344) Q160826) (JOIN P31 Q15275719)) (JOIN (R P1344) Q164089))", "s_expression_cores": ["(AND (JOIN (R P1344) Q160826) (JOIN P31 Q15275719))", "(JOIN (R P1344) Q164089)"], "sparql_delex": "SELECT ?x WHERE { wd:Q160826 wdt:P1344 ?x . ?x wdt:P31 wd:Q15275719 .  FILTER NOT EXISTS { wd:Q164089 wdt:P1344 ?x .  } }", "results": ["Q132529", "Q1477177", "Q131591", "Q166121"], "coreference_resolved_question": "Which recurring events did Sweden national football team but not Mexico national football team participate in?", "s_expression_fn": "(DIFF (AND (JOIN (R participant_in) Sweden_national_football_team) (JOIN instance_of recurring_event)) (JOIN (R participant_in) Mexico_national_football_team))", "predicted_s_expression_fn": "(DIFF (AND (JOIN participant Sweden_national_football_team) (JOIN instance_of recurring_event)) (AND (JOIN participant Mexico_national_football_team) (JOIN instance_of recurring_event)))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "1248.69.13", "question_type": "Logical Reasoning (All)", "description": "Logical|Difference|Single_Relation", "question": "Which administrative territories are Netherlands but not Meelbesstraat located in ? [CTX]", "answer": "Kingdom of the Netherlands", "s_expression": "(DIFF (AND (JOIN (R P17) Q55) (JOIN P31 Q15617994)) (JOIN (R P17) Q19340896))", "s_expression_cores": ["(AND (JOIN (R P17) Q55) (JOIN P31 Q15617994))", "(JOIN (R P17) Q19340896)"], "sparql_delex": "SELECT ?x WHERE { wd:Q55 wdt:P17 ?x . ?x wdt:P31 wd:Q15617994 .  FILTER NOT EXISTS { wd:Q19340896 wdt:P17 ?x .  } }", "results": ["Q29999"], "coreference_resolved_question": "Which administrative territories are Netherlands but not Meelbesstraat located in?", "s_expression_fn": "(DIFF (AND (JOIN (R country) Netherlands) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (JOIN (R country) Meelbesstraat))", "predicted_s_expression_fn": "(DIFF (AND (JOIN (R country) Netherlands) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (AND (JOIN (R country) Meelbesstraat) (JOIN instance_of designation_for_an_administrative_territorial_entity))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "99.30.6", "question_type": "Logical Reasoning (All)", "description": "Logical|Difference|Single_Relation", "question": "Which chemical bonds represent molecular function of phenylalanyl-tRNA synthetase subunit beta    aq_1730 but not chaperone protein DnaJ    CT_341 ? [CTX]", "answer": "magnesium ion binding", "s_expression": "(DIFF (AND (JOIN (R P680) Q23595645) (JOIN P31 Q44424)) (JOIN (R P680) Q21168015))", "s_expression_cores": ["(AND (JOIN (R P680) Q23595645) (JOIN P31 Q44424))", "(JOIN (R P680) Q21168015)"], "sparql_delex": "SELECT ?x WHERE { wd:Q23595645 wdt:P680 ?x . ?x wdt:P31 wd:Q44424 .  FILTER NOT EXISTS { wd:Q21168015 wdt:P680 ?x .  } }", "results": ["Q14860850"], "coreference_resolved_question": "Which chemical bonds represent molecular function of phenylalanyl-tRNA synthetase subunit beta aq_1730 but not chaperone protein DnaJ CT_341?", "s_expression_fn": "(DIFF (AND (JOIN (R molecular_function) phenylalanyl-tRNA_synthetase_subunit_beta____aq_1730) (JOIN instance_of chemical_bond)) (JOIN (R molecular_function) chaperone_protein_DnaJ____CT_341))", "predicted_s_expression_fn": "(DIFF (AND (JOIN (R molecular_function) phenylalanyl-tRNA_synthetase_subunit_beta____aq_1730) (JOIN instance_of chemical_bond)) (AND (JOIN (R molecular_function) chaperone_protein_DnaJ____CT_341) (JOIN instance_of chemical_bond)))", "predicted_s_expression": "", "sparql_attempt_count": 1, "actions": ""}, {"turnID": "493.105.5", "question_type": "Logical Reasoning (All)", "description": "Logical|Difference|Single_Relation", "question": "Which administrative territories are sister towns of Chicago but not Helsinki ? [CTX]", "answer": "Some of them are Warsaw, Toronto, Kiryat Gat, Amman, Galway, Athens, Accra, D\u00fcsseldorf, Mexico City, Durban", "s_expression": "(DIFF (AND (JOIN (R P190) Q1297) (JOIN P31 Q56061)) (JOIN (R P190) Q1757))", "s_expression_cores": ["(AND (JOIN (R P190) Q1297) (JOIN P31 Q56061))", "(JOIN (R P190) Q1757)"], "sparql_delex": "SELECT ?x WHERE { wd:Q1297 wdt:P190 ?x . ?x wdt:P31 wd:Q56061 .  FILTER NOT EXISTS { wd:Q1757 wdt:P190 ?x .  } }", "results": ["Q987", "Q174", "Q216", "Q172", "Q5468", "Q1353", "Q6487", "Q649", "Q3761", "Q490", "Q3711", "Q1524", "Q270", "Q190828", "Q42800", "Q1489", "Q3805", "Q129610", "Q1718", "Q152406"], "coreference_resolved_question": "Which administrative territories are sister towns of Chicago but not Helsinki?", "s_expression_fn": "(DIFF (AND (JOIN (R twinned_administrative_body) Chicago) (JOIN instance_of administrative_territorial_entity)) (JOIN (R twinned_administrative_body) Helsinki))", "predicted_s_expression_fn": "(DIFF (AND (JOIN sister_city Chicago) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (JOIN sister_city Helsinki))", "predicted_s_expression": "", "sparql_attempt_count": 4, "actions": ""}, {"turnID": "1422.91.3", "question_type": "Logical Reasoning (All)", "description": "Logical|Difference|Single_Relation|Incomplete", "question": "What is the nucleic acid sequence that is encoded by exonuclease V subunit beta    O3K_05410 ? [SEP] exonuclease V subunit beta    O3K_05410 [SEP] Which chemical bonds represent molecular function of that nutrient ? [SEP] magnesium ion binding, metal ion binding [SEP] But not hypothetical protein    FTT_0554 [CTX]", "answer": "magnesium ion binding", "s_expression": "(DIFF (AND (JOIN (R P680) Q24282163) (JOIN P31 Q44424)) (JOIN (R P680) Q21631416))", "s_expression_cores": ["(AND (JOIN (R P680) Q24282163) (JOIN P31 Q44424))", "(JOIN (R P680) Q21631416)"], "sparql_delex": "SELECT ?x WHERE { wd:Q24282163 wdt:P680 ?x . ?x wdt:P31 wd:Q44424 .  FILTER NOT EXISTS { wd:Q21631416 wdt:P680 ?x .  } }", "results": ["Q14860850"], "coreference_resolved_question": "Which chemical bonds represent molecular function of exonuclease V subunit beta?", "s_expression_fn": "(DIFF (AND (JOIN (R molecular_function) exonuclease_V_subunit_beta____O3K_05410) (JOIN instance_of chemical_bond)) (JOIN (R molecular_function) hypothetical_protein____FTT_0554))", "predicted_s_expression_fn": "(DIFF (AND (JOIN (R molecular_function) exonuclease_V_subunit_beta____O3K_05410) (JOIN instance_of chemical_bond)) (JOIN (R molecular_function) hypothetical_protein____FTT_0554))", "predicted_s_expression": "(DIFF (AND (JOIN (R P680) Q24282163) (JOIN P31 Q44424)) (JOIN (R P680) Q21631416))", "sparql_attempt_count": 2, "actions": "SELECT ?x WHERE { wd:Q24282163 wdt:P680 ?x . ?x wdt:P31 wd:Q44424 . FILTER NOT EXISTS { wd:Q21631416 wdt:P680 ?x . } }"}, {"turnID": "1352.42.3", "question_type": "Logical Reasoning (All)", "description": "Logical|Difference|Single_Relation|Incomplete", "question": "Which city was Pierre Laffont born in ? [SEP] Marseille [SEP] Which administrative territories are the sister cities of that city ? [SEP] Shanghai, Odessa, Naples [SEP] But not Bologna [CTX]", "answer": "Some of them are Khemisset, Dakar, Marrakesh, Odessa, Ramat Gan, K\u014dbe, Haifa, Beirut, Piraeus, Shanghai", "s_expression": "(DIFF (AND (JOIN (R P190) Q23482) (JOIN P31 Q56061)) (JOIN (R P190) Q1891))", "s_expression_cores": ["(AND (JOIN (R P190) Q23482) (JOIN P31 Q56061))", "(JOIN (R P190) Q1891)"], "sparql_delex": "SELECT ?x WHERE { wd:Q23482 wdt:P190 ?x . ?x wdt:P31 wd:Q56061 .  FILTER NOT EXISTS { wd:Q1891 wdt:P190 ?x .  } }", "results": ["Q3718", "Q41621", "Q8686", "Q1874", "Q1748", "Q12892", "Q192807", "Q185632", "Q4093", "Q2634", "Q58976", "Q3820", "Q1046653", "Q101625", "Q48320", "Q1449"], "coreference_resolved_question": "Which administrative territories are the sister cities of Marseille?", "s_expression_fn": "(DIFF (AND (JOIN (R twinned_administrative_body) Marseille) (JOIN instance_of administrative_territorial_entity)) (JOIN (R twinned_administrative_body) Bologna))", "predicted_s_expression_fn": "(DIFF (AND (JOIN twinned_administrative_body Marseille) (JOIN instance_of designation_for_an_administrative_territorial_entity)) (JOIN twinned_administrative_body Bologna))", "predicted_s_expression": "(DIFF (AND (JOIN P190 Q23482) (JOIN P31 Q56061)) (JOIN P190 Q1891))", "sparql_attempt_count": 2, "actions": "SELECT ?x WHERE { ?x wdt:P190 wd:Q23482 . ?x wdt:P31 wd:Q56061 . FILTER NOT EXISTS { ?x wdt:P190 wd:Q1891 . } }"}]